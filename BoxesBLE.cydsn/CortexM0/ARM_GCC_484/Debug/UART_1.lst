ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	UART_1_initVar
  18              		.bss
  19              		.type	UART_1_initVar, %object
  20              		.size	UART_1_initVar, 1
  21              	UART_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.UART_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	UART_1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	UART_1_Start, %function
  29              	UART_1_Start:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1.c"
   1:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC4/UART_1.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/UART_1.c **** *
   5:.\Generated_Source\PSoC4/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/UART_1.c **** *
   8:.\Generated_Source\PSoC4/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_1.c **** *
  10:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_1.c **** 
  17:.\Generated_Source\PSoC4/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_IntClock.h"
  20:.\Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC4/UART_1.c **** 
  22:.\Generated_Source\PSoC4/UART_1.c **** 
  23:.\Generated_Source\PSoC4/UART_1.c **** /***************************************
  24:.\Generated_Source\PSoC4/UART_1.c **** * Global data allocation
  25:.\Generated_Source\PSoC4/UART_1.c **** ***************************************/
  26:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 2


  27:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:.\Generated_Source\PSoC4/UART_1.c **** 
  29:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:.\Generated_Source\PSoC4/UART_1.c **** 
  35:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:.\Generated_Source\PSoC4/UART_1.c **** 
  48:.\Generated_Source\PSoC4/UART_1.c **** 
  49:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
  51:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC4/UART_1.c **** *
  53:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  54:.\Generated_Source\PSoC4/UART_1.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_Enable() function.
  58:.\Generated_Source\PSoC4/UART_1.c **** *
  59:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
  60:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC4/UART_1.c **** *
  62:.\Generated_Source\PSoC4/UART_1.c **** * Return:
  63:.\Generated_Source\PSoC4/UART_1.c **** *  None.
  64:.\Generated_Source\PSoC4/UART_1.c **** *
  65:.\Generated_Source\PSoC4/UART_1.c **** * Global variables:
  66:.\Generated_Source\PSoC4/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC4/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC4/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:.\Generated_Source\PSoC4/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC4/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:.\Generated_Source\PSoC4/UART_1.c **** *
  72:.\Generated_Source\PSoC4/UART_1.c **** * Reentrant:
  73:.\Generated_Source\PSoC4/UART_1.c **** *  No.
  74:.\Generated_Source\PSoC4/UART_1.c **** *
  75:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void) 
  77:.\Generated_Source\PSoC4/UART_1.c **** {
  32              		.loc 1 77 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 3


  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC4/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC4/UART_1.c ****     if(UART_1_initVar == 0u)
  40              		.loc 1 79 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC4/UART_1.c ****     {
  81:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
  45              		.loc 1 81 0
  46 000c FFF7FEFF 		bl	UART_1_Init
  82:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u;
  47              		.loc 1 82 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  83:.\Generated_Source\PSoC4/UART_1.c ****     }
  84:.\Generated_Source\PSoC4/UART_1.c **** 
  85:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
  52              		.loc 1 85 0
  53 0016 FFF7FEFF 		bl	UART_1_Enable
  86:.\Generated_Source\PSoC4/UART_1.c **** }
  54              		.loc 1 86 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	UART_1_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	UART_1_Start, .-UART_1_Start
  65              		.section	.text.UART_1_Init,"ax",%progbits
  66              		.align	2
  67              		.global	UART_1_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	UART_1_Init, %function
  71              	UART_1_Init:
  72              	.LFB3:
  87:.\Generated_Source\PSoC4/UART_1.c **** 
  88:.\Generated_Source\PSoC4/UART_1.c **** 
  89:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
  91:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  92:.\Generated_Source\PSoC4/UART_1.c **** *
  93:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  94:.\Generated_Source\PSoC4/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC4/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:.\Generated_Source\PSoC4/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC4/UART_1.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC4/UART_1.c **** *
  99:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 4


 100:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 101:.\Generated_Source\PSoC4/UART_1.c **** *
 102:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 103:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 104:.\Generated_Source\PSoC4/UART_1.c **** *
 105:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void) 
 107:.\Generated_Source\PSoC4/UART_1.c **** {
  73              		.loc 1 107 0
  74              		.cfi_startproc
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:.\Generated_Source\PSoC4/UART_1.c **** 
 110:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC4/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_errorStatus = 0u;
 115:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC4/UART_1.c **** 
 117:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC4/UART_1.c **** 
 123:.\Generated_Source\PSoC4/UART_1.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  81              		.loc 1 124 0
  82 0004 034B     		ldr	r3, .L6
  83 0006 7222     		mov	r2, #114
  84 0008 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  85              		.loc 1 126 0
  86 000a 034B     		ldr	r3, .L6+4
  87 000c 2022     		mov	r2, #32
  88 000e 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:.\Generated_Source\PSoC4/UART_1.c **** 
 129:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC4/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:.\Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC4/UART_1.c **** 
 136:.\Generated_Source\PSoC4/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
 139:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 5


 141:.\Generated_Source\PSoC4/UART_1.c ****         #else
 142:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC4/UART_1.c **** 
 146:.\Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC4/UART_1.c ****         #else
 150:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC4/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC4/UART_1.c **** 
 153:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:.\Generated_Source\PSoC4/UART_1.c **** 
 155:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister( \
 157:.\Generated_Source\PSoC4/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC4/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC4/UART_1.c **** }
  89              		.loc 1 160 0
  90 0010 BD46     		mov	sp, r7
  91              		@ sp needed
  92 0012 80BD     		pop	{r7, pc}
  93              	.L7:
  94              		.align	2
  95              	.L6:
  96 0014 82000F40 		.word	1074724994
  97 0018 80000F40 		.word	1074724992
  98              		.cfi_endproc
  99              	.LFE3:
 100              		.size	UART_1_Init, .-UART_1_Init
 101              		.section	.text.UART_1_Enable,"ax",%progbits
 102              		.align	2
 103              		.global	UART_1_Enable
 104              		.code	16
 105              		.thumb_func
 106              		.type	UART_1_Enable, %function
 107              	UART_1_Enable:
 108              	.LFB4:
 161:.\Generated_Source\PSoC4/UART_1.c **** 
 162:.\Generated_Source\PSoC4/UART_1.c **** 
 163:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 165:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/UART_1.c **** *
 167:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC4/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:.\Generated_Source\PSoC4/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC4/UART_1.c **** *  operation.
 172:.\Generated_Source\PSoC4/UART_1.c **** 
 173:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 174:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 175:.\Generated_Source\PSoC4/UART_1.c **** *
 176:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 177:.\Generated_Source\PSoC4/UART_1.c **** *  None.
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 6


 178:.\Generated_Source\PSoC4/UART_1.c **** *
 179:.\Generated_Source\PSoC4/UART_1.c **** * Global Variables:
 180:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC4/UART_1.c **** *
 182:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void) 
 184:.\Generated_Source\PSoC4/UART_1.c **** {
 109              		.loc 1 184 0
 110              		.cfi_startproc
 111 0000 90B5     		push	{r4, r7, lr}
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 83B0     		sub	sp, sp, #12
 117              		.cfi_def_cfa_offset 24
 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 120              		.loc 1 186 0
 121 0006 FC1D     		add	r4, r7, #7
 122 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 123 000c 031C     		mov	r3, r0
 124 000e 2370     		strb	r3, [r4]
 187:.\Generated_Source\PSoC4/UART_1.c **** 
 188:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:.\Generated_Source\PSoC4/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 125              		.loc 1 190 0
 126 0010 0D4B     		ldr	r3, .L9
 127 0012 0D4A     		ldr	r2, .L9
 128 0014 1278     		ldrb	r2, [r2]
 129 0016 D2B2     		uxtb	r2, r2
 130 0018 2021     		mov	r1, #32
 131 001a 0A43     		orr	r2, r1
 132 001c D2B2     		uxtb	r2, r2
 133 001e 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC4/UART_1.c **** 
 192:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 134              		.loc 1 193 0
 135 0020 0A4B     		ldr	r3, .L9+4
 136 0022 0A4A     		ldr	r2, .L9+4
 137 0024 1278     		ldrb	r2, [r2]
 138 0026 D2B2     		uxtb	r2, r2
 139 0028 1021     		mov	r1, #16
 140 002a 0A43     		orr	r2, r1
 141 002c D2B2     		uxtb	r2, r2
 142 002e 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC4/UART_1.c **** 
 195:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableRxInt();
 197:.\Generated_Source\PSoC4/UART_1.c **** 
 198:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 7


 201:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:.\Generated_Source\PSoC4/UART_1.c **** 
 204:.\Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:.\Generated_Source\PSoC4/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC4/UART_1.c **** 
 210:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 212:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 215:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC4/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC4/UART_1.c **** 
 218:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 143              		.loc 1 219 0
 144 0030 FF20     		mov	r0, #255
 145 0032 FFF7FEFF 		bl	UART_1_IntClock_StartEx
 220:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC4/UART_1.c **** 
 222:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 146              		.loc 1 222 0
 147 0036 FB1D     		add	r3, r7, #7
 148 0038 1B78     		ldrb	r3, [r3]
 149 003a 181C     		mov	r0, r3
 150 003c FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC4/UART_1.c **** }
 151              		.loc 1 223 0
 152 0040 BD46     		mov	sp, r7
 153 0042 03B0     		add	sp, sp, #12
 154              		@ sp needed
 155 0044 90BD     		pop	{r4, r7, pc}
 156              	.L10:
 157 0046 C046     		.align	2
 158              	.L9:
 159 0048 92000F40 		.word	1074725010
 160 004c 90000F40 		.word	1074725008
 161              		.cfi_endproc
 162              	.LFE4:
 163              		.size	UART_1_Enable, .-UART_1_Enable
 164              		.section	.text.UART_1_Stop,"ax",%progbits
 165              		.align	2
 166              		.global	UART_1_Stop
 167              		.code	16
 168              		.thumb_func
 169              		.type	UART_1_Stop, %function
 170              	UART_1_Stop:
 171              	.LFB5:
 224:.\Generated_Source\PSoC4/UART_1.c **** 
 225:.\Generated_Source\PSoC4/UART_1.c **** 
 226:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 228:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 8


 229:.\Generated_Source\PSoC4/UART_1.c **** *
 230:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 231:.\Generated_Source\PSoC4/UART_1.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC4/UART_1.c **** *
 233:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 234:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 235:.\Generated_Source\PSoC4/UART_1.c **** *
 236:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 237:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 238:.\Generated_Source\PSoC4/UART_1.c **** *
 239:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void) 
 241:.\Generated_Source\PSoC4/UART_1.c **** {
 172              		.loc 1 241 0
 173              		.cfi_startproc
 174 0000 90B5     		push	{r4, r7, lr}
 175              		.cfi_def_cfa_offset 12
 176              		.cfi_offset 4, -12
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 83B0     		sub	sp, sp, #12
 180              		.cfi_def_cfa_offset 24
 181 0004 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 183              		.loc 1 243 0
 184 0006 FC1D     		add	r4, r7, #7
 185 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 186 000c 031C     		mov	r3, r0
 187 000e 2370     		strb	r3, [r4]
 244:.\Generated_Source\PSoC4/UART_1.c **** 
 245:.\Generated_Source\PSoC4/UART_1.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 188              		.loc 1 247 0
 189 0010 0C4B     		ldr	r3, .L12
 190 0012 0C4A     		ldr	r2, .L12
 191 0014 1278     		ldrb	r2, [r2]
 192 0016 D2B2     		uxtb	r2, r2
 193 0018 2021     		mov	r1, #32
 194 001a 8A43     		bic	r2, r1
 195 001c D2B2     		uxtb	r2, r2
 196 001e 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:.\Generated_Source\PSoC4/UART_1.c **** 
 250:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:.\Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:.\Generated_Source\PSoC4/UART_1.c **** 
 256:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 197              		.loc 1 257 0
 198 0020 FFF7FEFF 		bl	UART_1_IntClock_Stop
 258:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 9


 259:.\Generated_Source\PSoC4/UART_1.c **** 
 260:.\Generated_Source\PSoC4/UART_1.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 199              		.loc 1 262 0
 200 0024 084B     		ldr	r3, .L12+4
 201 0026 084A     		ldr	r2, .L12+4
 202 0028 1278     		ldrb	r2, [r2]
 203 002a D2B2     		uxtb	r2, r2
 204 002c 1021     		mov	r1, #16
 205 002e 8A43     		bic	r2, r1
 206 0030 D2B2     		uxtb	r2, r2
 207 0032 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC4/UART_1.c **** 
 264:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableRxInt();
 266:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:.\Generated_Source\PSoC4/UART_1.c **** 
 269:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 271:.\Generated_Source\PSoC4/UART_1.c **** 
 272:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 274:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:.\Generated_Source\PSoC4/UART_1.c **** 
 277:.\Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 208              		.loc 1 277 0
 209 0034 FB1D     		add	r3, r7, #7
 210 0036 1B78     		ldrb	r3, [r3]
 211 0038 181C     		mov	r0, r3
 212 003a FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC4/UART_1.c **** }
 213              		.loc 1 278 0
 214 003e BD46     		mov	sp, r7
 215 0040 03B0     		add	sp, sp, #12
 216              		@ sp needed
 217 0042 90BD     		pop	{r4, r7, pc}
 218              	.L13:
 219              		.align	2
 220              	.L12:
 221 0044 92000F40 		.word	1074725010
 222 0048 90000F40 		.word	1074725008
 223              		.cfi_endproc
 224              	.LFE5:
 225              		.size	UART_1_Stop, .-UART_1_Stop
 226              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 227              		.align	2
 228              		.global	UART_1_ReadControlRegister
 229              		.code	16
 230              		.thumb_func
 231              		.type	UART_1_ReadControlRegister, %function
 232              	UART_1_ReadControlRegister:
 233              	.LFB6:
 279:.\Generated_Source\PSoC4/UART_1.c **** 
 280:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 10


 281:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 284:.\Generated_Source\PSoC4/UART_1.c **** *
 285:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 286:.\Generated_Source\PSoC4/UART_1.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC4/UART_1.c **** *
 288:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 290:.\Generated_Source\PSoC4/UART_1.c **** *
 291:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 292:.\Generated_Source\PSoC4/UART_1.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC4/UART_1.c **** *
 294:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC4/UART_1.c **** {
 234              		.loc 1 296 0
 235              		.cfi_startproc
 236 0000 80B5     		push	{r7, lr}
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC4/UART_1.c ****         return(0u);
 299:.\Generated_Source\PSoC4/UART_1.c ****     #else
 300:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_CONTROL_REG);
 242              		.loc 1 300 0
 243 0004 024B     		ldr	r3, .L16
 244 0006 1B78     		ldrb	r3, [r3]
 245 0008 DBB2     		uxtb	r3, r3
 301:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC4/UART_1.c **** }
 246              		.loc 1 302 0
 247 000a 181C     		mov	r0, r3
 248 000c BD46     		mov	sp, r7
 249              		@ sp needed
 250 000e 80BD     		pop	{r7, pc}
 251              	.L17:
 252              		.align	2
 253              	.L16:
 254 0010 73000F40 		.word	1074724979
 255              		.cfi_endproc
 256              	.LFE6:
 257              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 258              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 259              		.align	2
 260              		.global	UART_1_WriteControlRegister
 261              		.code	16
 262              		.thumb_func
 263              		.type	UART_1_WriteControlRegister, %function
 264              	UART_1_WriteControlRegister:
 265              	.LFB7:
 303:.\Generated_Source\PSoC4/UART_1.c **** 
 304:.\Generated_Source\PSoC4/UART_1.c **** 
 305:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 11


 306:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 308:.\Generated_Source\PSoC4/UART_1.c **** *
 309:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 310:.\Generated_Source\PSoC4/UART_1.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC4/UART_1.c **** *
 312:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 313:.\Generated_Source\PSoC4/UART_1.c **** *  control:  control register value
 314:.\Generated_Source\PSoC4/UART_1.c **** *
 315:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 316:.\Generated_Source\PSoC4/UART_1.c **** *  None.
 317:.\Generated_Source\PSoC4/UART_1.c **** *
 318:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC4/UART_1.c **** {
 266              		.loc 1 320 0
 267              		.cfi_startproc
 268 0000 80B5     		push	{r7, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 82B0     		sub	sp, sp, #8
 273              		.cfi_def_cfa_offset 16
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 276 0006 021C     		mov	r2, r0
 277 0008 FB1D     		add	r3, r7, #7
 278 000a 1A70     		strb	r2, [r3]
 321:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC4/UART_1.c ****         if(0u != control)
 323:.\Generated_Source\PSoC4/UART_1.c ****         {
 324:.\Generated_Source\PSoC4/UART_1.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC4/UART_1.c ****         }
 326:.\Generated_Source\PSoC4/UART_1.c ****     #else
 327:.\Generated_Source\PSoC4/UART_1.c ****        UART_1_CONTROL_REG = control;
 279              		.loc 1 327 0
 280 000c 034B     		ldr	r3, .L19
 281 000e FA1D     		add	r2, r7, #7
 282 0010 1278     		ldrb	r2, [r2]
 283 0012 1A70     		strb	r2, [r3]
 328:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC4/UART_1.c **** }
 284              		.loc 1 329 0
 285 0014 BD46     		mov	sp, r7
 286 0016 02B0     		add	sp, sp, #8
 287              		@ sp needed
 288 0018 80BD     		pop	{r7, pc}
 289              	.L20:
 290 001a C046     		.align	2
 291              	.L19:
 292 001c 73000F40 		.word	1074724979
 293              		.cfi_endproc
 294              	.LFE7:
 295              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 296              		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 297              		.align	2
 298              		.global	UART_1_SetRxInterruptMode
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 12


 299              		.code	16
 300              		.thumb_func
 301              		.type	UART_1_SetRxInterruptMode, %function
 302              	UART_1_SetRxInterruptMode:
 303              	.LFB8:
 330:.\Generated_Source\PSoC4/UART_1.c **** 
 331:.\Generated_Source\PSoC4/UART_1.c **** 
 332:.\Generated_Source\PSoC4/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC4/UART_1.c ****     *
 337:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 338:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC4/UART_1.c ****     *
 340:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 341:.\Generated_Source\PSoC4/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC4/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC4/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC4/UART_1.c ****     *
 352:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 353:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 354:.\Generated_Source\PSoC4/UART_1.c ****     *
 355:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 356:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC4/UART_1.c ****     *
 358:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC4/UART_1.c ****     {
 304              		.loc 1 360 0
 305              		.cfi_startproc
 306 0000 80B5     		push	{r7, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 82B0     		sub	sp, sp, #8
 311              		.cfi_def_cfa_offset 16
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 314 0006 021C     		mov	r2, r0
 315 0008 FB1D     		add	r3, r7, #7
 316 000a 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 317              		.loc 1 361 0
 318 000c 034B     		ldr	r3, .L22
 319 000e FA1D     		add	r2, r7, #7
 320 0010 1278     		ldrb	r2, [r2]
 321 0012 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC4/UART_1.c ****     }
 322              		.loc 1 362 0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 13


 323 0014 BD46     		mov	sp, r7
 324 0016 02B0     		add	sp, sp, #8
 325              		@ sp needed
 326 0018 80BD     		pop	{r7, pc}
 327              	.L23:
 328 001a C046     		.align	2
 329              	.L22:
 330 001c 80000F40 		.word	1074724992
 331              		.cfi_endproc
 332              	.LFE8:
 333              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 334              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 335              		.align	2
 336              		.global	UART_1_ReadRxData
 337              		.code	16
 338              		.thumb_func
 339              		.type	UART_1_ReadRxData, %function
 340              	UART_1_ReadRxData:
 341              	.LFB9:
 363:.\Generated_Source\PSoC4/UART_1.c **** 
 364:.\Generated_Source\PSoC4/UART_1.c **** 
 365:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC4/UART_1.c ****     *
 369:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 370:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC4/UART_1.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC4/UART_1.c ****     *
 373:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 374:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 375:.\Generated_Source\PSoC4/UART_1.c ****     *
 376:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 377:.\Generated_Source\PSoC4/UART_1.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC4/UART_1.c ****     *
 379:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 380:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC4/UART_1.c ****     *
 388:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 389:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 390:.\Generated_Source\PSoC4/UART_1.c ****     *
 391:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:.\Generated_Source\PSoC4/UART_1.c ****     {
 342              		.loc 1 393 0
 343              		.cfi_startproc
 344 0000 80B5     		push	{r7, lr}
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 14


 349              		.cfi_def_cfa_offset 16
 350 0004 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC4/UART_1.c **** 
 396:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC4/UART_1.c **** 
 398:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC4/UART_1.c **** 
 401:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 403:.\Generated_Source\PSoC4/UART_1.c **** 
 404:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:.\Generated_Source\PSoC4/UART_1.c **** 
 407:.\Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC4/UART_1.c ****         {
 409:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC4/UART_1.c **** 
 412:.\Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC4/UART_1.c ****             {
 414:.\Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC4/UART_1.c ****             }
 416:.\Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC4/UART_1.c **** 
 419:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC4/UART_1.c ****             {
 421:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC4/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:.\Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC4/UART_1.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC4/UART_1.c ****                             */
 430:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC4/UART_1.c ****                         }
 432:.\Generated_Source\PSoC4/UART_1.c ****                     #else
 433:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC4/UART_1.c ****             }
 437:.\Generated_Source\PSoC4/UART_1.c ****         }
 438:.\Generated_Source\PSoC4/UART_1.c ****         else
 439:.\Generated_Source\PSoC4/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:.\Generated_Source\PSoC4/UART_1.c ****         }
 442:.\Generated_Source\PSoC4/UART_1.c **** 
 443:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 444:.\Generated_Source\PSoC4/UART_1.c **** 
 445:.\Generated_Source\PSoC4/UART_1.c ****     #else
 446:.\Generated_Source\PSoC4/UART_1.c **** 
 447:.\Generated_Source\PSoC4/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 15


 448:.\Generated_Source\PSoC4/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 352              		.loc 1 448 0
 353 0006 054A     		ldr	r2, .L26
 354 0008 FB1D     		add	r3, r7, #7
 355 000a 1278     		ldrb	r2, [r2]
 356 000c 1A70     		strb	r2, [r3]
 449:.\Generated_Source\PSoC4/UART_1.c **** 
 450:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC4/UART_1.c **** 
 452:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 357              		.loc 1 452 0
 358 000e FB1D     		add	r3, r7, #7
 359 0010 1B78     		ldrb	r3, [r3]
 453:.\Generated_Source\PSoC4/UART_1.c ****     }
 360              		.loc 1 453 0
 361 0012 181C     		mov	r0, r3
 362 0014 BD46     		mov	sp, r7
 363 0016 02B0     		add	sp, sp, #8
 364              		@ sp needed
 365 0018 80BD     		pop	{r7, pc}
 366              	.L27:
 367 001a C046     		.align	2
 368              	.L26:
 369 001c 40000F40 		.word	1074724928
 370              		.cfi_endproc
 371              	.LFE9:
 372              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 373              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 374              		.align	2
 375              		.global	UART_1_ReadRxStatus
 376              		.code	16
 377              		.thumb_func
 378              		.type	UART_1_ReadRxStatus, %function
 379              	UART_1_ReadRxStatus:
 380              	.LFB10:
 454:.\Generated_Source\PSoC4/UART_1.c **** 
 455:.\Generated_Source\PSoC4/UART_1.c **** 
 456:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC4/UART_1.c ****     *
 460:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 461:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC4/UART_1.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC4/UART_1.c ****     *
 464:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 465:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 466:.\Generated_Source\PSoC4/UART_1.c ****     *
 467:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 468:.\Generated_Source\PSoC4/UART_1.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC4/UART_1.c ****     *
 470:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effect:
 471:.\Generated_Source\PSoC4/UART_1.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC4/UART_1.c ****     *  register read.
 475:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 16


 476:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 477:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC4/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC4/UART_1.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC4/UART_1.c ****     *   bits.
 483:.\Generated_Source\PSoC4/UART_1.c ****     *
 484:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC4/UART_1.c ****     {
 381              		.loc 1 486 0
 382              		.cfi_startproc
 383 0000 80B5     		push	{r7, lr}
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 7, -8
 386              		.cfi_offset 14, -4
 387 0002 82B0     		sub	sp, sp, #8
 388              		.cfi_def_cfa_offset 16
 389 0004 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC4/UART_1.c ****         uint8 status;
 488:.\Generated_Source\PSoC4/UART_1.c **** 
 489:.\Generated_Source\PSoC4/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 391              		.loc 1 489 0
 392 0006 064B     		ldr	r3, .L30
 393 0008 1B78     		ldrb	r3, [r3]
 394 000a D9B2     		uxtb	r1, r3
 395 000c FB1D     		add	r3, r7, #7
 396 000e 7F22     		mov	r2, #127
 397 0010 0A40     		and	r2, r1
 398 0012 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/UART_1.c **** 
 491:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC4/UART_1.c ****         {
 494:.\Generated_Source\PSoC4/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC4/UART_1.c ****         }
 497:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC4/UART_1.c **** 
 499:.\Generated_Source\PSoC4/UART_1.c ****         return(status);
 399              		.loc 1 499 0
 400 0014 FB1D     		add	r3, r7, #7
 401 0016 1B78     		ldrb	r3, [r3]
 500:.\Generated_Source\PSoC4/UART_1.c ****     }
 402              		.loc 1 500 0
 403 0018 181C     		mov	r0, r3
 404 001a BD46     		mov	sp, r7
 405 001c 02B0     		add	sp, sp, #8
 406              		@ sp needed
 407 001e 80BD     		pop	{r7, pc}
 408              	.L31:
 409              		.align	2
 410              	.L30:
 411 0020 60000F40 		.word	1074724960
 412              		.cfi_endproc
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 17


 413              	.LFE10:
 414              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 415              		.section	.text.UART_1_GetChar,"ax",%progbits
 416              		.align	2
 417              		.global	UART_1_GetChar
 418              		.code	16
 419              		.thumb_func
 420              		.type	UART_1_GetChar, %function
 421              	UART_1_GetChar:
 422              	.LFB11:
 501:.\Generated_Source\PSoC4/UART_1.c **** 
 502:.\Generated_Source\PSoC4/UART_1.c **** 
 503:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetChar
 505:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC4/UART_1.c ****     *
 507:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 508:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:.\Generated_Source\PSoC4/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC4/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC4/UART_1.c ****     *
 512:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 513:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 514:.\Generated_Source\PSoC4/UART_1.c ****     *
 515:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 516:.\Generated_Source\PSoC4/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC4/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC4/UART_1.c ****     *
 519:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 520:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC4/UART_1.c ****     *
 528:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 529:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 530:.\Generated_Source\PSoC4/UART_1.c ****     *
 531:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:.\Generated_Source\PSoC4/UART_1.c ****     {
 423              		.loc 1 533 0
 424              		.cfi_startproc
 425 0000 80B5     		push	{r7, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 82B0     		sub	sp, sp, #8
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxData = 0u;
 433              		.loc 1 534 0
 434 0006 FB1D     		add	r3, r7, #7
 435 0008 0022     		mov	r2, #0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 18


 436 000a 1A70     		strb	r2, [r3]
 535:.\Generated_Source\PSoC4/UART_1.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC4/UART_1.c **** 
 537:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC4/UART_1.c **** 
 541:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 543:.\Generated_Source\PSoC4/UART_1.c **** 
 544:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:.\Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:.\Generated_Source\PSoC4/UART_1.c **** 
 547:.\Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC4/UART_1.c ****         {
 549:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC4/UART_1.c ****             {
 553:.\Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC4/UART_1.c ****             }
 555:.\Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC4/UART_1.c **** 
 558:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC4/UART_1.c ****             {
 560:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:.\Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC4/UART_1.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC4/UART_1.c ****                             */
 569:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC4/UART_1.c ****                         }
 571:.\Generated_Source\PSoC4/UART_1.c ****                     #else
 572:.\Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC4/UART_1.c ****             }
 576:.\Generated_Source\PSoC4/UART_1.c **** 
 577:.\Generated_Source\PSoC4/UART_1.c ****         }
 578:.\Generated_Source\PSoC4/UART_1.c ****         else
 579:.\Generated_Source\PSoC4/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC4/UART_1.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:.\Generated_Source\PSoC4/UART_1.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC4/UART_1.c ****                 {
 587:.\Generated_Source\PSoC4/UART_1.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC4/UART_1.c ****                 }
 589:.\Generated_Source\PSoC4/UART_1.c ****             }
 590:.\Generated_Source\PSoC4/UART_1.c ****         }
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 19


 591:.\Generated_Source\PSoC4/UART_1.c **** 
 592:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 593:.\Generated_Source\PSoC4/UART_1.c **** 
 594:.\Generated_Source\PSoC4/UART_1.c ****     #else
 595:.\Generated_Source\PSoC4/UART_1.c **** 
 596:.\Generated_Source\PSoC4/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 437              		.loc 1 596 0
 438 000c 0D4A     		ldr	r2, .L35
 439 000e BB1D     		add	r3, r7, #6
 440 0010 1278     		ldrb	r2, [r2]
 441 0012 1A70     		strb	r2, [r3]
 597:.\Generated_Source\PSoC4/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 442              		.loc 1 597 0
 443 0014 BB1D     		add	r3, r7, #6
 444 0016 1A78     		ldrb	r2, [r3]
 445 0018 2023     		mov	r3, #32
 446 001a 1340     		and	r3, r2
 447 001c 0BD0     		beq	.L33
 598:.\Generated_Source\PSoC4/UART_1.c ****         {
 599:.\Generated_Source\PSoC4/UART_1.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 448              		.loc 1 600 0
 449 001e 0A4A     		ldr	r2, .L35+4
 450 0020 FB1D     		add	r3, r7, #7
 451 0022 1278     		ldrb	r2, [r2]
 452 0024 1A70     		strb	r2, [r3]
 601:.\Generated_Source\PSoC4/UART_1.c **** 
 602:.\Generated_Source\PSoC4/UART_1.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC4/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 453              		.loc 1 604 0
 454 0026 BB1D     		add	r3, r7, #6
 455 0028 1A78     		ldrb	r2, [r3]
 456 002a 1E23     		mov	r3, #30
 457 002c 1340     		and	r3, r2
 603:.\Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 458              		.loc 1 603 0
 459 002e 02D0     		beq	.L33
 605:.\Generated_Source\PSoC4/UART_1.c ****             {
 606:.\Generated_Source\PSoC4/UART_1.c ****                 rxData = 0u;
 460              		.loc 1 606 0
 461 0030 FB1D     		add	r3, r7, #7
 462 0032 0022     		mov	r2, #0
 463 0034 1A70     		strb	r2, [r3]
 464              	.L33:
 607:.\Generated_Source\PSoC4/UART_1.c ****             }
 608:.\Generated_Source\PSoC4/UART_1.c ****         }
 609:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC4/UART_1.c **** 
 611:.\Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 465              		.loc 1 611 0
 466 0036 FB1D     		add	r3, r7, #7
 467 0038 1B78     		ldrb	r3, [r3]
 612:.\Generated_Source\PSoC4/UART_1.c ****     }
 468              		.loc 1 612 0
 469 003a 181C     		mov	r0, r3
 470 003c BD46     		mov	sp, r7
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 20


 471 003e 02B0     		add	sp, sp, #8
 472              		@ sp needed
 473 0040 80BD     		pop	{r7, pc}
 474              	.L36:
 475 0042 C046     		.align	2
 476              	.L35:
 477 0044 60000F40 		.word	1074724960
 478 0048 40000F40 		.word	1074724928
 479              		.cfi_endproc
 480              	.LFE11:
 481              		.size	UART_1_GetChar, .-UART_1_GetChar
 482              		.section	.text.UART_1_GetByte,"ax",%progbits
 483              		.align	2
 484              		.global	UART_1_GetByte
 485              		.code	16
 486              		.thumb_func
 487              		.type	UART_1_GetByte, %function
 488              	UART_1_GetByte:
 489              	.LFB12:
 613:.\Generated_Source\PSoC4/UART_1.c **** 
 614:.\Generated_Source\PSoC4/UART_1.c **** 
 615:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetByte
 617:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC4/UART_1.c ****     *
 619:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 620:.\Generated_Source\PSoC4/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC4/UART_1.c ****     *  condition.
 622:.\Generated_Source\PSoC4/UART_1.c ****     *
 623:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 624:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 625:.\Generated_Source\PSoC4/UART_1.c ****     *
 626:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 627:.\Generated_Source\PSoC4/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC4/UART_1.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC4/UART_1.c ****     *
 630:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 631:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 632:.\Generated_Source\PSoC4/UART_1.c ****     *
 633:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:.\Generated_Source\PSoC4/UART_1.c ****     {
 490              		.loc 1 635 0
 491              		.cfi_startproc
 492 0000 98B5     		push	{r3, r4, r7, lr}
 493              		.cfi_def_cfa_offset 16
 494              		.cfi_offset 3, -16
 495              		.cfi_offset 4, -12
 496              		.cfi_offset 7, -8
 497              		.cfi_offset 14, -4
 498 0002 00AF     		add	r7, sp, #0
 499              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC4/UART_1.c ****         
 637:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC4/UART_1.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 21


 641:.\Generated_Source\PSoC4/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_errorStatus = 0u;
 643:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 644:.\Generated_Source\PSoC4/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:.\Generated_Source\PSoC4/UART_1.c ****     #else
 646:.\Generated_Source\PSoC4/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 500              		.loc 1 646 0
 501 0004 FFF7FEFF 		bl	UART_1_ReadRxStatus
 502 0008 031C     		mov	r3, r0
 503 000a 1B02     		lsl	r3, r3, #8
 504 000c 9CB2     		uxth	r4, r3
 505 000e FFF7FEFF 		bl	UART_1_ReadRxData
 506 0012 031C     		mov	r3, r0
 507 0014 221C     		add	r2, r4, #0
 508 0016 1343     		orr	r3, r2
 509 0018 9BB2     		uxth	r3, r3
 510 001a 9BB2     		uxth	r3, r3
 647:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC4/UART_1.c ****         
 649:.\Generated_Source\PSoC4/UART_1.c ****     }
 511              		.loc 1 649 0
 512 001c 181C     		mov	r0, r3
 513 001e BD46     		mov	sp, r7
 514              		@ sp needed
 515 0020 98BD     		pop	{r3, r4, r7, pc}
 516              		.cfi_endproc
 517              	.LFE12:
 518              		.size	UART_1_GetByte, .-UART_1_GetByte
 519 0022 C046     		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 520              		.align	2
 521              		.global	UART_1_GetRxBufferSize
 522              		.code	16
 523              		.thumb_func
 524              		.type	UART_1_GetRxBufferSize, %function
 525              	UART_1_GetRxBufferSize:
 526              	.LFB13:
 650:.\Generated_Source\PSoC4/UART_1.c **** 
 651:.\Generated_Source\PSoC4/UART_1.c **** 
 652:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC4/UART_1.c ****     *
 656:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 657:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC4/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC4/UART_1.c ****     *    account.
 663:.\Generated_Source\PSoC4/UART_1.c ****     *
 664:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 665:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 666:.\Generated_Source\PSoC4/UART_1.c ****     *
 667:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 668:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC4/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 22


 671:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 672:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC4/UART_1.c ****     *
 676:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 677:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 678:.\Generated_Source\PSoC4/UART_1.c ****     *
 679:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 680:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC4/UART_1.c ****     *
 682:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC4/UART_1.c ****                                                             
 685:.\Generated_Source\PSoC4/UART_1.c ****     {
 527              		.loc 1 685 0
 528              		.cfi_startproc
 529 0000 80B5     		push	{r7, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 7, -8
 532              		.cfi_offset 14, -4
 533 0002 82B0     		sub	sp, sp, #8
 534              		.cfi_def_cfa_offset 16
 535 0004 00AF     		add	r7, sp, #0
 536              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
 687:.\Generated_Source\PSoC4/UART_1.c **** 
 688:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC4/UART_1.c **** 
 690:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 692:.\Generated_Source\PSoC4/UART_1.c **** 
 693:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:.\Generated_Source\PSoC4/UART_1.c ****         {
 695:.\Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC4/UART_1.c ****             {
 697:.\Generated_Source\PSoC4/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC4/UART_1.c ****             }
 699:.\Generated_Source\PSoC4/UART_1.c ****             else
 700:.\Generated_Source\PSoC4/UART_1.c ****             {
 701:.\Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
 702:.\Generated_Source\PSoC4/UART_1.c ****             }
 703:.\Generated_Source\PSoC4/UART_1.c ****         }
 704:.\Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:.\Generated_Source\PSoC4/UART_1.c ****         {
 706:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:.\Generated_Source\PSoC4/UART_1.c ****         }
 708:.\Generated_Source\PSoC4/UART_1.c ****         else
 709:.\Generated_Source\PSoC4/UART_1.c ****         {
 710:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:.\Generated_Source\PSoC4/UART_1.c ****         }
 712:.\Generated_Source\PSoC4/UART_1.c **** 
 713:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 714:.\Generated_Source\PSoC4/UART_1.c **** 
 715:.\Generated_Source\PSoC4/UART_1.c ****     #else
 716:.\Generated_Source\PSoC4/UART_1.c **** 
 717:.\Generated_Source\PSoC4/UART_1.c ****         /* We can only know if there is data in the fifo. */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 23


 718:.\Generated_Source\PSoC4/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 537              		.loc 1 718 0
 538 0006 094B     		ldr	r3, .L43
 539 0008 1B78     		ldrb	r3, [r3]
 540 000a DBB2     		uxtb	r3, r3
 541 000c 1A1C     		mov	r2, r3
 542 000e 2023     		mov	r3, #32
 543 0010 1340     		and	r3, r2
 544 0012 01D0     		beq	.L40
 545              		.loc 1 718 0 is_stmt 0 discriminator 1
 546 0014 0123     		mov	r3, #1
 547 0016 00E0     		b	.L41
 548              	.L40:
 549              		.loc 1 718 0 discriminator 2
 550 0018 0023     		mov	r3, #0
 551              	.L41:
 552              		.loc 1 718 0 discriminator 3
 553 001a FA1D     		add	r2, r7, #7
 554 001c 1370     		strb	r3, [r2]
 719:.\Generated_Source\PSoC4/UART_1.c **** 
 720:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC4/UART_1.c **** 
 722:.\Generated_Source\PSoC4/UART_1.c ****         return(size);
 555              		.loc 1 722 0 is_stmt 1 discriminator 3
 556 001e FB1D     		add	r3, r7, #7
 557 0020 1B78     		ldrb	r3, [r3]
 723:.\Generated_Source\PSoC4/UART_1.c ****     }
 558              		.loc 1 723 0 discriminator 3
 559 0022 181C     		mov	r0, r3
 560 0024 BD46     		mov	sp, r7
 561 0026 02B0     		add	sp, sp, #8
 562              		@ sp needed
 563 0028 80BD     		pop	{r7, pc}
 564              	.L44:
 565 002a C046     		.align	2
 566              	.L43:
 567 002c 60000F40 		.word	1074724960
 568              		.cfi_endproc
 569              	.LFE13:
 570              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 571              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 572              		.align	2
 573              		.global	UART_1_ClearRxBuffer
 574              		.code	16
 575              		.thumb_func
 576              		.type	UART_1_ClearRxBuffer, %function
 577              	UART_1_ClearRxBuffer:
 578              	.LFB14:
 724:.\Generated_Source\PSoC4/UART_1.c **** 
 725:.\Generated_Source\PSoC4/UART_1.c **** 
 726:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC4/UART_1.c ****     *
 730:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 731:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 24


 733:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 734:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 735:.\Generated_Source\PSoC4/UART_1.c ****     *
 736:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 737:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 738:.\Generated_Source\PSoC4/UART_1.c ****     *
 739:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 740:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC4/UART_1.c ****     *
 745:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 746:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 747:.\Generated_Source\PSoC4/UART_1.c ****     *
 748:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 749:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC4/UART_1.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC4/UART_1.c ****     *
 753:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
 754:.\Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC4/UART_1.c ****     *
 756:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC4/UART_1.c ****     {
 579              		.loc 1 758 0
 580              		.cfi_startproc
 581 0000 90B5     		push	{r4, r7, lr}
 582              		.cfi_def_cfa_offset 12
 583              		.cfi_offset 4, -12
 584              		.cfi_offset 7, -8
 585              		.cfi_offset 14, -4
 586 0002 83B0     		sub	sp, sp, #12
 587              		.cfi_def_cfa_offset 24
 588 0004 00AF     		add	r7, sp, #0
 589              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC4/UART_1.c **** 
 761:.\Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 590              		.loc 1 762 0
 591 0006 FC1D     		add	r4, r7, #7
 592 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 593 000c 031C     		mov	r3, r0
 594 000e 2370     		strb	r3, [r4]
 763:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 595              		.loc 1 763 0
 596 0010 0B4B     		ldr	r3, .L46
 597 0012 0B4A     		ldr	r2, .L46
 598 0014 1278     		ldrb	r2, [r2]
 599 0016 D2B2     		uxtb	r2, r2
 600 0018 0121     		mov	r1, #1
 601 001a 0A43     		orr	r2, r1
 602 001c D2B2     		uxtb	r2, r2
 603 001e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 25


 604              		.loc 1 764 0
 605 0020 074B     		ldr	r3, .L46
 606 0022 074A     		ldr	r2, .L46
 607 0024 1278     		ldrb	r2, [r2]
 608 0026 D2B2     		uxtb	r2, r2
 609 0028 0121     		mov	r1, #1
 610 002a 8A43     		bic	r2, r1
 611 002c D2B2     		uxtb	r2, r2
 612 002e 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 613              		.loc 1 765 0
 614 0030 FB1D     		add	r3, r7, #7
 615 0032 1B78     		ldrb	r3, [r3]
 616 0034 181C     		mov	r0, r3
 617 0036 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC4/UART_1.c **** 
 767:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC4/UART_1.c **** 
 769:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 771:.\Generated_Source\PSoC4/UART_1.c **** 
 772:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC4/UART_1.c **** 
 777:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 778:.\Generated_Source\PSoC4/UART_1.c **** 
 779:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC4/UART_1.c **** 
 781:.\Generated_Source\PSoC4/UART_1.c ****     }
 618              		.loc 1 781 0
 619 003a BD46     		mov	sp, r7
 620 003c 03B0     		add	sp, sp, #12
 621              		@ sp needed
 622 003e 90BD     		pop	{r4, r7, pc}
 623              	.L47:
 624              		.align	2
 625              	.L46:
 626 0040 90000F40 		.word	1074725008
 627              		.cfi_endproc
 628              	.LFE14:
 629              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 630              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 631              		.align	2
 632              		.global	UART_1_SetRxAddressMode
 633              		.code	16
 634              		.thumb_func
 635              		.type	UART_1_SetRxAddressMode, %function
 636              	UART_1_SetRxAddressMode:
 637              	.LFB15:
 782:.\Generated_Source\PSoC4/UART_1.c **** 
 783:.\Generated_Source\PSoC4/UART_1.c **** 
 784:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 26


 788:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 789:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC4/UART_1.c ****     *  UART.
 791:.\Generated_Source\PSoC4/UART_1.c ****     *
 792:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 793:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 796:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 798:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 800:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 802:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC4/UART_1.c ****     *
 804:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 805:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 806:.\Generated_Source\PSoC4/UART_1.c ****     *
 807:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 808:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC4/UART_1.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC4/UART_1.c ****     *
 812:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC4/UART_1.c ****                                                         
 815:.\Generated_Source\PSoC4/UART_1.c ****     {
 638              		.loc 1 815 0
 639              		.cfi_startproc
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 82B0     		sub	sp, sp, #8
 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
 647              		.cfi_def_cfa_register 7
 648 0006 021C     		mov	r2, r0
 649 0008 FB1D     		add	r3, r7, #7
 650 000a 1A70     		strb	r2, [r3]
 816:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC4/UART_1.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC4/UART_1.c ****                 {
 820:.\Generated_Source\PSoC4/UART_1.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC4/UART_1.c ****                 }
 822:.\Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC4/UART_1.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC4/UART_1.c **** 
 828:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC4/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 27


 832:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC4/UART_1.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC4/UART_1.c ****             {
 837:.\Generated_Source\PSoC4/UART_1.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC4/UART_1.c ****             }
 839:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC4/UART_1.c ****     }
 651              		.loc 1 840 0
 652 000c BD46     		mov	sp, r7
 653 000e 02B0     		add	sp, sp, #8
 654              		@ sp needed
 655 0010 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE15:
 658              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 659 0012 C046     		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 660              		.align	2
 661              		.global	UART_1_SetRxAddress1
 662              		.code	16
 663              		.thumb_func
 664              		.type	UART_1_SetRxAddress1, %function
 665              	UART_1_SetRxAddress1:
 666              	.LFB16:
 841:.\Generated_Source\PSoC4/UART_1.c **** 
 842:.\Generated_Source\PSoC4/UART_1.c **** 
 843:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC4/UART_1.c ****     *
 847:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 848:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC4/UART_1.c ****     *
 850:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 851:.\Generated_Source\PSoC4/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC4/UART_1.c ****     *
 853:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 854:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 855:.\Generated_Source\PSoC4/UART_1.c ****     *
 856:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC4/UART_1.c ****     {
 667              		.loc 1 858 0
 668              		.cfi_startproc
 669 0000 80B5     		push	{r7, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
 673 0002 82B0     		sub	sp, sp, #8
 674              		.cfi_def_cfa_offset 16
 675 0004 00AF     		add	r7, sp, #0
 676              		.cfi_def_cfa_register 7
 677 0006 021C     		mov	r2, r0
 678 0008 FB1D     		add	r3, r7, #7
 679 000a 1A70     		strb	r2, [r3]
 859:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 28


 680              		.loc 1 859 0
 681 000c 034B     		ldr	r3, .L50
 682 000e FA1D     		add	r2, r7, #7
 683 0010 1278     		ldrb	r2, [r2]
 684 0012 1A70     		strb	r2, [r3]
 860:.\Generated_Source\PSoC4/UART_1.c ****     }
 685              		.loc 1 860 0
 686 0014 BD46     		mov	sp, r7
 687 0016 02B0     		add	sp, sp, #8
 688              		@ sp needed
 689 0018 80BD     		pop	{r7, pc}
 690              	.L51:
 691 001a C046     		.align	2
 692              	.L50:
 693 001c 20000F40 		.word	1074724896
 694              		.cfi_endproc
 695              	.LFE16:
 696              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 697              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 698              		.align	2
 699              		.global	UART_1_SetRxAddress2
 700              		.code	16
 701              		.thumb_func
 702              		.type	UART_1_SetRxAddress2, %function
 703              	UART_1_SetRxAddress2:
 704              	.LFB17:
 861:.\Generated_Source\PSoC4/UART_1.c **** 
 862:.\Generated_Source\PSoC4/UART_1.c **** 
 863:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC4/UART_1.c ****     *
 867:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 868:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC4/UART_1.c ****     *
 870:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 871:.\Generated_Source\PSoC4/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC4/UART_1.c ****     *
 873:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 874:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 875:.\Generated_Source\PSoC4/UART_1.c ****     *
 876:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC4/UART_1.c ****     {
 705              		.loc 1 878 0
 706              		.cfi_startproc
 707 0000 80B5     		push	{r7, lr}
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 7, -8
 710              		.cfi_offset 14, -4
 711 0002 82B0     		sub	sp, sp, #8
 712              		.cfi_def_cfa_offset 16
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 021C     		mov	r2, r0
 716 0008 FB1D     		add	r3, r7, #7
 717 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 29


 879:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 718              		.loc 1 879 0
 719 000c 034B     		ldr	r3, .L53
 720 000e FA1D     		add	r2, r7, #7
 721 0010 1278     		ldrb	r2, [r2]
 722 0012 1A70     		strb	r2, [r3]
 880:.\Generated_Source\PSoC4/UART_1.c ****     }
 723              		.loc 1 880 0
 724 0014 BD46     		mov	sp, r7
 725 0016 02B0     		add	sp, sp, #8
 726              		@ sp needed
 727 0018 80BD     		pop	{r7, pc}
 728              	.L54:
 729 001a C046     		.align	2
 730              	.L53:
 731 001c 30000F40 		.word	1074724912
 732              		.cfi_endproc
 733              	.LFE17:
 734              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 735              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 736              		.align	2
 737              		.global	UART_1_SetTxInterruptMode
 738              		.code	16
 739              		.thumb_func
 740              		.type	UART_1_SetTxInterruptMode, %function
 741              	UART_1_SetTxInterruptMode:
 742              	.LFB18:
 881:.\Generated_Source\PSoC4/UART_1.c **** 
 882:.\Generated_Source\PSoC4/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:.\Generated_Source\PSoC4/UART_1.c **** 
 884:.\Generated_Source\PSoC4/UART_1.c **** 
 885:.\Generated_Source\PSoC4/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC4/UART_1.c ****     *
 890:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 891:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC4/UART_1.c ****     *  interrupt.
 893:.\Generated_Source\PSoC4/UART_1.c ****     *
 894:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 895:.\Generated_Source\PSoC4/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC4/UART_1.c ****     *
 901:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 902:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 903:.\Generated_Source\PSoC4/UART_1.c ****     *
 904:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 905:.\Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC4/UART_1.c ****     *
 907:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC4/UART_1.c ****     {
 743              		.loc 1 909 0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 30


 744              		.cfi_startproc
 745 0000 80B5     		push	{r7, lr}
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 7, -8
 748              		.cfi_offset 14, -4
 749 0002 82B0     		sub	sp, sp, #8
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              		.cfi_def_cfa_register 7
 753 0006 021C     		mov	r2, r0
 754 0008 FB1D     		add	r3, r7, #7
 755 000a 1A70     		strb	r2, [r3]
 910:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 756              		.loc 1 910 0
 757 000c 034B     		ldr	r3, .L56
 758 000e FA1D     		add	r2, r7, #7
 759 0010 1278     		ldrb	r2, [r2]
 760 0012 1A70     		strb	r2, [r3]
 911:.\Generated_Source\PSoC4/UART_1.c ****     }
 761              		.loc 1 911 0
 762 0014 BD46     		mov	sp, r7
 763 0016 02B0     		add	sp, sp, #8
 764              		@ sp needed
 765 0018 80BD     		pop	{r7, pc}
 766              	.L57:
 767 001a C046     		.align	2
 768              	.L56:
 769 001c 80000F40 		.word	1074724992
 770              		.cfi_endproc
 771              	.LFE18:
 772              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 773              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 774              		.align	2
 775              		.global	UART_1_WriteTxData
 776              		.code	16
 777              		.thumb_func
 778              		.type	UART_1_WriteTxData, %function
 779              	UART_1_WriteTxData:
 780              	.LFB19:
 912:.\Generated_Source\PSoC4/UART_1.c **** 
 913:.\Generated_Source\PSoC4/UART_1.c **** 
 914:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC4/UART_1.c ****     *
 918:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 919:.\Generated_Source\PSoC4/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC4/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC4/UART_1.c ****     *  separately.
 922:.\Generated_Source\PSoC4/UART_1.c ****     *
 923:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 924:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC4/UART_1.c ****     *
 926:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 927:.\Generated_Source\PSoC4/UART_1.c ****     * None.
 928:.\Generated_Source\PSoC4/UART_1.c ****     *
 929:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 31


 930:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC4/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC4/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC4/UART_1.c ****     *    initialized.
 937:.\Generated_Source\PSoC4/UART_1.c ****     *
 938:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 939:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
 940:.\Generated_Source\PSoC4/UART_1.c ****     *
 941:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC4/UART_1.c ****     {
 781              		.loc 1 943 0
 782              		.cfi_startproc
 783 0000 80B5     		push	{r7, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 82B0     		sub	sp, sp, #8
 788              		.cfi_def_cfa_offset 16
 789 0004 00AF     		add	r7, sp, #0
 790              		.cfi_def_cfa_register 7
 791 0006 021C     		mov	r2, r0
 792 0008 FB1D     		add	r3, r7, #7
 793 000a 1A70     		strb	r2, [r3]
 944:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 794              		.loc 1 945 0
 795 000c 054B     		ldr	r3, .L60
 796 000e 1B78     		ldrb	r3, [r3]
 797 0010 002B     		cmp	r3, #0
 798 0012 03D0     		beq	.L58
 946:.\Generated_Source\PSoC4/UART_1.c ****         {
 947:.\Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC4/UART_1.c **** 
 949:.\Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 951:.\Generated_Source\PSoC4/UART_1.c **** 
 952:.\Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:.\Generated_Source\PSoC4/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC4/UART_1.c ****             {
 955:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC4/UART_1.c ****             }
 958:.\Generated_Source\PSoC4/UART_1.c ****             else
 959:.\Generated_Source\PSoC4/UART_1.c ****             {
 960:.\Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC4/UART_1.c ****                 {
 962:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC4/UART_1.c ****                 }
 964:.\Generated_Source\PSoC4/UART_1.c **** 
 965:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC4/UART_1.c **** 
 967:.\Generated_Source\PSoC4/UART_1.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBufferWrite++;
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 32


 969:.\Generated_Source\PSoC4/UART_1.c ****             }
 970:.\Generated_Source\PSoC4/UART_1.c **** 
 971:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 972:.\Generated_Source\PSoC4/UART_1.c **** 
 973:.\Generated_Source\PSoC4/UART_1.c ****         #else
 974:.\Generated_Source\PSoC4/UART_1.c **** 
 975:.\Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 799              		.loc 1 976 0
 800 0014 044B     		ldr	r3, .L60+4
 801 0016 FA1D     		add	r2, r7, #7
 802 0018 1278     		ldrb	r2, [r2]
 803 001a 1A70     		strb	r2, [r3]
 804              	.L58:
 977:.\Generated_Source\PSoC4/UART_1.c **** 
 978:.\Generated_Source\PSoC4/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC4/UART_1.c ****         }
 980:.\Generated_Source\PSoC4/UART_1.c ****     }
 805              		.loc 1 980 0
 806 001c BD46     		mov	sp, r7
 807 001e 02B0     		add	sp, sp, #8
 808              		@ sp needed
 809 0020 80BD     		pop	{r7, pc}
 810              	.L61:
 811 0022 C046     		.align	2
 812              	.L60:
 813 0024 00000000 		.word	UART_1_initVar
 814 0028 50000F40 		.word	1074724944
 815              		.cfi_endproc
 816              	.LFE19:
 817              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 818              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 819              		.align	2
 820              		.global	UART_1_ReadTxStatus
 821              		.code	16
 822              		.thumb_func
 823              		.type	UART_1_ReadTxStatus, %function
 824              	UART_1_ReadTxStatus:
 825              	.LFB20:
 981:.\Generated_Source\PSoC4/UART_1.c **** 
 982:.\Generated_Source\PSoC4/UART_1.c **** 
 983:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC4/UART_1.c ****     *
 987:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 988:.\Generated_Source\PSoC4/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC4/UART_1.c ****     *
 990:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 991:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
 992:.\Generated_Source\PSoC4/UART_1.c ****     *
 993:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 994:.\Generated_Source\PSoC4/UART_1.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC4/UART_1.c ****     *
 996:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
 997:.\Generated_Source\PSoC4/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC4/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 33


 999:.\Generated_Source\PSoC4/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC4/UART_1.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC4/UART_1.c ****     *
1002:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC4/UART_1.c ****     {
 826              		.loc 1 1004 0
 827              		.cfi_startproc
 828 0000 80B5     		push	{r7, lr}
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 7, -8
 831              		.cfi_offset 14, -4
 832 0002 00AF     		add	r7, sp, #0
 833              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC4/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 834              		.loc 1 1005 0
 835 0004 024B     		ldr	r3, .L64
 836 0006 1B78     		ldrb	r3, [r3]
 837 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC4/UART_1.c ****     }
 838              		.loc 1 1006 0
 839 000a 181C     		mov	r0, r3
 840 000c BD46     		mov	sp, r7
 841              		@ sp needed
 842 000e 80BD     		pop	{r7, pc}
 843              	.L65:
 844              		.align	2
 845              	.L64:
 846 0010 60000F40 		.word	1074724960
 847              		.cfi_endproc
 848              	.LFE20:
 849              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 850              		.section	.text.UART_1_PutChar,"ax",%progbits
 851              		.align	2
 852              		.global	UART_1_PutChar
 853              		.code	16
 854              		.thumb_func
 855              		.type	UART_1_PutChar, %function
 856              	UART_1_PutChar:
 857              	.LFB21:
1007:.\Generated_Source\PSoC4/UART_1.c **** 
1008:.\Generated_Source\PSoC4/UART_1.c **** 
1009:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutChar
1011:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/UART_1.c ****     *
1013:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1014:.\Generated_Source\PSoC4/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC4/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC4/UART_1.c ****     *  hold the data.
1017:.\Generated_Source\PSoC4/UART_1.c ****     *
1018:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1019:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC4/UART_1.c ****     *
1021:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1022:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1023:.\Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 34


1024:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1025:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC4/UART_1.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1033:.\Generated_Source\PSoC4/UART_1.c ****     *
1034:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1035:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1036:.\Generated_Source\PSoC4/UART_1.c ****     *
1037:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1038:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC4/UART_1.c ****     *
1040:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC4/UART_1.c ****     {
 858              		.loc 1 1042 0
 859              		.cfi_startproc
 860 0000 80B5     		push	{r7, lr}
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 7, -8
 863              		.cfi_offset 14, -4
 864 0002 82B0     		sub	sp, sp, #8
 865              		.cfi_def_cfa_offset 16
 866 0004 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 868 0006 021C     		mov	r2, r0
 869 0008 FB1D     		add	r3, r7, #7
 870 000a 1A70     		strb	r2, [r3]
1043:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC4/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC4/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC4/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC4/UART_1.c ****         */
1048:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC4/UART_1.c **** 
1051:.\Generated_Source\PSoC4/UART_1.c ****         do
1052:.\Generated_Source\PSoC4/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC4/UART_1.c **** 
1054:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC4/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1057:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > 255) */
1058:.\Generated_Source\PSoC4/UART_1.c **** 
1059:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:.\Generated_Source\PSoC4/UART_1.c **** 
1062:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC4/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1065:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > 255) */
1066:.\Generated_Source\PSoC4/UART_1.c ****         }
1067:.\Generated_Source\PSoC4/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 35


1068:.\Generated_Source\PSoC4/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC4/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC4/UART_1.c **** 
1071:.\Generated_Source\PSoC4/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC4/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC4/UART_1.c ****         {
1074:.\Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC4/UART_1.c ****         }
1077:.\Generated_Source\PSoC4/UART_1.c ****         else
1078:.\Generated_Source\PSoC4/UART_1.c ****         {
1079:.\Generated_Source\PSoC4/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC4/UART_1.c ****             {
1081:.\Generated_Source\PSoC4/UART_1.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC4/UART_1.c ****             }
1083:.\Generated_Source\PSoC4/UART_1.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC4/UART_1.c **** 
1087:.\Generated_Source\PSoC4/UART_1.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1090:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > 255) */
1091:.\Generated_Source\PSoC4/UART_1.c **** 
1092:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC4/UART_1.c **** 
1094:.\Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1096:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > 255) */
1097:.\Generated_Source\PSoC4/UART_1.c **** 
1098:.\Generated_Source\PSoC4/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC4/UART_1.c ****             {
1100:.\Generated_Source\PSoC4/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:.\Generated_Source\PSoC4/UART_1.c ****             }
1103:.\Generated_Source\PSoC4/UART_1.c ****         }
1104:.\Generated_Source\PSoC4/UART_1.c **** 
1105:.\Generated_Source\PSoC4/UART_1.c ****     #else
1106:.\Generated_Source\PSoC4/UART_1.c **** 
1107:.\Generated_Source\PSoC4/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 871              		.loc 1 1107 0
 872 000c C046     		mov	r8, r8
 873              	.L67:
 874              		.loc 1 1107 0 is_stmt 0 discriminator 1
 875 000e 074B     		ldr	r3, .L68
 876 0010 1B78     		ldrb	r3, [r3]
 877 0012 DBB2     		uxtb	r3, r3
 878 0014 1A1C     		mov	r2, r3
 879 0016 2023     		mov	r3, #32
 880 0018 1340     		and	r3, r2
 881 001a F8D1     		bne	.L67
1108:.\Generated_Source\PSoC4/UART_1.c ****         {
1109:.\Generated_Source\PSoC4/UART_1.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC4/UART_1.c ****         }
1111:.\Generated_Source\PSoC4/UART_1.c **** 
1112:.\Generated_Source\PSoC4/UART_1.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 36


 882              		.loc 1 1113 0 is_stmt 1
 883 001c 044B     		ldr	r3, .L68+4
 884 001e FA1D     		add	r2, r7, #7
 885 0020 1278     		ldrb	r2, [r2]
 886 0022 1A70     		strb	r2, [r3]
1114:.\Generated_Source\PSoC4/UART_1.c **** 
1115:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* End (UART_1_TX_INTERRUPT_ENABLED) */
1116:.\Generated_Source\PSoC4/UART_1.c ****     }
 887              		.loc 1 1116 0
 888 0024 BD46     		mov	sp, r7
 889 0026 02B0     		add	sp, sp, #8
 890              		@ sp needed
 891 0028 80BD     		pop	{r7, pc}
 892              	.L69:
 893 002a C046     		.align	2
 894              	.L68:
 895 002c 60000F40 		.word	1074724960
 896 0030 50000F40 		.word	1074724944
 897              		.cfi_endproc
 898              	.LFE21:
 899              		.size	UART_1_PutChar, .-UART_1_PutChar
 900              		.section	.text.UART_1_PutString,"ax",%progbits
 901              		.align	2
 902              		.global	UART_1_PutString
 903              		.code	16
 904              		.thumb_func
 905              		.type	UART_1_PutString, %function
 906              	UART_1_PutString:
 907              	.LFB22:
1117:.\Generated_Source\PSoC4/UART_1.c **** 
1118:.\Generated_Source\PSoC4/UART_1.c **** 
1119:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutString
1121:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC4/UART_1.c ****     *
1123:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1124:.\Generated_Source\PSoC4/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC4/UART_1.c ****     *
1126:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1127:.\Generated_Source\PSoC4/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC4/UART_1.c ****     *
1129:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1130:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1131:.\Generated_Source\PSoC4/UART_1.c ****     *
1132:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1133:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1135:.\Generated_Source\PSoC4/UART_1.c ****     *
1136:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1137:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1138:.\Generated_Source\PSoC4/UART_1.c ****     *
1139:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1140:.\Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC4/UART_1.c ****     *
1144:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 37


1145:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC4/UART_1.c ****     {
 908              		.loc 1 1146 0
 909              		.cfi_startproc
 910 0000 80B5     		push	{r7, lr}
 911              		.cfi_def_cfa_offset 8
 912              		.cfi_offset 7, -8
 913              		.cfi_offset 14, -4
 914 0002 84B0     		sub	sp, sp, #16
 915              		.cfi_def_cfa_offset 24
 916 0004 00AF     		add	r7, sp, #0
 917              		.cfi_def_cfa_register 7
 918 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC4/UART_1.c ****         uint16 bufIndex = 0u;
 919              		.loc 1 1147 0
 920 0008 3B1C     		mov	r3, r7
 921 000a 0E33     		add	r3, r3, #14
 922 000c 0022     		mov	r2, #0
 923 000e 1A80     		strh	r2, [r3]
1148:.\Generated_Source\PSoC4/UART_1.c **** 
1149:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 924              		.loc 1 1150 0
 925 0010 0F4B     		ldr	r3, .L74
 926 0012 1B78     		ldrb	r3, [r3]
 927 0014 002B     		cmp	r3, #0
 928 0016 18D0     		beq	.L70
1151:.\Generated_Source\PSoC4/UART_1.c ****         {
1152:.\Generated_Source\PSoC4/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC4/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 929              		.loc 1 1153 0
 930 0018 0FE0     		b	.L72
 931              	.L73:
1154:.\Generated_Source\PSoC4/UART_1.c ****             {
1155:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 932              		.loc 1 1155 0
 933 001a 3B1C     		mov	r3, r7
 934 001c 0E33     		add	r3, r3, #14
 935 001e 1B88     		ldrh	r3, [r3]
 936 0020 7A68     		ldr	r2, [r7, #4]
 937 0022 D318     		add	r3, r2, r3
 938 0024 1B78     		ldrb	r3, [r3]
 939 0026 181C     		mov	r0, r3
 940 0028 FFF7FEFF 		bl	UART_1_PutChar
1156:.\Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 941              		.loc 1 1156 0
 942 002c 3B1C     		mov	r3, r7
 943 002e 0E33     		add	r3, r3, #14
 944 0030 1A88     		ldrh	r2, [r3]
 945 0032 3B1C     		mov	r3, r7
 946 0034 0E33     		add	r3, r3, #14
 947 0036 0132     		add	r2, r2, #1
 948 0038 1A80     		strh	r2, [r3]
 949              	.L72:
1153:.\Generated_Source\PSoC4/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 950              		.loc 1 1153 0 discriminator 1
 951 003a 3B1C     		mov	r3, r7
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 38


 952 003c 0E33     		add	r3, r3, #14
 953 003e 1B88     		ldrh	r3, [r3]
 954 0040 7A68     		ldr	r2, [r7, #4]
 955 0042 D318     		add	r3, r2, r3
 956 0044 1B78     		ldrb	r3, [r3]
 957 0046 002B     		cmp	r3, #0
 958 0048 E7D1     		bne	.L73
 959              	.L70:
1157:.\Generated_Source\PSoC4/UART_1.c ****             }
1158:.\Generated_Source\PSoC4/UART_1.c ****         }
1159:.\Generated_Source\PSoC4/UART_1.c ****     }
 960              		.loc 1 1159 0
 961 004a BD46     		mov	sp, r7
 962 004c 04B0     		add	sp, sp, #16
 963              		@ sp needed
 964 004e 80BD     		pop	{r7, pc}
 965              	.L75:
 966              		.align	2
 967              	.L74:
 968 0050 00000000 		.word	UART_1_initVar
 969              		.cfi_endproc
 970              	.LFE22:
 971              		.size	UART_1_PutString, .-UART_1_PutString
 972              		.section	.text.UART_1_PutArray,"ax",%progbits
 973              		.align	2
 974              		.global	UART_1_PutArray
 975              		.code	16
 976              		.thumb_func
 977              		.type	UART_1_PutArray, %function
 978              	UART_1_PutArray:
 979              	.LFB23:
1160:.\Generated_Source\PSoC4/UART_1.c **** 
1161:.\Generated_Source\PSoC4/UART_1.c **** 
1162:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutArray
1164:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC4/UART_1.c ****     *
1166:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1167:.\Generated_Source\PSoC4/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC4/UART_1.c ****     *  transmission.
1169:.\Generated_Source\PSoC4/UART_1.c ****     *
1170:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1171:.\Generated_Source\PSoC4/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC4/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC4/UART_1.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC4/UART_1.c ****     *
1175:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1176:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1177:.\Generated_Source\PSoC4/UART_1.c ****     *
1178:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1179:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1181:.\Generated_Source\PSoC4/UART_1.c ****     *
1182:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1183:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1184:.\Generated_Source\PSoC4/UART_1.c ****     *
1185:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 39


1186:.\Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC4/UART_1.c ****     *
1190:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC4/UART_1.c ****                                                                     
1193:.\Generated_Source\PSoC4/UART_1.c ****     {
 980              		.loc 1 1193 0
 981              		.cfi_startproc
 982 0000 80B5     		push	{r7, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 7, -8
 985              		.cfi_offset 14, -4
 986 0002 84B0     		sub	sp, sp, #16
 987              		.cfi_def_cfa_offset 24
 988 0004 00AF     		add	r7, sp, #0
 989              		.cfi_def_cfa_register 7
 990 0006 7860     		str	r0, [r7, #4]
 991 0008 0A1C     		mov	r2, r1
 992 000a FB1C     		add	r3, r7, #3
 993 000c 1A70     		strb	r2, [r3]
1194:.\Generated_Source\PSoC4/UART_1.c ****         uint8 bufIndex = 0u;
 994              		.loc 1 1194 0
 995 000e 3B1C     		mov	r3, r7
 996 0010 0F33     		add	r3, r3, #15
 997 0012 0022     		mov	r2, #0
 998 0014 1A70     		strb	r2, [r3]
1195:.\Generated_Source\PSoC4/UART_1.c **** 
1196:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 999              		.loc 1 1197 0
 1000 0016 0F4B     		ldr	r3, .L80
 1001 0018 1B78     		ldrb	r3, [r3]
 1002 001a 002B     		cmp	r3, #0
 1003 001c 17D0     		beq	.L76
1198:.\Generated_Source\PSoC4/UART_1.c ****         {
1199:.\Generated_Source\PSoC4/UART_1.c ****             while(bufIndex < byteCount)
 1004              		.loc 1 1199 0
 1005 001e 0FE0     		b	.L78
 1006              	.L79:
1200:.\Generated_Source\PSoC4/UART_1.c ****             {
1201:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 1007              		.loc 1 1201 0
 1008 0020 3B1C     		mov	r3, r7
 1009 0022 0F33     		add	r3, r3, #15
 1010 0024 1B78     		ldrb	r3, [r3]
 1011 0026 7A68     		ldr	r2, [r7, #4]
 1012 0028 D318     		add	r3, r2, r3
 1013 002a 1B78     		ldrb	r3, [r3]
 1014 002c 181C     		mov	r0, r3
 1015 002e FFF7FEFF 		bl	UART_1_PutChar
1202:.\Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 1016              		.loc 1 1202 0
 1017 0032 3B1C     		mov	r3, r7
 1018 0034 0F33     		add	r3, r3, #15
 1019 0036 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 40


 1020 0038 3B1C     		mov	r3, r7
 1021 003a 0F33     		add	r3, r3, #15
 1022 003c 0132     		add	r2, r2, #1
 1023 003e 1A70     		strb	r2, [r3]
 1024              	.L78:
1199:.\Generated_Source\PSoC4/UART_1.c ****             while(bufIndex < byteCount)
 1025              		.loc 1 1199 0 discriminator 1
 1026 0040 3A1C     		mov	r2, r7
 1027 0042 0F32     		add	r2, r2, #15
 1028 0044 FB1C     		add	r3, r7, #3
 1029 0046 1278     		ldrb	r2, [r2]
 1030 0048 1B78     		ldrb	r3, [r3]
 1031 004a 9A42     		cmp	r2, r3
 1032 004c E8D3     		bcc	.L79
 1033              	.L76:
1203:.\Generated_Source\PSoC4/UART_1.c ****             }
1204:.\Generated_Source\PSoC4/UART_1.c ****         }
1205:.\Generated_Source\PSoC4/UART_1.c ****     }
 1034              		.loc 1 1205 0
 1035 004e BD46     		mov	sp, r7
 1036 0050 04B0     		add	sp, sp, #16
 1037              		@ sp needed
 1038 0052 80BD     		pop	{r7, pc}
 1039              	.L81:
 1040              		.align	2
 1041              	.L80:
 1042 0054 00000000 		.word	UART_1_initVar
 1043              		.cfi_endproc
 1044              	.LFE23:
 1045              		.size	UART_1_PutArray, .-UART_1_PutArray
 1046              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 1047              		.align	2
 1048              		.global	UART_1_PutCRLF
 1049              		.code	16
 1050              		.thumb_func
 1051              		.type	UART_1_PutCRLF, %function
 1052              	UART_1_PutCRLF:
 1053              	.LFB24:
1206:.\Generated_Source\PSoC4/UART_1.c **** 
1207:.\Generated_Source\PSoC4/UART_1.c **** 
1208:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC4/UART_1.c ****     *
1212:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1213:.\Generated_Source\PSoC4/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC4/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC4/UART_1.c ****     *
1216:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1217:.\Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC4/UART_1.c ****     *
1219:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1220:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1221:.\Generated_Source\PSoC4/UART_1.c ****     *
1222:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1223:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 41


1225:.\Generated_Source\PSoC4/UART_1.c ****     *
1226:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1227:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1228:.\Generated_Source\PSoC4/UART_1.c ****     *
1229:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC4/UART_1.c ****     {
 1054              		.loc 1 1231 0
 1055              		.cfi_startproc
 1056 0000 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 82B0     		sub	sp, sp, #8
 1061              		.cfi_def_cfa_offset 16
 1062 0004 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 1064 0006 021C     		mov	r2, r0
 1065 0008 FB1D     		add	r3, r7, #7
 1066 000a 1A70     		strb	r2, [r3]
1232:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1067              		.loc 1 1233 0
 1068 000c 084B     		ldr	r3, .L84
 1069 000e 1B78     		ldrb	r3, [r3]
 1070 0010 002B     		cmp	r3, #0
 1071 0012 0AD0     		beq	.L82
1234:.\Generated_Source\PSoC4/UART_1.c ****         {
1235:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(txDataByte);
 1072              		.loc 1 1235 0
 1073 0014 FB1D     		add	r3, r7, #7
 1074 0016 1B78     		ldrb	r3, [r3]
 1075 0018 181C     		mov	r0, r3
 1076 001a FFF7FEFF 		bl	UART_1_PutChar
1236:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Du);
 1077              		.loc 1 1236 0
 1078 001e 0D20     		mov	r0, #13
 1079 0020 FFF7FEFF 		bl	UART_1_PutChar
1237:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Au);
 1080              		.loc 1 1237 0
 1081 0024 0A20     		mov	r0, #10
 1082 0026 FFF7FEFF 		bl	UART_1_PutChar
 1083              	.L82:
1238:.\Generated_Source\PSoC4/UART_1.c ****         }
1239:.\Generated_Source\PSoC4/UART_1.c ****     }
 1084              		.loc 1 1239 0
 1085 002a BD46     		mov	sp, r7
 1086 002c 02B0     		add	sp, sp, #8
 1087              		@ sp needed
 1088 002e 80BD     		pop	{r7, pc}
 1089              	.L85:
 1090              		.align	2
 1091              	.L84:
 1092 0030 00000000 		.word	UART_1_initVar
 1093              		.cfi_endproc
 1094              	.LFE24:
 1095              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 42


 1096              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 1097              		.align	2
 1098              		.global	UART_1_GetTxBufferSize
 1099              		.code	16
 1100              		.thumb_func
 1101              		.type	UART_1_GetTxBufferSize, %function
 1102              	UART_1_GetTxBufferSize:
 1103              	.LFB25:
1240:.\Generated_Source\PSoC4/UART_1.c **** 
1241:.\Generated_Source\PSoC4/UART_1.c **** 
1242:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC4/UART_1.c ****     *
1246:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1247:.\Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC4/UART_1.c ****     *  transmitted.
1249:.\Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC4/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC4/UART_1.c ****     *    TX FIFO do not take to account.
1254:.\Generated_Source\PSoC4/UART_1.c ****     *
1255:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1256:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1257:.\Generated_Source\PSoC4/UART_1.c ****     *
1258:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1259:.\Generated_Source\PSoC4/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC4/UART_1.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC4/UART_1.c ****     *
1262:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1263:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC4/UART_1.c ****     *
1266:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1267:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1268:.\Generated_Source\PSoC4/UART_1.c ****     *
1269:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1270:.\Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC4/UART_1.c ****     *
1272:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC4/UART_1.c ****                                                             
1275:.\Generated_Source\PSoC4/UART_1.c ****     {
 1104              		.loc 1 1275 0
 1105              		.cfi_startproc
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 82B0     		sub	sp, sp, #8
 1111              		.cfi_def_cfa_offset 16
 1112 0004 00AF     		add	r7, sp, #0
 1113              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC4/UART_1.c ****         uint8 size;
1277:.\Generated_Source\PSoC4/UART_1.c **** 
1278:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 43


1279:.\Generated_Source\PSoC4/UART_1.c **** 
1280:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1282:.\Generated_Source\PSoC4/UART_1.c **** 
1283:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:.\Generated_Source\PSoC4/UART_1.c ****         {
1285:.\Generated_Source\PSoC4/UART_1.c ****             size = 0u;
1286:.\Generated_Source\PSoC4/UART_1.c ****         }
1287:.\Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:.\Generated_Source\PSoC4/UART_1.c ****         {
1289:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:.\Generated_Source\PSoC4/UART_1.c ****         }
1291:.\Generated_Source\PSoC4/UART_1.c ****         else
1292:.\Generated_Source\PSoC4/UART_1.c ****         {
1293:.\Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite;
1295:.\Generated_Source\PSoC4/UART_1.c ****         }
1296:.\Generated_Source\PSoC4/UART_1.c **** 
1297:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1298:.\Generated_Source\PSoC4/UART_1.c **** 
1299:.\Generated_Source\PSoC4/UART_1.c ****     #else
1300:.\Generated_Source\PSoC4/UART_1.c **** 
1301:.\Generated_Source\PSoC4/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 1114              		.loc 1 1301 0
 1115 0006 0F4A     		ldr	r2, .L91
 1116 0008 FB1D     		add	r3, r7, #7
 1117 000a 1278     		ldrb	r2, [r2]
 1118 000c 1A70     		strb	r2, [r3]
1302:.\Generated_Source\PSoC4/UART_1.c **** 
1303:.\Generated_Source\PSoC4/UART_1.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC4/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 1119              		.loc 1 1304 0
 1120 000e FB1D     		add	r3, r7, #7
 1121 0010 1A78     		ldrb	r2, [r3]
 1122 0012 2023     		mov	r3, #32
 1123 0014 1340     		and	r3, r2
 1124 0016 03D0     		beq	.L87
1305:.\Generated_Source\PSoC4/UART_1.c ****         {
1306:.\Generated_Source\PSoC4/UART_1.c ****             size = UART_1_FIFO_LENGTH;
 1125              		.loc 1 1306 0
 1126 0018 FB1D     		add	r3, r7, #7
 1127 001a 0422     		mov	r2, #4
 1128 001c 1A70     		strb	r2, [r3]
 1129 001e 0BE0     		b	.L88
 1130              	.L87:
1307:.\Generated_Source\PSoC4/UART_1.c ****         }
1308:.\Generated_Source\PSoC4/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 1131              		.loc 1 1308 0
 1132 0020 FB1D     		add	r3, r7, #7
 1133 0022 1A78     		ldrb	r2, [r3]
 1134 0024 0223     		mov	r3, #2
 1135 0026 1340     		and	r3, r2
 1136 0028 03D0     		beq	.L89
1309:.\Generated_Source\PSoC4/UART_1.c ****         {
1310:.\Generated_Source\PSoC4/UART_1.c ****             size = 0u;
 1137              		.loc 1 1310 0
 1138 002a FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 44


 1139 002c 0022     		mov	r2, #0
 1140 002e 1A70     		strb	r2, [r3]
 1141 0030 02E0     		b	.L88
 1142              	.L89:
1311:.\Generated_Source\PSoC4/UART_1.c ****         }
1312:.\Generated_Source\PSoC4/UART_1.c ****         else
1313:.\Generated_Source\PSoC4/UART_1.c ****         {
1314:.\Generated_Source\PSoC4/UART_1.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC4/UART_1.c ****             size = 1u;
 1143              		.loc 1 1315 0
 1144 0032 FB1D     		add	r3, r7, #7
 1145 0034 0122     		mov	r2, #1
 1146 0036 1A70     		strb	r2, [r3]
 1147              	.L88:
1316:.\Generated_Source\PSoC4/UART_1.c ****         }
1317:.\Generated_Source\PSoC4/UART_1.c **** 
1318:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC4/UART_1.c **** 
1320:.\Generated_Source\PSoC4/UART_1.c ****     return(size);
 1148              		.loc 1 1320 0
 1149 0038 FB1D     		add	r3, r7, #7
 1150 003a 1B78     		ldrb	r3, [r3]
1321:.\Generated_Source\PSoC4/UART_1.c ****     }
 1151              		.loc 1 1321 0
 1152 003c 181C     		mov	r0, r3
 1153 003e BD46     		mov	sp, r7
 1154 0040 02B0     		add	sp, sp, #8
 1155              		@ sp needed
 1156 0042 80BD     		pop	{r7, pc}
 1157              	.L92:
 1158              		.align	2
 1159              	.L91:
 1160 0044 60000F40 		.word	1074724960
 1161              		.cfi_endproc
 1162              	.LFE25:
 1163              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 1164              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 1165              		.align	2
 1166              		.global	UART_1_ClearTxBuffer
 1167              		.code	16
 1168              		.thumb_func
 1169              		.type	UART_1_ClearTxBuffer, %function
 1170              	UART_1_ClearTxBuffer:
 1171              	.LFB26:
1322:.\Generated_Source\PSoC4/UART_1.c **** 
1323:.\Generated_Source\PSoC4/UART_1.c **** 
1324:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC4/UART_1.c ****     *
1328:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1329:.\Generated_Source\PSoC4/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC4/UART_1.c ****     *
1331:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1332:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1333:.\Generated_Source\PSoC4/UART_1.c ****     *
1334:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 45


1335:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1336:.\Generated_Source\PSoC4/UART_1.c ****     *
1337:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1338:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC4/UART_1.c ****     *
1341:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1342:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1343:.\Generated_Source\PSoC4/UART_1.c ****     *
1344:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1345:.\Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC4/UART_1.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC4/UART_1.c ****     *
1349:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1350:.\Generated_Source\PSoC4/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC4/UART_1.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC4/UART_1.c ****     *
1353:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC4/UART_1.c ****     {
 1172              		.loc 1 1355 0
 1173              		.cfi_startproc
 1174 0000 90B5     		push	{r4, r7, lr}
 1175              		.cfi_def_cfa_offset 12
 1176              		.cfi_offset 4, -12
 1177              		.cfi_offset 7, -8
 1178              		.cfi_offset 14, -4
 1179 0002 83B0     		sub	sp, sp, #12
 1180              		.cfi_def_cfa_offset 24
 1181 0004 00AF     		add	r7, sp, #0
 1182              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC4/UART_1.c **** 
1358:.\Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1183              		.loc 1 1358 0
 1184 0006 FC1D     		add	r4, r7, #7
 1185 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1186 000c 031C     		mov	r3, r0
 1187 000e 2370     		strb	r3, [r4]
1359:.\Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 1188              		.loc 1 1360 0
 1189 0010 0B4B     		ldr	r3, .L94
 1190 0012 0B4A     		ldr	r2, .L94
 1191 0014 1278     		ldrb	r2, [r2]
 1192 0016 D2B2     		uxtb	r2, r2
 1193 0018 0221     		mov	r1, #2
 1194 001a 0A43     		orr	r2, r1
 1195 001c D2B2     		uxtb	r2, r2
 1196 001e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 1197              		.loc 1 1361 0
 1198 0020 074B     		ldr	r3, .L94
 1199 0022 074A     		ldr	r2, .L94
 1200 0024 1278     		ldrb	r2, [r2]
 1201 0026 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 46


 1202 0028 0221     		mov	r1, #2
 1203 002a 8A43     		bic	r2, r1
 1204 002c D2B2     		uxtb	r2, r2
 1205 002e 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 1206              		.loc 1 1362 0
 1207 0030 FB1D     		add	r3, r7, #7
 1208 0032 1B78     		ldrb	r3, [r3]
 1209 0034 181C     		mov	r0, r3
 1210 0036 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC4/UART_1.c **** 
1364:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC4/UART_1.c **** 
1366:.\Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1368:.\Generated_Source\PSoC4/UART_1.c **** 
1369:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC4/UART_1.c **** 
1372:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1374:.\Generated_Source\PSoC4/UART_1.c **** 
1375:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC4/UART_1.c ****     }
 1211              		.loc 1 1376 0
 1212 003a BD46     		mov	sp, r7
 1213 003c 03B0     		add	sp, sp, #12
 1214              		@ sp needed
 1215 003e 90BD     		pop	{r4, r7, pc}
 1216              	.L95:
 1217              		.align	2
 1218              	.L94:
 1219 0040 90000F40 		.word	1074725008
 1220              		.cfi_endproc
 1221              	.LFE26:
 1222              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1223              		.section	.text.UART_1_SendBreak,"ax",%progbits
 1224              		.align	2
 1225              		.global	UART_1_SendBreak
 1226              		.code	16
 1227              		.thumb_func
 1228              		.type	UART_1_SendBreak, %function
 1229              	UART_1_SendBreak:
 1230              	.LFB27:
1377:.\Generated_Source\PSoC4/UART_1.c **** 
1378:.\Generated_Source\PSoC4/UART_1.c **** 
1379:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC4/UART_1.c ****     *
1383:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1384:.\Generated_Source\PSoC4/UART_1.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC4/UART_1.c ****     *
1386:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1387:.\Generated_Source\PSoC4/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC4/UART_1.c ****     *       signal and return immediately.
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 47


1390:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC4/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC4/UART_1.c ****     *       then return.
1394:.\Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC4/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC4/UART_1.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC4/UART_1.c ****     *
1398:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1399:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1400:.\Generated_Source\PSoC4/UART_1.c ****     *
1401:.\Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1402:.\Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1404:.\Generated_Source\PSoC4/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC4/UART_1.c ****     *
1406:.\Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1407:.\Generated_Source\PSoC4/UART_1.c ****     *  No.
1408:.\Generated_Source\PSoC4/UART_1.c ****     *
1409:.\Generated_Source\PSoC4/UART_1.c ****     * Theory:
1410:.\Generated_Source\PSoC4/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC4/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC4/UART_1.c ****     *  operation.
1413:.\Generated_Source\PSoC4/UART_1.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC4/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC4/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC4/UART_1.c ****     *     complete.
1417:.\Generated_Source\PSoC4/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC4/UART_1.c ****     *     operation
1419:.\Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC4/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC4/UART_1.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC4/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC4/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC4/UART_1.c ****     *
1432:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1433:.\Generated_Source\PSoC4/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC4/UART_1.c ****     *  break signal.
1435:.\Generated_Source\PSoC4/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC4/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC4/UART_1.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC4/UART_1.c ****     *
1439:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC4/UART_1.c ****     {
 1231              		.loc 1 1441 0
 1232              		.cfi_startproc
 1233 0000 80B5     		push	{r7, lr}
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 7, -8
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 48


 1236              		.cfi_offset 14, -4
 1237 0002 84B0     		sub	sp, sp, #16
 1238              		.cfi_def_cfa_offset 24
 1239 0004 00AF     		add	r7, sp, #0
 1240              		.cfi_def_cfa_register 7
 1241 0006 021C     		mov	r2, r0
 1242 0008 FB1D     		add	r3, r7, #7
 1243 000a 1A70     		strb	r2, [r3]
1442:.\Generated_Source\PSoC4/UART_1.c **** 
1443:.\Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1244              		.loc 1 1444 0
 1245 000c 284B     		ldr	r3, .L104
 1246 000e 1B78     		ldrb	r3, [r3]
 1247 0010 002B     		cmp	r3, #0
 1248 0012 49D0     		beq	.L96
 1249              	.LBB2:
1445:.\Generated_Source\PSoC4/UART_1.c ****         {
1446:.\Generated_Source\PSoC4/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC4/UART_1.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC4/UART_1.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC4/UART_1.c **** 
1450:.\Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC4/UART_1.c **** 
1452:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 1250              		.loc 1 1452 0
 1251 0014 FB1D     		add	r3, r7, #7
 1252 0016 1B78     		ldrb	r3, [r3]
 1253 0018 002B     		cmp	r3, #0
 1254 001a 03D0     		beq	.L98
 1255              		.loc 1 1452 0 is_stmt 0 discriminator 1
 1256 001c FB1D     		add	r3, r7, #7
 1257 001e 1B78     		ldrb	r3, [r3]
 1258 0020 032B     		cmp	r3, #3
 1259 0022 16D1     		bne	.L99
 1260              	.L98:
1453:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC4/UART_1.c ****             {
1455:.\Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
 1261              		.loc 1 1456 0 is_stmt 1
 1262 0024 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1263 0028 031C     		mov	r3, r0
 1264 002a 0222     		mov	r2, #2
 1265 002c 1343     		orr	r3, r2
 1266 002e DBB2     		uxtb	r3, r3
 1267 0030 181C     		mov	r0, r3
 1268 0032 FFF7FEFF 		bl	UART_1_WriteControlRegister
1457:.\Generated_Source\PSoC4/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 1269              		.loc 1 1459 0
 1270 0036 1F4B     		ldr	r3, .L104+4
 1271 0038 0022     		mov	r2, #0
 1272 003a 1A70     		strb	r2, [r3]
 1273              	.L100:
1460:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 49


1461:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC4/UART_1.c ****                 {
1463:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1274              		.loc 1 1463 0 discriminator 1
 1275 003c 1E4A     		ldr	r2, .L104+8
 1276 003e 3B1C     		mov	r3, r7
 1277 0040 0F33     		add	r3, r3, #15
 1278 0042 1278     		ldrb	r2, [r2]
 1279 0044 1A70     		strb	r2, [r3]
1464:.\Generated_Source\PSoC4/UART_1.c ****                 }
1465:.\Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1280              		.loc 1 1465 0 discriminator 1
 1281 0046 3B1C     		mov	r3, r7
 1282 0048 0F33     		add	r3, r3, #15
 1283 004a 1A78     		ldrb	r2, [r3]
 1284 004c 0223     		mov	r3, #2
 1285 004e 1340     		and	r3, r2
 1286 0050 F4D1     		bne	.L100
 1287              	.L99:
1466:.\Generated_Source\PSoC4/UART_1.c ****             }
1467:.\Generated_Source\PSoC4/UART_1.c **** 
1468:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1288              		.loc 1 1468 0
 1289 0052 FB1D     		add	r3, r7, #7
 1290 0054 1B78     		ldrb	r3, [r3]
 1291 0056 012B     		cmp	r3, #1
 1292 0058 03D0     		beq	.L101
 1293              		.loc 1 1468 0 is_stmt 0 discriminator 1
 1294 005a FB1D     		add	r3, r7, #7
 1295 005c 1B78     		ldrb	r3, [r3]
 1296 005e 032B     		cmp	r3, #3
 1297 0060 0DD1     		bne	.L102
 1298              	.L101:
1469:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC4/UART_1.c ****             {
1471:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC4/UART_1.c ****                 {
1473:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1299              		.loc 1 1473 0 is_stmt 1 discriminator 1
 1300 0062 154A     		ldr	r2, .L104+8
 1301 0064 3B1C     		mov	r3, r7
 1302 0066 0F33     		add	r3, r3, #15
 1303 0068 1278     		ldrb	r2, [r2]
 1304 006a 1A70     		strb	r2, [r3]
1474:.\Generated_Source\PSoC4/UART_1.c ****                 }
1475:.\Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 1305              		.loc 1 1475 0 discriminator 1
 1306 006c 3B1C     		mov	r3, r7
 1307 006e 0F33     		add	r3, r3, #15
 1308 0070 1B78     		ldrb	r3, [r3]
 1309 0072 DB43     		mvn	r3, r3
 1310 0074 DBB2     		uxtb	r3, r3
 1311 0076 1A1C     		mov	r2, r3
 1312 0078 0123     		mov	r3, #1
 1313 007a 1340     		and	r3, r2
 1314 007c F1D1     		bne	.L101
 1315              	.L102:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 50


1476:.\Generated_Source\PSoC4/UART_1.c ****             }
1477:.\Generated_Source\PSoC4/UART_1.c **** 
1478:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1316              		.loc 1 1478 0
 1317 007e FB1D     		add	r3, r7, #7
 1318 0080 1B78     		ldrb	r3, [r3]
 1319 0082 012B     		cmp	r3, #1
 1320 0084 07D0     		beq	.L103
 1321              		.loc 1 1478 0 is_stmt 0 discriminator 1
 1322 0086 FB1D     		add	r3, r7, #7
 1323 0088 1B78     		ldrb	r3, [r3]
 1324 008a 022B     		cmp	r3, #2
 1325 008c 03D0     		beq	.L103
1479:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 1326              		.loc 1 1479 0 is_stmt 1
 1327 008e FB1D     		add	r3, r7, #7
 1328 0090 1B78     		ldrb	r3, [r3]
 1329 0092 032B     		cmp	r3, #3
 1330 0094 08D1     		bne	.L96
 1331              	.L103:
1480:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC4/UART_1.c ****             {
1482:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
 1332              		.loc 1 1482 0
 1333 0096 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1334 009a 031C     		mov	r3, r0
 1335 009c 0222     		mov	r2, #2
 1336 009e 9343     		bic	r3, r2
 1337 00a0 DBB2     		uxtb	r3, r3
 1338 00a2 181C     		mov	r0, r3
 1339 00a4 FFF7FEFF 		bl	UART_1_WriteControlRegister
 1340              	.L96:
 1341              	.LBE2:
1483:.\Generated_Source\PSoC4/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC4/UART_1.c ****             }
1485:.\Generated_Source\PSoC4/UART_1.c **** 
1486:.\Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC4/UART_1.c **** 
1488:.\Generated_Source\PSoC4/UART_1.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC4/UART_1.c **** 
1490:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1491:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC4/UART_1.c ****             {
1493:.\Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC4/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:.\Generated_Source\PSoC4/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC4/UART_1.c **** 
1500:.\Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
1502:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
1503:.\Generated_Source\PSoC4/UART_1.c ****                 #else
1504:.\Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 51


1507:.\Generated_Source\PSoC4/UART_1.c **** 
1508:.\Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1510:.\Generated_Source\PSoC4/UART_1.c **** 
1511:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC4/UART_1.c ****                 {
1513:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1514:.\Generated_Source\PSoC4/UART_1.c ****                 }
1515:.\Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1516:.\Generated_Source\PSoC4/UART_1.c ****             }
1517:.\Generated_Source\PSoC4/UART_1.c **** 
1518:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1519:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC4/UART_1.c ****             {
1521:.\Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC4/UART_1.c ****                 {
1523:.\Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1524:.\Generated_Source\PSoC4/UART_1.c ****                 }
1525:.\Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1526:.\Generated_Source\PSoC4/UART_1.c ****             }
1527:.\Generated_Source\PSoC4/UART_1.c **** 
1528:.\Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1530:.\Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC4/UART_1.c ****             {
1532:.\Generated_Source\PSoC4/UART_1.c **** 
1533:.\Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
1535:.\Generated_Source\PSoC4/UART_1.c ****             #else
1536:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC4/UART_1.c **** 
1539:.\Generated_Source\PSoC4/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC4/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:.\Generated_Source\PSoC4/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC4/UART_1.c ****             }
1545:.\Generated_Source\PSoC4/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:.\Generated_Source\PSoC4/UART_1.c ****         }
1547:.\Generated_Source\PSoC4/UART_1.c ****     }
 1342              		.loc 1 1547 0
 1343 00a8 BD46     		mov	sp, r7
 1344 00aa 04B0     		add	sp, sp, #16
 1345              		@ sp needed
 1346 00ac 80BD     		pop	{r7, pc}
 1347              	.L105:
 1348 00ae C046     		.align	2
 1349              	.L104:
 1350 00b0 00000000 		.word	UART_1_initVar
 1351 00b4 50000F40 		.word	1074724944
 1352 00b8 60000F40 		.word	1074724960
 1353              		.cfi_endproc
 1354              	.LFE27:
 1355              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1356              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1357              		.align	2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 52


 1358              		.global	UART_1_SetTxAddressMode
 1359              		.code	16
 1360              		.thumb_func
 1361              		.type	UART_1_SetTxAddressMode, %function
 1362              	UART_1_SetTxAddressMode:
 1363              	.LFB28:
1548:.\Generated_Source\PSoC4/UART_1.c **** 
1549:.\Generated_Source\PSoC4/UART_1.c **** 
1550:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC4/UART_1.c ****     *
1554:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1555:.\Generated_Source\PSoC4/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC4/UART_1.c ****     *
1557:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1558:.\Generated_Source\PSoC4/UART_1.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC4/UART_1.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC4/UART_1.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC4/UART_1.c ****     *
1564:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1565:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1566:.\Generated_Source\PSoC4/UART_1.c ****     *
1567:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1568:.\Generated_Source\PSoC4/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC4/UART_1.c ****     *  register.
1570:.\Generated_Source\PSoC4/UART_1.c ****     *
1571:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC4/UART_1.c ****     {
 1364              		.loc 1 1573 0
 1365              		.cfi_startproc
 1366 0000 80B5     		push	{r7, lr}
 1367              		.cfi_def_cfa_offset 8
 1368              		.cfi_offset 7, -8
 1369              		.cfi_offset 14, -4
 1370 0002 82B0     		sub	sp, sp, #8
 1371              		.cfi_def_cfa_offset 16
 1372 0004 00AF     		add	r7, sp, #0
 1373              		.cfi_def_cfa_register 7
 1374 0006 021C     		mov	r2, r0
 1375 0008 FB1D     		add	r3, r7, #7
 1376 000a 1A70     		strb	r2, [r3]
1574:.\Generated_Source\PSoC4/UART_1.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC4/UART_1.c ****         if(addressMode != 0u)
 1377              		.loc 1 1575 0
 1378 000c FB1D     		add	r3, r7, #7
 1379 000e 1B78     		ldrb	r3, [r3]
 1380 0010 002B     		cmp	r3, #0
 1381 0012 09D0     		beq	.L107
1576:.\Generated_Source\PSoC4/UART_1.c ****         {
1577:.\Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
 1382              		.loc 1 1578 0
 1383 0014 FFF7FEFF 		bl	UART_1_ReadControlRegister
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 53


 1384 0018 031C     		mov	r3, r0
 1385 001a 0422     		mov	r2, #4
 1386 001c 1343     		orr	r3, r2
 1387 001e DBB2     		uxtb	r3, r3
 1388 0020 181C     		mov	r0, r3
 1389 0022 FFF7FEFF 		bl	UART_1_WriteControlRegister
 1390 0026 08E0     		b	.L106
 1391              	.L107:
1579:.\Generated_Source\PSoC4/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC4/UART_1.c ****         }
1582:.\Generated_Source\PSoC4/UART_1.c ****         else
1583:.\Generated_Source\PSoC4/UART_1.c ****         {
1584:.\Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
 1392              		.loc 1 1585 0
 1393 0028 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1394 002c 031C     		mov	r3, r0
 1395 002e 0422     		mov	r2, #4
 1396 0030 9343     		bic	r3, r2
 1397 0032 DBB2     		uxtb	r3, r3
 1398 0034 181C     		mov	r0, r3
 1399 0036 FFF7FEFF 		bl	UART_1_WriteControlRegister
 1400              	.L106:
1586:.\Generated_Source\PSoC4/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:.\Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC4/UART_1.c ****         }
1589:.\Generated_Source\PSoC4/UART_1.c ****     }
 1401              		.loc 1 1589 0
 1402 003a BD46     		mov	sp, r7
 1403 003c 02B0     		add	sp, sp, #8
 1404              		@ sp needed
 1405 003e 80BD     		pop	{r7, pc}
 1406              		.cfi_endproc
 1407              	.LFE28:
 1408              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1409              		.section	.text.UART_1_LoadRxConfig,"ax",%progbits
 1410              		.align	2
 1411              		.global	UART_1_LoadRxConfig
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	UART_1_LoadRxConfig, %function
 1415              	UART_1_LoadRxConfig:
 1416              	.LFB29:
1590:.\Generated_Source\PSoC4/UART_1.c **** 
1591:.\Generated_Source\PSoC4/UART_1.c **** #endif  /* EndUART_1_TX_ENABLED */
1592:.\Generated_Source\PSoC4/UART_1.c **** 
1593:.\Generated_Source\PSoC4/UART_1.c **** #if(UART_1_HD_ENABLED)
1594:.\Generated_Source\PSoC4/UART_1.c **** 
1595:.\Generated_Source\PSoC4/UART_1.c **** 
1596:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1597:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_LoadRxConfig
1598:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1599:.\Generated_Source\PSoC4/UART_1.c ****     *
1600:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1601:.\Generated_Source\PSoC4/UART_1.c ****     *  Loads the receiver configuration in half duplex mode. After calling this
1602:.\Generated_Source\PSoC4/UART_1.c ****     *  function, the UART is ready to receive data.
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 54


1603:.\Generated_Source\PSoC4/UART_1.c ****     *
1604:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1605:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1606:.\Generated_Source\PSoC4/UART_1.c ****     *
1607:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1608:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1609:.\Generated_Source\PSoC4/UART_1.c ****     *
1610:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1611:.\Generated_Source\PSoC4/UART_1.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1612:.\Generated_Source\PSoC4/UART_1.c ****     *  transaction is complete and it is safe to unload the transmitter
1613:.\Generated_Source\PSoC4/UART_1.c ****     *  configuration.
1614:.\Generated_Source\PSoC4/UART_1.c ****     *
1615:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1616:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_LoadRxConfig(void) 
1617:.\Generated_Source\PSoC4/UART_1.c ****     {
 1417              		.loc 1 1617 0
 1418              		.cfi_startproc
 1419 0000 80B5     		push	{r7, lr}
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 7, -8
 1422              		.cfi_offset 14, -4
 1423 0002 00AF     		add	r7, sp, #0
 1424              		.cfi_def_cfa_register 7
1618:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
 1425              		.loc 1 1618 0
 1426 0004 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1427 0008 031C     		mov	r3, r0
 1428 000a 0122     		mov	r2, #1
 1429 000c 9343     		bic	r3, r2
 1430 000e DBB2     		uxtb	r3, r3
 1431 0010 181C     		mov	r0, r3
 1432 0012 FFF7FEFF 		bl	UART_1_WriteControlRegister
1619:.\Generated_Source\PSoC4/UART_1.c ****                                                 (uint8)~UART_1_CTRL_HD_SEND);
1620:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_HD_RXBITCTR_INIT;
 1433              		.loc 1 1620 0
 1434 0016 024B     		ldr	r3, .L110
 1435 0018 7222     		mov	r2, #114
 1436 001a 1A70     		strb	r2, [r3]
1621:.\Generated_Source\PSoC4/UART_1.c **** 
1622:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
1623:.\Generated_Source\PSoC4/UART_1.c ****         /* Enable RX interrupt after set RX configuration */
1624:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SetRxInterruptMode(UART_1_INIT_RX_INTERRUPTS_MASK);
1625:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
1626:.\Generated_Source\PSoC4/UART_1.c ****     }
 1437              		.loc 1 1626 0
 1438 001c BD46     		mov	sp, r7
 1439              		@ sp needed
 1440 001e 80BD     		pop	{r7, pc}
 1441              	.L111:
 1442              		.align	2
 1443              	.L110:
 1444 0020 82000F40 		.word	1074724994
 1445              		.cfi_endproc
 1446              	.LFE29:
 1447              		.size	UART_1_LoadRxConfig, .-UART_1_LoadRxConfig
 1448              		.section	.text.UART_1_LoadTxConfig,"ax",%progbits
 1449              		.align	2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 55


 1450              		.global	UART_1_LoadTxConfig
 1451              		.code	16
 1452              		.thumb_func
 1453              		.type	UART_1_LoadTxConfig, %function
 1454              	UART_1_LoadTxConfig:
 1455              	.LFB30:
1627:.\Generated_Source\PSoC4/UART_1.c **** 
1628:.\Generated_Source\PSoC4/UART_1.c **** 
1629:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1630:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_LoadTxConfig
1631:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1632:.\Generated_Source\PSoC4/UART_1.c ****     *
1633:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
1634:.\Generated_Source\PSoC4/UART_1.c ****     *  Loads the transmitter configuration in half duplex mode. After calling this
1635:.\Generated_Source\PSoC4/UART_1.c ****     *  function, the UART is ready to transmit data.
1636:.\Generated_Source\PSoC4/UART_1.c ****     *
1637:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1638:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1639:.\Generated_Source\PSoC4/UART_1.c ****     *
1640:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
1641:.\Generated_Source\PSoC4/UART_1.c ****     *  None.
1642:.\Generated_Source\PSoC4/UART_1.c ****     *
1643:.\Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1644:.\Generated_Source\PSoC4/UART_1.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1645:.\Generated_Source\PSoC4/UART_1.c ****     *  transaction is complete and it is safe to unload the receiver configuration.
1646:.\Generated_Source\PSoC4/UART_1.c ****     *
1647:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1648:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_LoadTxConfig(void) 
1649:.\Generated_Source\PSoC4/UART_1.c ****     {
 1456              		.loc 1 1649 0
 1457              		.cfi_startproc
 1458 0000 80B5     		push	{r7, lr}
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 7, -8
 1461              		.cfi_offset 14, -4
 1462 0002 00AF     		add	r7, sp, #0
 1463              		.cfi_def_cfa_register 7
1650:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
1651:.\Generated_Source\PSoC4/UART_1.c ****         /* Disable RX interrupts before set TX configuration */
1652:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SetRxInterruptMode(0u);
1653:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
1654:.\Generated_Source\PSoC4/UART_1.c **** 
1655:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister(UART_1_ReadControlRegister() | UART_1_CTRL_HD_SEND);
 1464              		.loc 1 1655 0
 1465 0004 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1466 0008 031C     		mov	r3, r0
 1467 000a 0122     		mov	r2, #1
 1468 000c 1343     		orr	r3, r2
 1469 000e DBB2     		uxtb	r3, r3
 1470 0010 181C     		mov	r0, r3
 1471 0012 FFF7FEFF 		bl	UART_1_WriteControlRegister
1656:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_HD_TXBITCTR_INIT;
 1472              		.loc 1 1656 0
 1473 0016 024B     		ldr	r3, .L113
 1474 0018 6F22     		mov	r2, #111
 1475 001a 1A70     		strb	r2, [r3]
1657:.\Generated_Source\PSoC4/UART_1.c ****     }
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 56


 1476              		.loc 1 1657 0
 1477 001c BD46     		mov	sp, r7
 1478              		@ sp needed
 1479 001e 80BD     		pop	{r7, pc}
 1480              	.L114:
 1481              		.align	2
 1482              	.L113:
 1483 0020 82000F40 		.word	1074724994
 1484              		.cfi_endproc
 1485              	.LFE30:
 1486              		.size	UART_1_LoadTxConfig, .-UART_1_LoadTxConfig
 1487              		.text
 1488              	.Letext0:
 1489              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1490              		.section	.debug_info,"",%progbits
 1491              	.Ldebug_info0:
 1492 0000 0E050000 		.4byte	0x50e
 1493 0004 0400     		.2byte	0x4
 1494 0006 00000000 		.4byte	.Ldebug_abbrev0
 1495 000a 04       		.byte	0x4
 1496 000b 01       		.uleb128 0x1
 1497 000c D8020000 		.4byte	.LASF61
 1498 0010 01       		.byte	0x1
 1499 0011 E6000000 		.4byte	.LASF62
 1500 0015 79010000 		.4byte	.LASF63
 1501 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1502 001d 00000000 		.4byte	0
 1503 0021 00000000 		.4byte	.Ldebug_line0
 1504 0025 02       		.uleb128 0x2
 1505 0026 01       		.byte	0x1
 1506 0027 06       		.byte	0x6
 1507 0028 9C000000 		.4byte	.LASF0
 1508 002c 02       		.uleb128 0x2
 1509 002d 01       		.byte	0x1
 1510 002e 08       		.byte	0x8
 1511 002f 86030000 		.4byte	.LASF1
 1512 0033 02       		.uleb128 0x2
 1513 0034 02       		.byte	0x2
 1514 0035 05       		.byte	0x5
 1515 0036 94030000 		.4byte	.LASF2
 1516 003a 02       		.uleb128 0x2
 1517 003b 02       		.byte	0x2
 1518 003c 07       		.byte	0x7
 1519 003d C9010000 		.4byte	.LASF3
 1520 0041 02       		.uleb128 0x2
 1521 0042 04       		.byte	0x4
 1522 0043 05       		.byte	0x5
 1523 0044 B7000000 		.4byte	.LASF4
 1524 0048 02       		.uleb128 0x2
 1525 0049 04       		.byte	0x4
 1526 004a 07       		.byte	0x7
 1527 004b 67010000 		.4byte	.LASF5
 1528 004f 02       		.uleb128 0x2
 1529 0050 08       		.byte	0x8
 1530 0051 05       		.byte	0x5
 1531 0052 8E000000 		.4byte	.LASF6
 1532 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 57


 1533 0057 08       		.byte	0x8
 1534 0058 07       		.byte	0x7
 1535 0059 60000000 		.4byte	.LASF7
 1536 005d 03       		.uleb128 0x3
 1537 005e 04       		.byte	0x4
 1538 005f 05       		.byte	0x5
 1539 0060 696E7400 		.ascii	"int\000"
 1540 0064 02       		.uleb128 0x2
 1541 0065 04       		.byte	0x4
 1542 0066 07       		.byte	0x7
 1543 0067 46010000 		.4byte	.LASF8
 1544 006b 04       		.uleb128 0x4
 1545 006c CD000000 		.4byte	.LASF9
 1546 0070 02       		.byte	0x2
 1547 0071 A1       		.byte	0xa1
 1548 0072 2C000000 		.4byte	0x2c
 1549 0076 04       		.uleb128 0x4
 1550 0077 00000000 		.4byte	.LASF10
 1551 007b 02       		.byte	0x2
 1552 007c A2       		.byte	0xa2
 1553 007d 3A000000 		.4byte	0x3a
 1554 0081 02       		.uleb128 0x2
 1555 0082 04       		.byte	0x4
 1556 0083 04       		.byte	0x4
 1557 0084 D2020000 		.4byte	.LASF11
 1558 0088 02       		.uleb128 0x2
 1559 0089 08       		.byte	0x8
 1560 008a 04       		.byte	0x4
 1561 008b D3000000 		.4byte	.LASF12
 1562 008f 04       		.uleb128 0x4
 1563 0090 0A040000 		.4byte	.LASF13
 1564 0094 02       		.byte	0x2
 1565 0095 B2       		.byte	0xb2
 1566 0096 9A000000 		.4byte	0x9a
 1567 009a 02       		.uleb128 0x2
 1568 009b 01       		.byte	0x1
 1569 009c 08       		.byte	0x8
 1570 009d 05040000 		.4byte	.LASF14
 1571 00a1 05       		.uleb128 0x5
 1572 00a2 81030000 		.4byte	.LASF15
 1573 00a6 02       		.byte	0x2
 1574 00a7 4B01     		.2byte	0x14b
 1575 00a9 AD000000 		.4byte	0xad
 1576 00ad 06       		.uleb128 0x6
 1577 00ae 6B000000 		.4byte	0x6b
 1578 00b2 02       		.uleb128 0x2
 1579 00b3 04       		.byte	0x4
 1580 00b4 07       		.byte	0x7
 1581 00b5 74020000 		.4byte	.LASF16
 1582 00b9 07       		.uleb128 0x7
 1583 00ba C0000000 		.4byte	.LASF17
 1584 00be 01       		.byte	0x1
 1585 00bf 4C       		.byte	0x4c
 1586 00c0 00000000 		.4byte	.LFB2
 1587 00c4 24000000 		.4byte	.LFE2-.LFB2
 1588 00c8 01       		.uleb128 0x1
 1589 00c9 9C       		.byte	0x9c
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 58


 1590 00ca 08       		.uleb128 0x8
 1591 00cb 10040000 		.4byte	.LASF18
 1592 00cf 01       		.byte	0x1
 1593 00d0 6A       		.byte	0x6a
 1594 00d1 00000000 		.4byte	.LFB3
 1595 00d5 1C000000 		.4byte	.LFE3-.LFB3
 1596 00d9 01       		.uleb128 0x1
 1597 00da 9C       		.byte	0x9c
 1598 00db 09       		.uleb128 0x9
 1599 00dc DC010000 		.4byte	.LASF19
 1600 00e0 01       		.byte	0x1
 1601 00e1 B7       		.byte	0xb7
 1602 00e2 00000000 		.4byte	.LFB4
 1603 00e6 50000000 		.4byte	.LFE4-.LFB4
 1604 00ea 01       		.uleb128 0x1
 1605 00eb 9C       		.byte	0x9c
 1606 00ec FF000000 		.4byte	0xff
 1607 00f0 0A       		.uleb128 0xa
 1608 00f1 1C040000 		.4byte	.LASF21
 1609 00f5 01       		.byte	0x1
 1610 00f6 B9       		.byte	0xb9
 1611 00f7 6B000000 		.4byte	0x6b
 1612 00fb 02       		.uleb128 0x2
 1613 00fc 91       		.byte	0x91
 1614 00fd 6F       		.sleb128 -17
 1615 00fe 00       		.byte	0
 1616 00ff 09       		.uleb128 0x9
 1617 0100 2D020000 		.4byte	.LASF20
 1618 0104 01       		.byte	0x1
 1619 0105 F0       		.byte	0xf0
 1620 0106 00000000 		.4byte	.LFB5
 1621 010a 4C000000 		.4byte	.LFE5-.LFB5
 1622 010e 01       		.uleb128 0x1
 1623 010f 9C       		.byte	0x9c
 1624 0110 23010000 		.4byte	0x123
 1625 0114 0A       		.uleb128 0xa
 1626 0115 1C040000 		.4byte	.LASF21
 1627 0119 01       		.byte	0x1
 1628 011a F2       		.byte	0xf2
 1629 011b 6B000000 		.4byte	0x6b
 1630 011f 02       		.uleb128 0x2
 1631 0120 91       		.byte	0x91
 1632 0121 6F       		.sleb128 -17
 1633 0122 00       		.byte	0
 1634 0123 0B       		.uleb128 0xb
 1635 0124 12020000 		.4byte	.LASF32
 1636 0128 01       		.byte	0x1
 1637 0129 2701     		.2byte	0x127
 1638 012b 6B000000 		.4byte	0x6b
 1639 012f 00000000 		.4byte	.LFB6
 1640 0133 14000000 		.4byte	.LFE6-.LFB6
 1641 0137 01       		.uleb128 0x1
 1642 0138 9C       		.byte	0x9c
 1643 0139 0C       		.uleb128 0xc
 1644 013a 9E030000 		.4byte	.LASF22
 1645 013e 01       		.byte	0x1
 1646 013f 3F01     		.2byte	0x13f
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 59


 1647 0141 00000000 		.4byte	.LFB7
 1648 0145 20000000 		.4byte	.LFE7-.LFB7
 1649 0149 01       		.uleb128 0x1
 1650 014a 9C       		.byte	0x9c
 1651 014b 5F010000 		.4byte	0x15f
 1652 014f 0D       		.uleb128 0xd
 1653 0150 08010000 		.4byte	.LASF24
 1654 0154 01       		.byte	0x1
 1655 0155 3F01     		.2byte	0x13f
 1656 0157 6B000000 		.4byte	0x6b
 1657 015b 02       		.uleb128 0x2
 1658 015c 91       		.byte	0x91
 1659 015d 77       		.sleb128 -9
 1660 015e 00       		.byte	0
 1661 015f 0C       		.uleb128 0xc
 1662 0160 10010000 		.4byte	.LASF23
 1663 0164 01       		.byte	0x1
 1664 0165 6701     		.2byte	0x167
 1665 0167 00000000 		.4byte	.LFB8
 1666 016b 20000000 		.4byte	.LFE8-.LFB8
 1667 016f 01       		.uleb128 0x1
 1668 0170 9C       		.byte	0x9c
 1669 0171 85010000 		.4byte	0x185
 1670 0175 0D       		.uleb128 0xd
 1671 0176 0B020000 		.4byte	.LASF25
 1672 017a 01       		.byte	0x1
 1673 017b 6701     		.2byte	0x167
 1674 017d 6B000000 		.4byte	0x6b
 1675 0181 02       		.uleb128 0x2
 1676 0182 91       		.byte	0x91
 1677 0183 77       		.sleb128 -9
 1678 0184 00       		.byte	0
 1679 0185 0E       		.uleb128 0xe
 1680 0186 4E000000 		.4byte	.LASF27
 1681 018a 01       		.byte	0x1
 1682 018b 8801     		.2byte	0x188
 1683 018d 6B000000 		.4byte	0x6b
 1684 0191 00000000 		.4byte	.LFB9
 1685 0195 20000000 		.4byte	.LFE9-.LFB9
 1686 0199 01       		.uleb128 0x1
 1687 019a 9C       		.byte	0x9c
 1688 019b AF010000 		.4byte	0x1af
 1689 019f 0F       		.uleb128 0xf
 1690 01a0 FE030000 		.4byte	.LASF26
 1691 01a4 01       		.byte	0x1
 1692 01a5 8A01     		.2byte	0x18a
 1693 01a7 6B000000 		.4byte	0x6b
 1694 01ab 02       		.uleb128 0x2
 1695 01ac 91       		.byte	0x91
 1696 01ad 77       		.sleb128 -9
 1697 01ae 00       		.byte	0
 1698 01af 0E       		.uleb128 0xe
 1699 01b0 34040000 		.4byte	.LASF28
 1700 01b4 01       		.byte	0x1
 1701 01b5 E501     		.2byte	0x1e5
 1702 01b7 6B000000 		.4byte	0x6b
 1703 01bb 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 60


 1704 01bf 24000000 		.4byte	.LFE10-.LFB10
 1705 01c3 01       		.uleb128 0x1
 1706 01c4 9C       		.byte	0x9c
 1707 01c5 D9010000 		.4byte	0x1d9
 1708 01c9 0F       		.uleb128 0xf
 1709 01ca 2D040000 		.4byte	.LASF29
 1710 01ce 01       		.byte	0x1
 1711 01cf E701     		.2byte	0x1e7
 1712 01d1 6B000000 		.4byte	0x6b
 1713 01d5 02       		.uleb128 0x2
 1714 01d6 91       		.byte	0x91
 1715 01d7 77       		.sleb128 -9
 1716 01d8 00       		.byte	0
 1717 01d9 0E       		.uleb128 0xe
 1718 01da 48040000 		.4byte	.LASF30
 1719 01de 01       		.byte	0x1
 1720 01df 1402     		.2byte	0x214
 1721 01e1 6B000000 		.4byte	0x6b
 1722 01e5 00000000 		.4byte	.LFB11
 1723 01e9 4C000000 		.4byte	.LFE11-.LFB11
 1724 01ed 01       		.uleb128 0x1
 1725 01ee 9C       		.byte	0x9c
 1726 01ef 12020000 		.4byte	0x212
 1727 01f3 0F       		.uleb128 0xf
 1728 01f4 FE030000 		.4byte	.LASF26
 1729 01f8 01       		.byte	0x1
 1730 01f9 1602     		.2byte	0x216
 1731 01fb 6B000000 		.4byte	0x6b
 1732 01ff 02       		.uleb128 0x2
 1733 0200 91       		.byte	0x91
 1734 0201 77       		.sleb128 -9
 1735 0202 0F       		.uleb128 0xf
 1736 0203 AF020000 		.4byte	.LASF31
 1737 0207 01       		.byte	0x1
 1738 0208 1702     		.2byte	0x217
 1739 020a 6B000000 		.4byte	0x6b
 1740 020e 02       		.uleb128 0x2
 1741 020f 91       		.byte	0x91
 1742 0210 76       		.sleb128 -10
 1743 0211 00       		.byte	0
 1744 0212 10       		.uleb128 0x10
 1745 0213 39020000 		.4byte	.LASF33
 1746 0217 01       		.byte	0x1
 1747 0218 7A02     		.2byte	0x27a
 1748 021a 76000000 		.4byte	0x76
 1749 021e 00000000 		.4byte	.LFB12
 1750 0222 22000000 		.4byte	.LFE12-.LFB12
 1751 0226 01       		.uleb128 0x1
 1752 0227 9C       		.byte	0x9c
 1753 0228 0E       		.uleb128 0xe
 1754 0229 D3030000 		.4byte	.LASF34
 1755 022d 01       		.byte	0x1
 1756 022e AB02     		.2byte	0x2ab
 1757 0230 6B000000 		.4byte	0x6b
 1758 0234 00000000 		.4byte	.LFB13
 1759 0238 30000000 		.4byte	.LFE13-.LFB13
 1760 023c 01       		.uleb128 0x1
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 61


 1761 023d 9C       		.byte	0x9c
 1762 023e 52020000 		.4byte	0x252
 1763 0242 0F       		.uleb128 0xf
 1764 0243 C4010000 		.4byte	.LASF35
 1765 0247 01       		.byte	0x1
 1766 0248 AE02     		.2byte	0x2ae
 1767 024a 6B000000 		.4byte	0x6b
 1768 024e 02       		.uleb128 0x2
 1769 024f 91       		.byte	0x91
 1770 0250 77       		.sleb128 -9
 1771 0251 00       		.byte	0
 1772 0252 11       		.uleb128 0x11
 1773 0253 54030000 		.4byte	.LASF36
 1774 0257 01       		.byte	0x1
 1775 0258 F502     		.2byte	0x2f5
 1776 025a 00000000 		.4byte	.LFB14
 1777 025e 44000000 		.4byte	.LFE14-.LFB14
 1778 0262 01       		.uleb128 0x1
 1779 0263 9C       		.byte	0x9c
 1780 0264 78020000 		.4byte	0x278
 1781 0268 0F       		.uleb128 0xf
 1782 0269 1C040000 		.4byte	.LASF21
 1783 026d 01       		.byte	0x1
 1784 026e F702     		.2byte	0x2f7
 1785 0270 6B000000 		.4byte	0x6b
 1786 0274 02       		.uleb128 0x2
 1787 0275 91       		.byte	0x91
 1788 0276 6F       		.sleb128 -17
 1789 0277 00       		.byte	0
 1790 0278 0C       		.uleb128 0xc
 1791 0279 69030000 		.4byte	.LASF37
 1792 027d 01       		.byte	0x1
 1793 027e 2D03     		.2byte	0x32d
 1794 0280 00000000 		.4byte	.LFB15
 1795 0284 12000000 		.4byte	.LFE15-.LFB15
 1796 0288 01       		.uleb128 0x1
 1797 0289 9C       		.byte	0x9c
 1798 028a 9E020000 		.4byte	0x29e
 1799 028e 0D       		.uleb128 0xd
 1800 028f DA000000 		.4byte	.LASF38
 1801 0293 01       		.byte	0x1
 1802 0294 2D03     		.2byte	0x32d
 1803 0296 6B000000 		.4byte	0x6b
 1804 029a 02       		.uleb128 0x2
 1805 029b 91       		.byte	0x91
 1806 029c 77       		.sleb128 -9
 1807 029d 00       		.byte	0
 1808 029e 0C       		.uleb128 0xc
 1809 029f 7D020000 		.4byte	.LASF39
 1810 02a3 01       		.byte	0x1
 1811 02a4 5903     		.2byte	0x359
 1812 02a6 00000000 		.4byte	.LFB16
 1813 02aa 20000000 		.4byte	.LFE16-.LFB16
 1814 02ae 01       		.uleb128 0x1
 1815 02af 9C       		.byte	0x9c
 1816 02b0 C4020000 		.4byte	0x2c4
 1817 02b4 0D       		.uleb128 0xd
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 62


 1818 02b5 A7020000 		.4byte	.LASF40
 1819 02b9 01       		.byte	0x1
 1820 02ba 5903     		.2byte	0x359
 1821 02bc 6B000000 		.4byte	0x6b
 1822 02c0 02       		.uleb128 0x2
 1823 02c1 91       		.byte	0x91
 1824 02c2 77       		.sleb128 -9
 1825 02c3 00       		.byte	0
 1826 02c4 0C       		.uleb128 0xc
 1827 02c5 92020000 		.4byte	.LASF41
 1828 02c9 01       		.byte	0x1
 1829 02ca 6D03     		.2byte	0x36d
 1830 02cc 00000000 		.4byte	.LFB17
 1831 02d0 20000000 		.4byte	.LFE17-.LFB17
 1832 02d4 01       		.uleb128 0x1
 1833 02d5 9C       		.byte	0x9c
 1834 02d6 EA020000 		.4byte	0x2ea
 1835 02da 0D       		.uleb128 0xd
 1836 02db A7020000 		.4byte	.LASF40
 1837 02df 01       		.byte	0x1
 1838 02e0 6D03     		.2byte	0x36d
 1839 02e2 6B000000 		.4byte	0x6b
 1840 02e6 02       		.uleb128 0x2
 1841 02e7 91       		.byte	0x91
 1842 02e8 77       		.sleb128 -9
 1843 02e9 00       		.byte	0
 1844 02ea 0C       		.uleb128 0xc
 1845 02eb B8020000 		.4byte	.LASF42
 1846 02ef 01       		.byte	0x1
 1847 02f0 8C03     		.2byte	0x38c
 1848 02f2 00000000 		.4byte	.LFB18
 1849 02f6 20000000 		.4byte	.LFE18-.LFB18
 1850 02fa 01       		.uleb128 0x1
 1851 02fb 9C       		.byte	0x9c
 1852 02fc 10030000 		.4byte	0x310
 1853 0300 0D       		.uleb128 0xd
 1854 0301 0B020000 		.4byte	.LASF25
 1855 0305 01       		.byte	0x1
 1856 0306 8C03     		.2byte	0x38c
 1857 0308 6B000000 		.4byte	0x6b
 1858 030c 02       		.uleb128 0x2
 1859 030d 91       		.byte	0x91
 1860 030e 77       		.sleb128 -9
 1861 030f 00       		.byte	0
 1862 0310 0C       		.uleb128 0xc
 1863 0311 59020000 		.4byte	.LASF43
 1864 0315 01       		.byte	0x1
 1865 0316 AE03     		.2byte	0x3ae
 1866 0318 00000000 		.4byte	.LFB19
 1867 031c 2C000000 		.4byte	.LFE19-.LFB19
 1868 0320 01       		.uleb128 0x1
 1869 0321 9C       		.byte	0x9c
 1870 0322 36030000 		.4byte	0x336
 1871 0326 0D       		.uleb128 0xd
 1872 0327 1C000000 		.4byte	.LASF44
 1873 032b 01       		.byte	0x1
 1874 032c AE03     		.2byte	0x3ae
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 63


 1875 032e 6B000000 		.4byte	0x6b
 1876 0332 02       		.uleb128 0x2
 1877 0333 91       		.byte	0x91
 1878 0334 77       		.sleb128 -9
 1879 0335 00       		.byte	0
 1880 0336 0B       		.uleb128 0xb
 1881 0337 53010000 		.4byte	.LASF45
 1882 033b 01       		.byte	0x1
 1883 033c EB03     		.2byte	0x3eb
 1884 033e 6B000000 		.4byte	0x6b
 1885 0342 00000000 		.4byte	.LFB20
 1886 0346 14000000 		.4byte	.LFE20-.LFB20
 1887 034a 01       		.uleb128 0x1
 1888 034b 9C       		.byte	0x9c
 1889 034c 0C       		.uleb128 0xc
 1890 034d 27000000 		.4byte	.LASF46
 1891 0351 01       		.byte	0x1
 1892 0352 1104     		.2byte	0x411
 1893 0354 00000000 		.4byte	.LFB21
 1894 0358 34000000 		.4byte	.LFE21-.LFB21
 1895 035c 01       		.uleb128 0x1
 1896 035d 9C       		.byte	0x9c
 1897 035e 72030000 		.4byte	0x372
 1898 0362 0D       		.uleb128 0xd
 1899 0363 1C000000 		.4byte	.LASF44
 1900 0367 01       		.byte	0x1
 1901 0368 1104     		.2byte	0x411
 1902 036a 6B000000 		.4byte	0x6b
 1903 036e 02       		.uleb128 0x2
 1904 036f 91       		.byte	0x91
 1905 0370 77       		.sleb128 -9
 1906 0371 00       		.byte	0
 1907 0372 11       		.uleb128 0x11
 1908 0373 48020000 		.4byte	.LASF47
 1909 0377 01       		.byte	0x1
 1910 0378 7904     		.2byte	0x479
 1911 037a 00000000 		.4byte	.LFB22
 1912 037e 54000000 		.4byte	.LFE22-.LFB22
 1913 0382 01       		.uleb128 0x1
 1914 0383 9C       		.byte	0x9c
 1915 0384 A7030000 		.4byte	0x3a7
 1916 0388 0D       		.uleb128 0xd
 1917 0389 36000000 		.4byte	.LASF48
 1918 038d 01       		.byte	0x1
 1919 038e 7904     		.2byte	0x479
 1920 0390 A7030000 		.4byte	0x3a7
 1921 0394 02       		.uleb128 0x2
 1922 0395 91       		.byte	0x91
 1923 0396 6C       		.sleb128 -20
 1924 0397 0F       		.uleb128 0xf
 1925 0398 EA010000 		.4byte	.LASF49
 1926 039c 01       		.byte	0x1
 1927 039d 7B04     		.2byte	0x47b
 1928 039f 76000000 		.4byte	0x76
 1929 03a3 02       		.uleb128 0x2
 1930 03a4 91       		.byte	0x91
 1931 03a5 76       		.sleb128 -10
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 64


 1932 03a6 00       		.byte	0
 1933 03a7 12       		.uleb128 0x12
 1934 03a8 04       		.byte	0x4
 1935 03a9 AD030000 		.4byte	0x3ad
 1936 03ad 13       		.uleb128 0x13
 1937 03ae 8F000000 		.4byte	0x8f
 1938 03b2 11       		.uleb128 0x11
 1939 03b3 57040000 		.4byte	.LASF50
 1940 03b7 01       		.byte	0x1
 1941 03b8 A704     		.2byte	0x4a7
 1942 03ba 00000000 		.4byte	.LFB23
 1943 03be 58000000 		.4byte	.LFE23-.LFB23
 1944 03c2 01       		.uleb128 0x1
 1945 03c3 9C       		.byte	0x9c
 1946 03c4 F6030000 		.4byte	0x3f6
 1947 03c8 0D       		.uleb128 0xd
 1948 03c9 36000000 		.4byte	.LASF48
 1949 03cd 01       		.byte	0x1
 1950 03ce A704     		.2byte	0x4a7
 1951 03d0 F6030000 		.4byte	0x3f6
 1952 03d4 02       		.uleb128 0x2
 1953 03d5 91       		.byte	0x91
 1954 03d6 6C       		.sleb128 -20
 1955 03d7 0D       		.uleb128 0xd
 1956 03d8 C9030000 		.4byte	.LASF51
 1957 03dc 01       		.byte	0x1
 1958 03dd A704     		.2byte	0x4a7
 1959 03df 6B000000 		.4byte	0x6b
 1960 03e3 02       		.uleb128 0x2
 1961 03e4 91       		.byte	0x91
 1962 03e5 6B       		.sleb128 -21
 1963 03e6 0F       		.uleb128 0xf
 1964 03e7 EA010000 		.4byte	.LASF49
 1965 03eb 01       		.byte	0x1
 1966 03ec AA04     		.2byte	0x4aa
 1967 03ee 6B000000 		.4byte	0x6b
 1968 03f2 02       		.uleb128 0x2
 1969 03f3 91       		.byte	0x91
 1970 03f4 77       		.sleb128 -9
 1971 03f5 00       		.byte	0
 1972 03f6 12       		.uleb128 0x12
 1973 03f7 04       		.byte	0x4
 1974 03f8 FC030000 		.4byte	0x3fc
 1975 03fc 13       		.uleb128 0x13
 1976 03fd 6B000000 		.4byte	0x6b
 1977 0401 11       		.uleb128 0x11
 1978 0402 A8000000 		.4byte	.LASF52
 1979 0406 01       		.byte	0x1
 1980 0407 CE04     		.2byte	0x4ce
 1981 0409 00000000 		.4byte	.LFB24
 1982 040d 34000000 		.4byte	.LFE24-.LFB24
 1983 0411 01       		.uleb128 0x1
 1984 0412 9C       		.byte	0x9c
 1985 0413 27040000 		.4byte	0x427
 1986 0417 0D       		.uleb128 0xd
 1987 0418 1C000000 		.4byte	.LASF44
 1988 041c 01       		.byte	0x1
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 65


 1989 041d CE04     		.2byte	0x4ce
 1990 041f 6B000000 		.4byte	0x6b
 1991 0423 02       		.uleb128 0x2
 1992 0424 91       		.byte	0x91
 1993 0425 77       		.sleb128 -9
 1994 0426 00       		.byte	0
 1995 0427 0E       		.uleb128 0xe
 1996 0428 77000000 		.4byte	.LASF53
 1997 042c 01       		.byte	0x1
 1998 042d F904     		.2byte	0x4f9
 1999 042f 6B000000 		.4byte	0x6b
 2000 0433 00000000 		.4byte	.LFB25
 2001 0437 48000000 		.4byte	.LFE25-.LFB25
 2002 043b 01       		.uleb128 0x1
 2003 043c 9C       		.byte	0x9c
 2004 043d 51040000 		.4byte	0x451
 2005 0441 0F       		.uleb128 0xf
 2006 0442 C4010000 		.4byte	.LASF35
 2007 0446 01       		.byte	0x1
 2008 0447 FC04     		.2byte	0x4fc
 2009 0449 6B000000 		.4byte	0x6b
 2010 044d 02       		.uleb128 0x2
 2011 044e 91       		.byte	0x91
 2012 044f 77       		.sleb128 -9
 2013 0450 00       		.byte	0
 2014 0451 11       		.uleb128 0x11
 2015 0452 07000000 		.4byte	.LASF54
 2016 0456 01       		.byte	0x1
 2017 0457 4A05     		.2byte	0x54a
 2018 0459 00000000 		.4byte	.LFB26
 2019 045d 44000000 		.4byte	.LFE26-.LFB26
 2020 0461 01       		.uleb128 0x1
 2021 0462 9C       		.byte	0x9c
 2022 0463 77040000 		.4byte	0x477
 2023 0467 0F       		.uleb128 0xf
 2024 0468 1C040000 		.4byte	.LASF21
 2025 046c 01       		.byte	0x1
 2026 046d 4C05     		.2byte	0x54c
 2027 046f 6B000000 		.4byte	0x6b
 2028 0473 02       		.uleb128 0x2
 2029 0474 91       		.byte	0x91
 2030 0475 6F       		.sleb128 -17
 2031 0476 00       		.byte	0
 2032 0477 11       		.uleb128 0x11
 2033 0478 3D000000 		.4byte	.LASF55
 2034 047c 01       		.byte	0x1
 2035 047d A005     		.2byte	0x5a0
 2036 047f 00000000 		.4byte	.LFB27
 2037 0483 BC000000 		.4byte	.LFE27-.LFB27
 2038 0487 01       		.uleb128 0x1
 2039 0488 9C       		.byte	0x9c
 2040 0489 B6040000 		.4byte	0x4b6
 2041 048d 0D       		.uleb128 0xd
 2042 048e 2A010000 		.4byte	.LASF56
 2043 0492 01       		.byte	0x1
 2044 0493 A005     		.2byte	0x5a0
 2045 0495 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 66


 2046 0499 02       		.uleb128 0x2
 2047 049a 91       		.byte	0x91
 2048 049b 6F       		.sleb128 -17
 2049 049c 14       		.uleb128 0x14
 2050 049d 14000000 		.4byte	.LBB2
 2051 04a1 94000000 		.4byte	.LBE2-.LBB2
 2052 04a5 0F       		.uleb128 0xf
 2053 04a6 6C020000 		.4byte	.LASF57
 2054 04aa 01       		.byte	0x1
 2055 04ab A805     		.2byte	0x5a8
 2056 04ad 6B000000 		.4byte	0x6b
 2057 04b1 02       		.uleb128 0x2
 2058 04b2 91       		.byte	0x91
 2059 04b3 77       		.sleb128 -9
 2060 04b4 00       		.byte	0
 2061 04b5 00       		.byte	0
 2062 04b6 11       		.uleb128 0x11
 2063 04b7 F3010000 		.4byte	.LASF58
 2064 04bb 01       		.byte	0x1
 2065 04bc 2406     		.2byte	0x624
 2066 04be 00000000 		.4byte	.LFB28
 2067 04c2 40000000 		.4byte	.LFE28-.LFB28
 2068 04c6 01       		.uleb128 0x1
 2069 04c7 9C       		.byte	0x9c
 2070 04c8 DC040000 		.4byte	0x4dc
 2071 04cc 0D       		.uleb128 0xd
 2072 04cd DA000000 		.4byte	.LASF38
 2073 04d1 01       		.byte	0x1
 2074 04d2 2406     		.2byte	0x624
 2075 04d4 6B000000 		.4byte	0x6b
 2076 04d8 02       		.uleb128 0x2
 2077 04d9 91       		.byte	0x91
 2078 04da 77       		.sleb128 -9
 2079 04db 00       		.byte	0
 2080 04dc 15       		.uleb128 0x15
 2081 04dd 32010000 		.4byte	.LASF59
 2082 04e1 01       		.byte	0x1
 2083 04e2 5006     		.2byte	0x650
 2084 04e4 00000000 		.4byte	.LFB29
 2085 04e8 24000000 		.4byte	.LFE29-.LFB29
 2086 04ec 01       		.uleb128 0x1
 2087 04ed 9C       		.byte	0x9c
 2088 04ee 15       		.uleb128 0x15
 2089 04ef EA030000 		.4byte	.LASF60
 2090 04f3 01       		.byte	0x1
 2091 04f4 7006     		.2byte	0x670
 2092 04f6 00000000 		.4byte	.LFB30
 2093 04fa 24000000 		.4byte	.LFE30-.LFB30
 2094 04fe 01       		.uleb128 0x1
 2095 04ff 9C       		.byte	0x9c
 2096 0500 16       		.uleb128 0x16
 2097 0501 BA030000 		.4byte	.LASF64
 2098 0505 01       		.byte	0x1
 2099 0506 1B       		.byte	0x1b
 2100 0507 6B000000 		.4byte	0x6b
 2101 050b 05       		.uleb128 0x5
 2102 050c 03       		.byte	0x3
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 67


 2103 050d 00000000 		.4byte	UART_1_initVar
 2104 0511 00       		.byte	0
 2105              		.section	.debug_abbrev,"",%progbits
 2106              	.Ldebug_abbrev0:
 2107 0000 01       		.uleb128 0x1
 2108 0001 11       		.uleb128 0x11
 2109 0002 01       		.byte	0x1
 2110 0003 25       		.uleb128 0x25
 2111 0004 0E       		.uleb128 0xe
 2112 0005 13       		.uleb128 0x13
 2113 0006 0B       		.uleb128 0xb
 2114 0007 03       		.uleb128 0x3
 2115 0008 0E       		.uleb128 0xe
 2116 0009 1B       		.uleb128 0x1b
 2117 000a 0E       		.uleb128 0xe
 2118 000b 55       		.uleb128 0x55
 2119 000c 17       		.uleb128 0x17
 2120 000d 11       		.uleb128 0x11
 2121 000e 01       		.uleb128 0x1
 2122 000f 10       		.uleb128 0x10
 2123 0010 17       		.uleb128 0x17
 2124 0011 00       		.byte	0
 2125 0012 00       		.byte	0
 2126 0013 02       		.uleb128 0x2
 2127 0014 24       		.uleb128 0x24
 2128 0015 00       		.byte	0
 2129 0016 0B       		.uleb128 0xb
 2130 0017 0B       		.uleb128 0xb
 2131 0018 3E       		.uleb128 0x3e
 2132 0019 0B       		.uleb128 0xb
 2133 001a 03       		.uleb128 0x3
 2134 001b 0E       		.uleb128 0xe
 2135 001c 00       		.byte	0
 2136 001d 00       		.byte	0
 2137 001e 03       		.uleb128 0x3
 2138 001f 24       		.uleb128 0x24
 2139 0020 00       		.byte	0
 2140 0021 0B       		.uleb128 0xb
 2141 0022 0B       		.uleb128 0xb
 2142 0023 3E       		.uleb128 0x3e
 2143 0024 0B       		.uleb128 0xb
 2144 0025 03       		.uleb128 0x3
 2145 0026 08       		.uleb128 0x8
 2146 0027 00       		.byte	0
 2147 0028 00       		.byte	0
 2148 0029 04       		.uleb128 0x4
 2149 002a 16       		.uleb128 0x16
 2150 002b 00       		.byte	0
 2151 002c 03       		.uleb128 0x3
 2152 002d 0E       		.uleb128 0xe
 2153 002e 3A       		.uleb128 0x3a
 2154 002f 0B       		.uleb128 0xb
 2155 0030 3B       		.uleb128 0x3b
 2156 0031 0B       		.uleb128 0xb
 2157 0032 49       		.uleb128 0x49
 2158 0033 13       		.uleb128 0x13
 2159 0034 00       		.byte	0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 68


 2160 0035 00       		.byte	0
 2161 0036 05       		.uleb128 0x5
 2162 0037 16       		.uleb128 0x16
 2163 0038 00       		.byte	0
 2164 0039 03       		.uleb128 0x3
 2165 003a 0E       		.uleb128 0xe
 2166 003b 3A       		.uleb128 0x3a
 2167 003c 0B       		.uleb128 0xb
 2168 003d 3B       		.uleb128 0x3b
 2169 003e 05       		.uleb128 0x5
 2170 003f 49       		.uleb128 0x49
 2171 0040 13       		.uleb128 0x13
 2172 0041 00       		.byte	0
 2173 0042 00       		.byte	0
 2174 0043 06       		.uleb128 0x6
 2175 0044 35       		.uleb128 0x35
 2176 0045 00       		.byte	0
 2177 0046 49       		.uleb128 0x49
 2178 0047 13       		.uleb128 0x13
 2179 0048 00       		.byte	0
 2180 0049 00       		.byte	0
 2181 004a 07       		.uleb128 0x7
 2182 004b 2E       		.uleb128 0x2e
 2183 004c 00       		.byte	0
 2184 004d 3F       		.uleb128 0x3f
 2185 004e 19       		.uleb128 0x19
 2186 004f 03       		.uleb128 0x3
 2187 0050 0E       		.uleb128 0xe
 2188 0051 3A       		.uleb128 0x3a
 2189 0052 0B       		.uleb128 0xb
 2190 0053 3B       		.uleb128 0x3b
 2191 0054 0B       		.uleb128 0xb
 2192 0055 27       		.uleb128 0x27
 2193 0056 19       		.uleb128 0x19
 2194 0057 11       		.uleb128 0x11
 2195 0058 01       		.uleb128 0x1
 2196 0059 12       		.uleb128 0x12
 2197 005a 06       		.uleb128 0x6
 2198 005b 40       		.uleb128 0x40
 2199 005c 18       		.uleb128 0x18
 2200 005d 9642     		.uleb128 0x2116
 2201 005f 19       		.uleb128 0x19
 2202 0060 00       		.byte	0
 2203 0061 00       		.byte	0
 2204 0062 08       		.uleb128 0x8
 2205 0063 2E       		.uleb128 0x2e
 2206 0064 00       		.byte	0
 2207 0065 3F       		.uleb128 0x3f
 2208 0066 19       		.uleb128 0x19
 2209 0067 03       		.uleb128 0x3
 2210 0068 0E       		.uleb128 0xe
 2211 0069 3A       		.uleb128 0x3a
 2212 006a 0B       		.uleb128 0xb
 2213 006b 3B       		.uleb128 0x3b
 2214 006c 0B       		.uleb128 0xb
 2215 006d 27       		.uleb128 0x27
 2216 006e 19       		.uleb128 0x19
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 69


 2217 006f 11       		.uleb128 0x11
 2218 0070 01       		.uleb128 0x1
 2219 0071 12       		.uleb128 0x12
 2220 0072 06       		.uleb128 0x6
 2221 0073 40       		.uleb128 0x40
 2222 0074 18       		.uleb128 0x18
 2223 0075 9742     		.uleb128 0x2117
 2224 0077 19       		.uleb128 0x19
 2225 0078 00       		.byte	0
 2226 0079 00       		.byte	0
 2227 007a 09       		.uleb128 0x9
 2228 007b 2E       		.uleb128 0x2e
 2229 007c 01       		.byte	0x1
 2230 007d 3F       		.uleb128 0x3f
 2231 007e 19       		.uleb128 0x19
 2232 007f 03       		.uleb128 0x3
 2233 0080 0E       		.uleb128 0xe
 2234 0081 3A       		.uleb128 0x3a
 2235 0082 0B       		.uleb128 0xb
 2236 0083 3B       		.uleb128 0x3b
 2237 0084 0B       		.uleb128 0xb
 2238 0085 27       		.uleb128 0x27
 2239 0086 19       		.uleb128 0x19
 2240 0087 11       		.uleb128 0x11
 2241 0088 01       		.uleb128 0x1
 2242 0089 12       		.uleb128 0x12
 2243 008a 06       		.uleb128 0x6
 2244 008b 40       		.uleb128 0x40
 2245 008c 18       		.uleb128 0x18
 2246 008d 9642     		.uleb128 0x2116
 2247 008f 19       		.uleb128 0x19
 2248 0090 01       		.uleb128 0x1
 2249 0091 13       		.uleb128 0x13
 2250 0092 00       		.byte	0
 2251 0093 00       		.byte	0
 2252 0094 0A       		.uleb128 0xa
 2253 0095 34       		.uleb128 0x34
 2254 0096 00       		.byte	0
 2255 0097 03       		.uleb128 0x3
 2256 0098 0E       		.uleb128 0xe
 2257 0099 3A       		.uleb128 0x3a
 2258 009a 0B       		.uleb128 0xb
 2259 009b 3B       		.uleb128 0x3b
 2260 009c 0B       		.uleb128 0xb
 2261 009d 49       		.uleb128 0x49
 2262 009e 13       		.uleb128 0x13
 2263 009f 02       		.uleb128 0x2
 2264 00a0 18       		.uleb128 0x18
 2265 00a1 00       		.byte	0
 2266 00a2 00       		.byte	0
 2267 00a3 0B       		.uleb128 0xb
 2268 00a4 2E       		.uleb128 0x2e
 2269 00a5 00       		.byte	0
 2270 00a6 3F       		.uleb128 0x3f
 2271 00a7 19       		.uleb128 0x19
 2272 00a8 03       		.uleb128 0x3
 2273 00a9 0E       		.uleb128 0xe
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 70


 2274 00aa 3A       		.uleb128 0x3a
 2275 00ab 0B       		.uleb128 0xb
 2276 00ac 3B       		.uleb128 0x3b
 2277 00ad 05       		.uleb128 0x5
 2278 00ae 27       		.uleb128 0x27
 2279 00af 19       		.uleb128 0x19
 2280 00b0 49       		.uleb128 0x49
 2281 00b1 13       		.uleb128 0x13
 2282 00b2 11       		.uleb128 0x11
 2283 00b3 01       		.uleb128 0x1
 2284 00b4 12       		.uleb128 0x12
 2285 00b5 06       		.uleb128 0x6
 2286 00b6 40       		.uleb128 0x40
 2287 00b7 18       		.uleb128 0x18
 2288 00b8 9742     		.uleb128 0x2117
 2289 00ba 19       		.uleb128 0x19
 2290 00bb 00       		.byte	0
 2291 00bc 00       		.byte	0
 2292 00bd 0C       		.uleb128 0xc
 2293 00be 2E       		.uleb128 0x2e
 2294 00bf 01       		.byte	0x1
 2295 00c0 3F       		.uleb128 0x3f
 2296 00c1 19       		.uleb128 0x19
 2297 00c2 03       		.uleb128 0x3
 2298 00c3 0E       		.uleb128 0xe
 2299 00c4 3A       		.uleb128 0x3a
 2300 00c5 0B       		.uleb128 0xb
 2301 00c6 3B       		.uleb128 0x3b
 2302 00c7 05       		.uleb128 0x5
 2303 00c8 27       		.uleb128 0x27
 2304 00c9 19       		.uleb128 0x19
 2305 00ca 11       		.uleb128 0x11
 2306 00cb 01       		.uleb128 0x1
 2307 00cc 12       		.uleb128 0x12
 2308 00cd 06       		.uleb128 0x6
 2309 00ce 40       		.uleb128 0x40
 2310 00cf 18       		.uleb128 0x18
 2311 00d0 9742     		.uleb128 0x2117
 2312 00d2 19       		.uleb128 0x19
 2313 00d3 01       		.uleb128 0x1
 2314 00d4 13       		.uleb128 0x13
 2315 00d5 00       		.byte	0
 2316 00d6 00       		.byte	0
 2317 00d7 0D       		.uleb128 0xd
 2318 00d8 05       		.uleb128 0x5
 2319 00d9 00       		.byte	0
 2320 00da 03       		.uleb128 0x3
 2321 00db 0E       		.uleb128 0xe
 2322 00dc 3A       		.uleb128 0x3a
 2323 00dd 0B       		.uleb128 0xb
 2324 00de 3B       		.uleb128 0x3b
 2325 00df 05       		.uleb128 0x5
 2326 00e0 49       		.uleb128 0x49
 2327 00e1 13       		.uleb128 0x13
 2328 00e2 02       		.uleb128 0x2
 2329 00e3 18       		.uleb128 0x18
 2330 00e4 00       		.byte	0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 71


 2331 00e5 00       		.byte	0
 2332 00e6 0E       		.uleb128 0xe
 2333 00e7 2E       		.uleb128 0x2e
 2334 00e8 01       		.byte	0x1
 2335 00e9 3F       		.uleb128 0x3f
 2336 00ea 19       		.uleb128 0x19
 2337 00eb 03       		.uleb128 0x3
 2338 00ec 0E       		.uleb128 0xe
 2339 00ed 3A       		.uleb128 0x3a
 2340 00ee 0B       		.uleb128 0xb
 2341 00ef 3B       		.uleb128 0x3b
 2342 00f0 05       		.uleb128 0x5
 2343 00f1 27       		.uleb128 0x27
 2344 00f2 19       		.uleb128 0x19
 2345 00f3 49       		.uleb128 0x49
 2346 00f4 13       		.uleb128 0x13
 2347 00f5 11       		.uleb128 0x11
 2348 00f6 01       		.uleb128 0x1
 2349 00f7 12       		.uleb128 0x12
 2350 00f8 06       		.uleb128 0x6
 2351 00f9 40       		.uleb128 0x40
 2352 00fa 18       		.uleb128 0x18
 2353 00fb 9742     		.uleb128 0x2117
 2354 00fd 19       		.uleb128 0x19
 2355 00fe 01       		.uleb128 0x1
 2356 00ff 13       		.uleb128 0x13
 2357 0100 00       		.byte	0
 2358 0101 00       		.byte	0
 2359 0102 0F       		.uleb128 0xf
 2360 0103 34       		.uleb128 0x34
 2361 0104 00       		.byte	0
 2362 0105 03       		.uleb128 0x3
 2363 0106 0E       		.uleb128 0xe
 2364 0107 3A       		.uleb128 0x3a
 2365 0108 0B       		.uleb128 0xb
 2366 0109 3B       		.uleb128 0x3b
 2367 010a 05       		.uleb128 0x5
 2368 010b 49       		.uleb128 0x49
 2369 010c 13       		.uleb128 0x13
 2370 010d 02       		.uleb128 0x2
 2371 010e 18       		.uleb128 0x18
 2372 010f 00       		.byte	0
 2373 0110 00       		.byte	0
 2374 0111 10       		.uleb128 0x10
 2375 0112 2E       		.uleb128 0x2e
 2376 0113 00       		.byte	0
 2377 0114 3F       		.uleb128 0x3f
 2378 0115 19       		.uleb128 0x19
 2379 0116 03       		.uleb128 0x3
 2380 0117 0E       		.uleb128 0xe
 2381 0118 3A       		.uleb128 0x3a
 2382 0119 0B       		.uleb128 0xb
 2383 011a 3B       		.uleb128 0x3b
 2384 011b 05       		.uleb128 0x5
 2385 011c 27       		.uleb128 0x27
 2386 011d 19       		.uleb128 0x19
 2387 011e 49       		.uleb128 0x49
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 72


 2388 011f 13       		.uleb128 0x13
 2389 0120 11       		.uleb128 0x11
 2390 0121 01       		.uleb128 0x1
 2391 0122 12       		.uleb128 0x12
 2392 0123 06       		.uleb128 0x6
 2393 0124 40       		.uleb128 0x40
 2394 0125 18       		.uleb128 0x18
 2395 0126 9642     		.uleb128 0x2116
 2396 0128 19       		.uleb128 0x19
 2397 0129 00       		.byte	0
 2398 012a 00       		.byte	0
 2399 012b 11       		.uleb128 0x11
 2400 012c 2E       		.uleb128 0x2e
 2401 012d 01       		.byte	0x1
 2402 012e 3F       		.uleb128 0x3f
 2403 012f 19       		.uleb128 0x19
 2404 0130 03       		.uleb128 0x3
 2405 0131 0E       		.uleb128 0xe
 2406 0132 3A       		.uleb128 0x3a
 2407 0133 0B       		.uleb128 0xb
 2408 0134 3B       		.uleb128 0x3b
 2409 0135 05       		.uleb128 0x5
 2410 0136 27       		.uleb128 0x27
 2411 0137 19       		.uleb128 0x19
 2412 0138 11       		.uleb128 0x11
 2413 0139 01       		.uleb128 0x1
 2414 013a 12       		.uleb128 0x12
 2415 013b 06       		.uleb128 0x6
 2416 013c 40       		.uleb128 0x40
 2417 013d 18       		.uleb128 0x18
 2418 013e 9642     		.uleb128 0x2116
 2419 0140 19       		.uleb128 0x19
 2420 0141 01       		.uleb128 0x1
 2421 0142 13       		.uleb128 0x13
 2422 0143 00       		.byte	0
 2423 0144 00       		.byte	0
 2424 0145 12       		.uleb128 0x12
 2425 0146 0F       		.uleb128 0xf
 2426 0147 00       		.byte	0
 2427 0148 0B       		.uleb128 0xb
 2428 0149 0B       		.uleb128 0xb
 2429 014a 49       		.uleb128 0x49
 2430 014b 13       		.uleb128 0x13
 2431 014c 00       		.byte	0
 2432 014d 00       		.byte	0
 2433 014e 13       		.uleb128 0x13
 2434 014f 26       		.uleb128 0x26
 2435 0150 00       		.byte	0
 2436 0151 49       		.uleb128 0x49
 2437 0152 13       		.uleb128 0x13
 2438 0153 00       		.byte	0
 2439 0154 00       		.byte	0
 2440 0155 14       		.uleb128 0x14
 2441 0156 0B       		.uleb128 0xb
 2442 0157 01       		.byte	0x1
 2443 0158 11       		.uleb128 0x11
 2444 0159 01       		.uleb128 0x1
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 73


 2445 015a 12       		.uleb128 0x12
 2446 015b 06       		.uleb128 0x6
 2447 015c 00       		.byte	0
 2448 015d 00       		.byte	0
 2449 015e 15       		.uleb128 0x15
 2450 015f 2E       		.uleb128 0x2e
 2451 0160 00       		.byte	0
 2452 0161 3F       		.uleb128 0x3f
 2453 0162 19       		.uleb128 0x19
 2454 0163 03       		.uleb128 0x3
 2455 0164 0E       		.uleb128 0xe
 2456 0165 3A       		.uleb128 0x3a
 2457 0166 0B       		.uleb128 0xb
 2458 0167 3B       		.uleb128 0x3b
 2459 0168 05       		.uleb128 0x5
 2460 0169 27       		.uleb128 0x27
 2461 016a 19       		.uleb128 0x19
 2462 016b 11       		.uleb128 0x11
 2463 016c 01       		.uleb128 0x1
 2464 016d 12       		.uleb128 0x12
 2465 016e 06       		.uleb128 0x6
 2466 016f 40       		.uleb128 0x40
 2467 0170 18       		.uleb128 0x18
 2468 0171 9642     		.uleb128 0x2116
 2469 0173 19       		.uleb128 0x19
 2470 0174 00       		.byte	0
 2471 0175 00       		.byte	0
 2472 0176 16       		.uleb128 0x16
 2473 0177 34       		.uleb128 0x34
 2474 0178 00       		.byte	0
 2475 0179 03       		.uleb128 0x3
 2476 017a 0E       		.uleb128 0xe
 2477 017b 3A       		.uleb128 0x3a
 2478 017c 0B       		.uleb128 0xb
 2479 017d 3B       		.uleb128 0x3b
 2480 017e 0B       		.uleb128 0xb
 2481 017f 49       		.uleb128 0x49
 2482 0180 13       		.uleb128 0x13
 2483 0181 3F       		.uleb128 0x3f
 2484 0182 19       		.uleb128 0x19
 2485 0183 02       		.uleb128 0x2
 2486 0184 18       		.uleb128 0x18
 2487 0185 00       		.byte	0
 2488 0186 00       		.byte	0
 2489 0187 00       		.byte	0
 2490              		.section	.debug_aranges,"",%progbits
 2491 0000 FC000000 		.4byte	0xfc
 2492 0004 0200     		.2byte	0x2
 2493 0006 00000000 		.4byte	.Ldebug_info0
 2494 000a 04       		.byte	0x4
 2495 000b 00       		.byte	0
 2496 000c 0000     		.2byte	0
 2497 000e 0000     		.2byte	0
 2498 0010 00000000 		.4byte	.LFB2
 2499 0014 24000000 		.4byte	.LFE2-.LFB2
 2500 0018 00000000 		.4byte	.LFB3
 2501 001c 1C000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 74


 2502 0020 00000000 		.4byte	.LFB4
 2503 0024 50000000 		.4byte	.LFE4-.LFB4
 2504 0028 00000000 		.4byte	.LFB5
 2505 002c 4C000000 		.4byte	.LFE5-.LFB5
 2506 0030 00000000 		.4byte	.LFB6
 2507 0034 14000000 		.4byte	.LFE6-.LFB6
 2508 0038 00000000 		.4byte	.LFB7
 2509 003c 20000000 		.4byte	.LFE7-.LFB7
 2510 0040 00000000 		.4byte	.LFB8
 2511 0044 20000000 		.4byte	.LFE8-.LFB8
 2512 0048 00000000 		.4byte	.LFB9
 2513 004c 20000000 		.4byte	.LFE9-.LFB9
 2514 0050 00000000 		.4byte	.LFB10
 2515 0054 24000000 		.4byte	.LFE10-.LFB10
 2516 0058 00000000 		.4byte	.LFB11
 2517 005c 4C000000 		.4byte	.LFE11-.LFB11
 2518 0060 00000000 		.4byte	.LFB12
 2519 0064 22000000 		.4byte	.LFE12-.LFB12
 2520 0068 00000000 		.4byte	.LFB13
 2521 006c 30000000 		.4byte	.LFE13-.LFB13
 2522 0070 00000000 		.4byte	.LFB14
 2523 0074 44000000 		.4byte	.LFE14-.LFB14
 2524 0078 00000000 		.4byte	.LFB15
 2525 007c 12000000 		.4byte	.LFE15-.LFB15
 2526 0080 00000000 		.4byte	.LFB16
 2527 0084 20000000 		.4byte	.LFE16-.LFB16
 2528 0088 00000000 		.4byte	.LFB17
 2529 008c 20000000 		.4byte	.LFE17-.LFB17
 2530 0090 00000000 		.4byte	.LFB18
 2531 0094 20000000 		.4byte	.LFE18-.LFB18
 2532 0098 00000000 		.4byte	.LFB19
 2533 009c 2C000000 		.4byte	.LFE19-.LFB19
 2534 00a0 00000000 		.4byte	.LFB20
 2535 00a4 14000000 		.4byte	.LFE20-.LFB20
 2536 00a8 00000000 		.4byte	.LFB21
 2537 00ac 34000000 		.4byte	.LFE21-.LFB21
 2538 00b0 00000000 		.4byte	.LFB22
 2539 00b4 54000000 		.4byte	.LFE22-.LFB22
 2540 00b8 00000000 		.4byte	.LFB23
 2541 00bc 58000000 		.4byte	.LFE23-.LFB23
 2542 00c0 00000000 		.4byte	.LFB24
 2543 00c4 34000000 		.4byte	.LFE24-.LFB24
 2544 00c8 00000000 		.4byte	.LFB25
 2545 00cc 48000000 		.4byte	.LFE25-.LFB25
 2546 00d0 00000000 		.4byte	.LFB26
 2547 00d4 44000000 		.4byte	.LFE26-.LFB26
 2548 00d8 00000000 		.4byte	.LFB27
 2549 00dc BC000000 		.4byte	.LFE27-.LFB27
 2550 00e0 00000000 		.4byte	.LFB28
 2551 00e4 40000000 		.4byte	.LFE28-.LFB28
 2552 00e8 00000000 		.4byte	.LFB29
 2553 00ec 24000000 		.4byte	.LFE29-.LFB29
 2554 00f0 00000000 		.4byte	.LFB30
 2555 00f4 24000000 		.4byte	.LFE30-.LFB30
 2556 00f8 00000000 		.4byte	0
 2557 00fc 00000000 		.4byte	0
 2558              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 75


 2559              	.Ldebug_ranges0:
 2560 0000 00000000 		.4byte	.LFB2
 2561 0004 24000000 		.4byte	.LFE2
 2562 0008 00000000 		.4byte	.LFB3
 2563 000c 1C000000 		.4byte	.LFE3
 2564 0010 00000000 		.4byte	.LFB4
 2565 0014 50000000 		.4byte	.LFE4
 2566 0018 00000000 		.4byte	.LFB5
 2567 001c 4C000000 		.4byte	.LFE5
 2568 0020 00000000 		.4byte	.LFB6
 2569 0024 14000000 		.4byte	.LFE6
 2570 0028 00000000 		.4byte	.LFB7
 2571 002c 20000000 		.4byte	.LFE7
 2572 0030 00000000 		.4byte	.LFB8
 2573 0034 20000000 		.4byte	.LFE8
 2574 0038 00000000 		.4byte	.LFB9
 2575 003c 20000000 		.4byte	.LFE9
 2576 0040 00000000 		.4byte	.LFB10
 2577 0044 24000000 		.4byte	.LFE10
 2578 0048 00000000 		.4byte	.LFB11
 2579 004c 4C000000 		.4byte	.LFE11
 2580 0050 00000000 		.4byte	.LFB12
 2581 0054 22000000 		.4byte	.LFE12
 2582 0058 00000000 		.4byte	.LFB13
 2583 005c 30000000 		.4byte	.LFE13
 2584 0060 00000000 		.4byte	.LFB14
 2585 0064 44000000 		.4byte	.LFE14
 2586 0068 00000000 		.4byte	.LFB15
 2587 006c 12000000 		.4byte	.LFE15
 2588 0070 00000000 		.4byte	.LFB16
 2589 0074 20000000 		.4byte	.LFE16
 2590 0078 00000000 		.4byte	.LFB17
 2591 007c 20000000 		.4byte	.LFE17
 2592 0080 00000000 		.4byte	.LFB18
 2593 0084 20000000 		.4byte	.LFE18
 2594 0088 00000000 		.4byte	.LFB19
 2595 008c 2C000000 		.4byte	.LFE19
 2596 0090 00000000 		.4byte	.LFB20
 2597 0094 14000000 		.4byte	.LFE20
 2598 0098 00000000 		.4byte	.LFB21
 2599 009c 34000000 		.4byte	.LFE21
 2600 00a0 00000000 		.4byte	.LFB22
 2601 00a4 54000000 		.4byte	.LFE22
 2602 00a8 00000000 		.4byte	.LFB23
 2603 00ac 58000000 		.4byte	.LFE23
 2604 00b0 00000000 		.4byte	.LFB24
 2605 00b4 34000000 		.4byte	.LFE24
 2606 00b8 00000000 		.4byte	.LFB25
 2607 00bc 48000000 		.4byte	.LFE25
 2608 00c0 00000000 		.4byte	.LFB26
 2609 00c4 44000000 		.4byte	.LFE26
 2610 00c8 00000000 		.4byte	.LFB27
 2611 00cc BC000000 		.4byte	.LFE27
 2612 00d0 00000000 		.4byte	.LFB28
 2613 00d4 40000000 		.4byte	.LFE28
 2614 00d8 00000000 		.4byte	.LFB29
 2615 00dc 24000000 		.4byte	.LFE29
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 76


 2616 00e0 00000000 		.4byte	.LFB30
 2617 00e4 24000000 		.4byte	.LFE30
 2618 00e8 00000000 		.4byte	0
 2619 00ec 00000000 		.4byte	0
 2620              		.section	.debug_line,"",%progbits
 2621              	.Ldebug_line0:
 2622 0000 05030000 		.section	.debug_str,"MS",%progbits,1
 2622      02004500 
 2622      00000201 
 2622      FB0E0D00 
 2622      01010101 
 2623              	.LASF10:
 2624 0000 75696E74 		.ascii	"uint16\000"
 2624      313600
 2625              	.LASF54:
 2626 0007 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2626      5F315F43 
 2626      6C656172 
 2626      54784275 
 2626      66666572 
 2627              	.LASF44:
 2628 001c 74784461 		.ascii	"txDataByte\000"
 2628      74614279 
 2628      746500
 2629              	.LASF46:
 2630 0027 55415254 		.ascii	"UART_1_PutChar\000"
 2630      5F315F50 
 2630      75744368 
 2630      617200
 2631              	.LASF48:
 2632 0036 73747269 		.ascii	"string\000"
 2632      6E6700
 2633              	.LASF55:
 2634 003d 55415254 		.ascii	"UART_1_SendBreak\000"
 2634      5F315F53 
 2634      656E6442 
 2634      7265616B 
 2634      00
 2635              	.LASF27:
 2636 004e 55415254 		.ascii	"UART_1_ReadRxData\000"
 2636      5F315F52 
 2636      65616452 
 2636      78446174 
 2636      6100
 2637              	.LASF7:
 2638 0060 6C6F6E67 		.ascii	"long long unsigned int\000"
 2638      206C6F6E 
 2638      6720756E 
 2638      7369676E 
 2638      65642069 
 2639              	.LASF53:
 2640 0077 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2640      5F315F47 
 2640      65745478 
 2640      42756666 
 2640      65725369 
 2641              	.LASF6:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 77


 2642 008e 6C6F6E67 		.ascii	"long long int\000"
 2642      206C6F6E 
 2642      6720696E 
 2642      7400
 2643              	.LASF0:
 2644 009c 7369676E 		.ascii	"signed char\000"
 2644      65642063 
 2644      68617200 
 2645              	.LASF52:
 2646 00a8 55415254 		.ascii	"UART_1_PutCRLF\000"
 2646      5F315F50 
 2646      75744352 
 2646      4C4600
 2647              	.LASF4:
 2648 00b7 6C6F6E67 		.ascii	"long int\000"
 2648      20696E74 
 2648      00
 2649              	.LASF17:
 2650 00c0 55415254 		.ascii	"UART_1_Start\000"
 2650      5F315F53 
 2650      74617274 
 2650      00
 2651              	.LASF9:
 2652 00cd 75696E74 		.ascii	"uint8\000"
 2652      3800
 2653              	.LASF12:
 2654 00d3 646F7562 		.ascii	"double\000"
 2654      6C6500
 2655              	.LASF38:
 2656 00da 61646472 		.ascii	"addressMode\000"
 2656      6573734D 
 2656      6F646500 
 2657              	.LASF62:
 2658 00e6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1.c\000"
 2658      6E657261 
 2658      7465645F 
 2658      536F7572 
 2658      63655C50 
 2659              	.LASF24:
 2660 0108 636F6E74 		.ascii	"control\000"
 2660      726F6C00 
 2661              	.LASF23:
 2662 0110 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 2662      5F315F53 
 2662      65745278 
 2662      496E7465 
 2662      72727570 
 2663              	.LASF56:
 2664 012a 7265744D 		.ascii	"retMode\000"
 2664      6F646500 
 2665              	.LASF59:
 2666 0132 55415254 		.ascii	"UART_1_LoadRxConfig\000"
 2666      5F315F4C 
 2666      6F616452 
 2666      78436F6E 
 2666      66696700 
 2667              	.LASF8:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 78


 2668 0146 756E7369 		.ascii	"unsigned int\000"
 2668      676E6564 
 2668      20696E74 
 2668      00
 2669              	.LASF45:
 2670 0153 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2670      5F315F52 
 2670      65616454 
 2670      78537461 
 2670      74757300 
 2671              	.LASF5:
 2672 0167 6C6F6E67 		.ascii	"long unsigned int\000"
 2672      20756E73 
 2672      69676E65 
 2672      6420696E 
 2672      7400
 2673              	.LASF63:
 2674 0179 433A5C55 		.ascii	"C:\\Users\\Matthew Arbesfeld\\Documents\\PSoC Creat"
 2674      73657273 
 2674      5C4D6174 
 2674      74686577 
 2674      20417262 
 2675 01a8 6F725C42 		.ascii	"or\\BoxesUART\\BoxesBLE.cydsn\000"
 2675      6F786573 
 2675      55415254 
 2675      5C426F78 
 2675      6573424C 
 2676              	.LASF35:
 2677 01c4 73697A65 		.ascii	"size\000"
 2677      00
 2678              	.LASF3:
 2679 01c9 73686F72 		.ascii	"short unsigned int\000"
 2679      7420756E 
 2679      7369676E 
 2679      65642069 
 2679      6E7400
 2680              	.LASF19:
 2681 01dc 55415254 		.ascii	"UART_1_Enable\000"
 2681      5F315F45 
 2681      6E61626C 
 2681      6500
 2682              	.LASF49:
 2683 01ea 62756649 		.ascii	"bufIndex\000"
 2683      6E646578 
 2683      00
 2684              	.LASF58:
 2685 01f3 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2685      5F315F53 
 2685      65745478 
 2685      41646472 
 2685      6573734D 
 2686              	.LASF25:
 2687 020b 696E7453 		.ascii	"intSrc\000"
 2687      726300
 2688              	.LASF32:
 2689 0212 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2689      5F315F52 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 79


 2689      65616443 
 2689      6F6E7472 
 2689      6F6C5265 
 2690              	.LASF20:
 2691 022d 55415254 		.ascii	"UART_1_Stop\000"
 2691      5F315F53 
 2691      746F7000 
 2692              	.LASF33:
 2693 0239 55415254 		.ascii	"UART_1_GetByte\000"
 2693      5F315F47 
 2693      65744279 
 2693      746500
 2694              	.LASF47:
 2695 0248 55415254 		.ascii	"UART_1_PutString\000"
 2695      5F315F50 
 2695      75745374 
 2695      72696E67 
 2695      00
 2696              	.LASF43:
 2697 0259 55415254 		.ascii	"UART_1_WriteTxData\000"
 2697      5F315F57 
 2697      72697465 
 2697      54784461 
 2697      746100
 2698              	.LASF57:
 2699 026c 746D7053 		.ascii	"tmpStat\000"
 2699      74617400 
 2700              	.LASF16:
 2701 0274 73697A65 		.ascii	"sizetype\000"
 2701      74797065 
 2701      00
 2702              	.LASF39:
 2703 027d 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 2703      5F315F53 
 2703      65745278 
 2703      41646472 
 2703      65737331 
 2704              	.LASF41:
 2705 0292 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 2705      5F315F53 
 2705      65745278 
 2705      41646472 
 2705      65737332 
 2706              	.LASF40:
 2707 02a7 61646472 		.ascii	"address\000"
 2707      65737300 
 2708              	.LASF31:
 2709 02af 72785374 		.ascii	"rxStatus\000"
 2709      61747573 
 2709      00
 2710              	.LASF42:
 2711 02b8 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2711      5F315F53 
 2711      65745478 
 2711      496E7465 
 2711      72727570 
 2712              	.LASF11:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 80


 2713 02d2 666C6F61 		.ascii	"float\000"
 2713      7400
 2714              	.LASF61:
 2715 02d8 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2715      4320342E 
 2715      382E3420 
 2715      32303134 
 2715      30353236 
 2716 030b 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2716      20726576 
 2716      6973696F 
 2716      6E203231 
 2716      31333538 
 2717 033e 30202D66 		.ascii	"0 -ffunction-sections\000"
 2717      66756E63 
 2717      74696F6E 
 2717      2D736563 
 2717      74696F6E 
 2718              	.LASF36:
 2719 0354 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 2719      5F315F43 
 2719      6C656172 
 2719      52784275 
 2719      66666572 
 2720              	.LASF37:
 2721 0369 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 2721      5F315F53 
 2721      65745278 
 2721      41646472 
 2721      6573734D 
 2722              	.LASF15:
 2723 0381 72656738 		.ascii	"reg8\000"
 2723      00
 2724              	.LASF1:
 2725 0386 756E7369 		.ascii	"unsigned char\000"
 2725      676E6564 
 2725      20636861 
 2725      7200
 2726              	.LASF2:
 2727 0394 73686F72 		.ascii	"short int\000"
 2727      7420696E 
 2727      7400
 2728              	.LASF22:
 2729 039e 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2729      5F315F57 
 2729      72697465 
 2729      436F6E74 
 2729      726F6C52 
 2730              	.LASF64:
 2731 03ba 55415254 		.ascii	"UART_1_initVar\000"
 2731      5F315F69 
 2731      6E697456 
 2731      617200
 2732              	.LASF51:
 2733 03c9 62797465 		.ascii	"byteCount\000"
 2733      436F756E 
 2733      7400
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccE0tS3j.s 			page 81


 2734              	.LASF34:
 2735 03d3 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 2735      5F315F47 
 2735      65745278 
 2735      42756666 
 2735      65725369 
 2736              	.LASF60:
 2737 03ea 55415254 		.ascii	"UART_1_LoadTxConfig\000"
 2737      5F315F4C 
 2737      6F616454 
 2737      78436F6E 
 2737      66696700 
 2738              	.LASF26:
 2739 03fe 72784461 		.ascii	"rxData\000"
 2739      746100
 2740              	.LASF14:
 2741 0405 63686172 		.ascii	"char\000"
 2741      00
 2742              	.LASF13:
 2743 040a 63686172 		.ascii	"char8\000"
 2743      3800
 2744              	.LASF18:
 2745 0410 55415254 		.ascii	"UART_1_Init\000"
 2745      5F315F49 
 2745      6E697400 
 2746              	.LASF21:
 2747 041c 656E6162 		.ascii	"enableInterrupts\000"
 2747      6C65496E 
 2747      74657272 
 2747      75707473 
 2747      00
 2748              	.LASF29:
 2749 042d 73746174 		.ascii	"status\000"
 2749      757300
 2750              	.LASF28:
 2751 0434 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 2751      5F315F52 
 2751      65616452 
 2751      78537461 
 2751      74757300 
 2752              	.LASF30:
 2753 0448 55415254 		.ascii	"UART_1_GetChar\000"
 2753      5F315F47 
 2753      65744368 
 2753      617200
 2754              	.LASF50:
 2755 0457 55415254 		.ascii	"UART_1_PutArray\000"
 2755      5F315F50 
 2755      75744172 
 2755      72617900 
 2756              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
