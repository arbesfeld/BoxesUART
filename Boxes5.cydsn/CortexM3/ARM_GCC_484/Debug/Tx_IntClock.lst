ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Tx_IntClock.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Tx_IntClock_Start,"ax",%progbits
  19              		.align	2
  20              		.global	Tx_IntClock_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	Tx_IntClock_Start, %function
  24              	Tx_IntClock_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Tx_IntClock.c"
   1:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Tx_IntClock.c **** * File Name: Tx_IntClock.c
   3:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
   5:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Description:
   6:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
   8:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Note:
   9:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  10:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/Tx_IntClock.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/Tx_IntClock.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/Tx_IntClock.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  17:.\Generated_Source\PSoC5/Tx_IntClock.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/Tx_IntClock.c **** #include "Tx_IntClock.h"
  19:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  20:.\Generated_Source\PSoC5/Tx_IntClock.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/Tx_IntClock.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/Tx_IntClock.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/Tx_IntClock.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/Tx_IntClock.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/Tx_IntClock.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  27:.\Generated_Source\PSoC5/Tx_IntClock.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  29:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  30:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_Start
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 2


  32:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  34:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
  35:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  38:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
  39:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
  40:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  41:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
  42:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
  43:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  44:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/Tx_IntClock.c **** void Tx_IntClock_Start(void) 
  46:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  47:.\Generated_Source\PSoC5/Tx_IntClock.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/Tx_IntClock.c ****     Tx_IntClock_CLKEN |= Tx_IntClock_CLKEN_MASK;
  37              		.loc 1 48 0
  38 0004 094B     		ldr	r3, .L2
  39 0006 094A     		ldr	r2, .L2
  40 0008 1278     		ldrb	r2, [r2]
  41 000a D2B2     		uxtb	r2, r2
  42 000c 62F07F02 		orn	r2, r2, #127
  43 0010 D2B2     		uxtb	r2, r2
  44 0012 1A70     		strb	r2, [r3]
  49:.\Generated_Source\PSoC5/Tx_IntClock.c **** 	Tx_IntClock_CLKSTBY |= Tx_IntClock_CLKSTBY_MASK;
  45              		.loc 1 49 0
  46 0014 064B     		ldr	r3, .L2+4
  47 0016 064A     		ldr	r2, .L2+4
  48 0018 1278     		ldrb	r2, [r2]
  49 001a D2B2     		uxtb	r2, r2
  50 001c 62F07F02 		orn	r2, r2, #127
  51 0020 D2B2     		uxtb	r2, r2
  52 0022 1A70     		strb	r2, [r3]
  50:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
  53              		.loc 1 50 0
  54 0024 BD46     		mov	sp, r7
  55              		@ sp needed
  56 0026 5DF8047B 		ldr	r7, [sp], #4
  57 002a 7047     		bx	lr
  58              	.L3:
  59              		.align	2
  60              	.L2:
  61 002c A2430040 		.word	1073759138
  62 0030 B2430040 		.word	1073759154
  63              		.cfi_endproc
  64              	.LFE0:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 3


  65              		.size	Tx_IntClock_Start, .-Tx_IntClock_Start
  66              		.section	.text.Tx_IntClock_Stop,"ax",%progbits
  67              		.align	2
  68              		.global	Tx_IntClock_Stop
  69              		.thumb
  70              		.thumb_func
  71              		.type	Tx_IntClock_Stop, %function
  72              	Tx_IntClock_Stop:
  73              	.LFB1:
  51:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  52:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  53:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_Stop
  55:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  57:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
  58:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  64:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
  65:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
  66:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  67:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
  68:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
  69:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  70:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/Tx_IntClock.c **** void Tx_IntClock_Stop(void) 
  72:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
  74              		.loc 1 72 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 7, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC5/Tx_IntClock.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/Tx_IntClock.c ****     Tx_IntClock_CLKEN &= (uint8)(~Tx_IntClock_CLKEN_MASK);
  84              		.loc 1 74 0
  85 0004 094B     		ldr	r3, .L5
  86 0006 094A     		ldr	r2, .L5
  87 0008 1278     		ldrb	r2, [r2]
  88 000a D2B2     		uxtb	r2, r2
  89 000c 02F07F02 		and	r2, r2, #127
  90 0010 D2B2     		uxtb	r2, r2
  91 0012 1A70     		strb	r2, [r3]
  75:.\Generated_Source\PSoC5/Tx_IntClock.c **** 	Tx_IntClock_CLKSTBY &= (uint8)(~Tx_IntClock_CLKSTBY_MASK);
  92              		.loc 1 75 0
  93 0014 064B     		ldr	r3, .L5+4
  94 0016 064A     		ldr	r2, .L5+4
  95 0018 1278     		ldrb	r2, [r2]
  96 001a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 4


  97 001c 02F07F02 		and	r2, r2, #127
  98 0020 D2B2     		uxtb	r2, r2
  99 0022 1A70     		strb	r2, [r3]
  76:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 100              		.loc 1 76 0
 101 0024 BD46     		mov	sp, r7
 102              		@ sp needed
 103 0026 5DF8047B 		ldr	r7, [sp], #4
 104 002a 7047     		bx	lr
 105              	.L6:
 106              		.align	2
 107              	.L5:
 108 002c A2430040 		.word	1073759138
 109 0030 B2430040 		.word	1073759154
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	Tx_IntClock_Stop, .-Tx_IntClock_Stop
 113              		.section	.text.Tx_IntClock_StopBlock,"ax",%progbits
 114              		.align	2
 115              		.global	Tx_IntClock_StopBlock
 116              		.thumb
 117              		.thumb_func
 118              		.type	Tx_IntClock_StopBlock, %function
 119              	Tx_IntClock_StopBlock:
 120              	.LFB2:
  77:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  78:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  79:.\Generated_Source\PSoC5/Tx_IntClock.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  81:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
  82:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_StopBlock
  84:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  86:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
  87:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  93:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
  94:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
  95:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  96:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
  97:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
  98:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
  99:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/Tx_IntClock.c **** void Tx_IntClock_StopBlock(void) 
 101:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 121              		.loc 1 101 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126 0000 80B4     		push	{r7}
 127              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 5


 128              		.cfi_offset 7, -4
 129 0002 83B0     		sub	sp, sp, #12
 130              		.cfi_def_cfa_offset 16
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 102:.\Generated_Source\PSoC5/Tx_IntClock.c ****     if ((Tx_IntClock_CLKEN & Tx_IntClock_CLKEN_MASK) != 0u)
 133              		.loc 1 102 0
 134 0006 224B     		ldr	r3, .L10
 135 0008 1B78     		ldrb	r3, [r3]
 136 000a DBB2     		uxtb	r3, r3
 137 000c DBB2     		uxtb	r3, r3
 138 000e 5BB2     		sxtb	r3, r3
 139 0010 002B     		cmp	r3, #0
 140 0012 37DA     		bge	.L7
 141              	.LBB2:
 103:.\Generated_Source\PSoC5/Tx_IntClock.c ****     {
 104:.\Generated_Source\PSoC5/Tx_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/Tx_IntClock.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 107:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CLK_DIST_LD = 0u;
 142              		.loc 1 107 0
 143 0014 1F4B     		ldr	r3, .L10+4
 144 0016 0022     		movs	r2, #0
 145 0018 1A70     		strb	r2, [r3]
 108:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 109:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/Tx_IntClock.c **** #if defined(Tx_IntClock__CFG3)
 111:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CLK_DIST_AMASK = Tx_IntClock_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/Tx_IntClock.c **** #else
 114:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CLK_DIST_DMASK = Tx_IntClock_CLKEN_MASK;
 146              		.loc 1 114 0
 147 001a 1F4B     		ldr	r3, .L10+8
 148 001c 8022     		movs	r2, #128
 149 001e 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CLK_DIST_AMASK = 0x00u;
 150              		.loc 1 115 0
 151 0020 1E4B     		ldr	r3, .L10+12
 152 0022 0022     		movs	r2, #0
 153 0024 1A70     		strb	r2, [r3]
 116:.\Generated_Source\PSoC5/Tx_IntClock.c **** #endif /* Tx_IntClock__CFG3 */
 117:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 118:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 154              		.loc 1 119 0
 155 0026 1E4B     		ldr	r3, .L10+16
 156 0028 1D4A     		ldr	r2, .L10+16
 157 002a 1278     		ldrb	r2, [r2]
 158 002c D2B2     		uxtb	r2, r2
 159 002e 02F07F02 		and	r2, r2, #127
 160 0032 D2B2     		uxtb	r2, r2
 161 0034 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 121:.\Generated_Source\PSoC5/Tx_IntClock.c ****         oldDivider = CY_GET_REG16(Tx_IntClock_DIV_PTR);
 162              		.loc 1 121 0
 163 0036 1B4B     		ldr	r3, .L10+20
 164 0038 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 6


 165 003a FB80     		strh	r3, [r7, #6]	@ movhi
 122:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 166              		.loc 1 122 0
 167 003c 1A4B     		ldr	r3, .L10+24
 168 003e FA88     		ldrh	r2, [r7, #6]	@ movhi
 169 0040 1A80     		strh	r2, [r3]	@ movhi
 123:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 170              		.loc 1 123 0
 171 0042 144B     		ldr	r3, .L10+4
 172 0044 0722     		movs	r2, #7
 173 0046 1A70     		strb	r2, [r3]
 124:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 125:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/Tx_IntClock.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 174              		.loc 1 126 0
 175 0048 00BF     		nop
 176              	.L9:
 177              		.loc 1 126 0 is_stmt 0 discriminator 1
 178 004a 124B     		ldr	r3, .L10+4
 179 004c 1B78     		ldrb	r3, [r3]
 180 004e DBB2     		uxtb	r3, r3
 181 0050 03F00103 		and	r3, r3, #1
 182 0054 002B     		cmp	r3, #0
 183 0056 F8D1     		bne	.L9
 127:.\Generated_Source\PSoC5/Tx_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 129:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_CLKEN &= (uint8)(~Tx_IntClock_CLKEN_MASK);
 184              		.loc 1 130 0 is_stmt 1
 185 0058 0D4B     		ldr	r3, .L10
 186 005a 0D4A     		ldr	r2, .L10
 187 005c 1278     		ldrb	r2, [r2]
 188 005e D2B2     		uxtb	r2, r2
 189 0060 02F07F02 		and	r2, r2, #127
 190 0064 D2B2     		uxtb	r2, r2
 191 0066 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_CLKSTBY &= (uint8)(~Tx_IntClock_CLKSTBY_MASK);
 192              		.loc 1 131 0
 193 0068 104B     		ldr	r3, .L10+28
 194 006a 104A     		ldr	r2, .L10+28
 195 006c 1278     		ldrb	r2, [r2]
 196 006e D2B2     		uxtb	r2, r2
 197 0070 02F07F02 		and	r2, r2, #127
 198 0074 D2B2     		uxtb	r2, r2
 199 0076 1A70     		strb	r2, [r3]
 132:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 133:.\Generated_Source\PSoC5/Tx_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CLK_DIST_LD = 0x00u;
 200              		.loc 1 135 0
 201 0078 064B     		ldr	r3, .L10+4
 202 007a 0022     		movs	r2, #0
 203 007c 1A70     		strb	r2, [r3]
 136:.\Generated_Source\PSoC5/Tx_IntClock.c ****         CY_SET_REG16(Tx_IntClock_DIV_PTR, oldDivider);
 204              		.loc 1 136 0
 205 007e 094B     		ldr	r3, .L10+20
 206 0080 FA88     		ldrh	r2, [r7, #6]	@ movhi
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 7


 207 0082 1A80     		strh	r2, [r3]	@ movhi
 208              	.L7:
 209              	.LBE2:
 137:.\Generated_Source\PSoC5/Tx_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/Tx_IntClock.c ****     }
 139:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 210              		.loc 1 139 0
 211 0084 0C37     		adds	r7, r7, #12
 212 0086 BD46     		mov	sp, r7
 213              		@ sp needed
 214 0088 5DF8047B 		ldr	r7, [sp], #4
 215 008c 7047     		bx	lr
 216              	.L11:
 217 008e 00BF     		.align	2
 218              	.L10:
 219 0090 A2430040 		.word	1073759138
 220 0094 01400040 		.word	1073758209
 221 0098 10400040 		.word	1073758224
 222 009c 14400040 		.word	1073758228
 223 00a0 08400040 		.word	1073758216
 224 00a4 9C400040 		.word	1073758364
 225 00a8 02400040 		.word	1073758210
 226 00ac B2430040 		.word	1073759154
 227              		.cfi_endproc
 228              	.LFE2:
 229              		.size	Tx_IntClock_StopBlock, .-Tx_IntClock_StopBlock
 230              		.section	.text.Tx_IntClock_StandbyPower,"ax",%progbits
 231              		.align	2
 232              		.global	Tx_IntClock_StandbyPower
 233              		.thumb
 234              		.thumb_func
 235              		.type	Tx_IntClock_StandbyPower, %function
 236              	Tx_IntClock_StandbyPower:
 237              	.LFB3:
 140:.\Generated_Source\PSoC5/Tx_IntClock.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 142:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 143:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_StandbyPower
 145:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 147:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
 148:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 150:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
 151:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 153:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
 154:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
 155:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 156:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/Tx_IntClock.c **** void Tx_IntClock_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 238              		.loc 1 158 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 8


 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 7, -4
 246 0002 83B0     		sub	sp, sp, #12
 247              		.cfi_def_cfa_offset 16
 248 0004 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 250 0006 0346     		mov	r3, r0
 251 0008 FB71     		strb	r3, [r7, #7]
 159:.\Generated_Source\PSoC5/Tx_IntClock.c ****     if(state == 0u)
 252              		.loc 1 159 0
 253 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 254 000c 002B     		cmp	r3, #0
 255 000e 08D1     		bne	.L13
 160:.\Generated_Source\PSoC5/Tx_IntClock.c ****     {
 161:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_CLKSTBY &= (uint8)(~Tx_IntClock_CLKSTBY_MASK);
 256              		.loc 1 161 0
 257 0010 0A4B     		ldr	r3, .L15
 258 0012 0A4A     		ldr	r2, .L15
 259 0014 1278     		ldrb	r2, [r2]
 260 0016 D2B2     		uxtb	r2, r2
 261 0018 02F07F02 		and	r2, r2, #127
 262 001c D2B2     		uxtb	r2, r2
 263 001e 1A70     		strb	r2, [r3]
 264 0020 07E0     		b	.L12
 265              	.L13:
 162:.\Generated_Source\PSoC5/Tx_IntClock.c ****     }
 163:.\Generated_Source\PSoC5/Tx_IntClock.c ****     else
 164:.\Generated_Source\PSoC5/Tx_IntClock.c ****     {
 165:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_CLKSTBY |= Tx_IntClock_CLKSTBY_MASK;
 266              		.loc 1 165 0
 267 0022 064B     		ldr	r3, .L15
 268 0024 054A     		ldr	r2, .L15
 269 0026 1278     		ldrb	r2, [r2]
 270 0028 D2B2     		uxtb	r2, r2
 271 002a 62F07F02 		orn	r2, r2, #127
 272 002e D2B2     		uxtb	r2, r2
 273 0030 1A70     		strb	r2, [r3]
 274              	.L12:
 166:.\Generated_Source\PSoC5/Tx_IntClock.c ****     }
 167:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 275              		.loc 1 167 0
 276 0032 0C37     		adds	r7, r7, #12
 277 0034 BD46     		mov	sp, r7
 278              		@ sp needed
 279 0036 5DF8047B 		ldr	r7, [sp], #4
 280 003a 7047     		bx	lr
 281              	.L16:
 282              		.align	2
 283              	.L15:
 284 003c B2430040 		.word	1073759154
 285              		.cfi_endproc
 286              	.LFE3:
 287              		.size	Tx_IntClock_StandbyPower, .-Tx_IntClock_StandbyPower
 288              		.section	.text.Tx_IntClock_SetDividerRegister,"ax",%progbits
 289              		.align	2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 9


 290              		.global	Tx_IntClock_SetDividerRegister
 291              		.thumb
 292              		.thumb_func
 293              		.type	Tx_IntClock_SetDividerRegister, %function
 294              	Tx_IntClock_SetDividerRegister:
 295              	.LFB4:
 168:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 169:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 170:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_SetDividerRegister
 172:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 174:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
 175:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 180:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
 181:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/Tx_IntClock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/Tx_IntClock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   cycle.
 188:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 189:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
 190:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
 191:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 192:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/Tx_IntClock.c **** void Tx_IntClock_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/Tx_IntClock.c ****                                 
 195:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 296              		.loc 1 195 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 16
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 84B0     		sub	sp, sp, #16
 305              		.cfi_def_cfa_offset 24
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 0246     		mov	r2, r0
 309 0008 0B46     		mov	r3, r1
 310 000a FA80     		strh	r2, [r7, #6]	@ movhi
 311 000c 7B71     		strb	r3, [r7, #5]
 196:.\Generated_Source\PSoC5/Tx_IntClock.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 198:.\Generated_Source\PSoC5/Tx_IntClock.c ****     uint8 currSrc = Tx_IntClock_GetSourceRegister();
 312              		.loc 1 198 0
 313 000e FFF7FEFF 		bl	Tx_IntClock_GetSourceRegister
 314 0012 0346     		mov	r3, r0
 315 0014 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 10


 199:.\Generated_Source\PSoC5/Tx_IntClock.c ****     uint16 oldDivider = Tx_IntClock_GetDividerRegister();
 316              		.loc 1 199 0
 317 0016 FFF7FEFF 		bl	Tx_IntClock_GetDividerRegister
 318 001a 0346     		mov	r3, r0
 319 001c BB81     		strh	r3, [r7, #12]	@ movhi
 200:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 201:.\Generated_Source\PSoC5/Tx_IntClock.c ****     if (clkDivider != oldDivider)
 320              		.loc 1 201 0
 321 001e FA88     		ldrh	r2, [r7, #6]
 322 0020 BB89     		ldrh	r3, [r7, #12]
 323 0022 9A42     		cmp	r2, r3
 324 0024 00F08780 		beq	.L17
 202:.\Generated_Source\PSoC5/Tx_IntClock.c ****     {
 203:.\Generated_Source\PSoC5/Tx_IntClock.c ****         enabled = Tx_IntClock_CLKEN & Tx_IntClock_CLKEN_MASK;
 325              		.loc 1 203 0
 326 0028 444B     		ldr	r3, .L30
 327 002a 1B78     		ldrb	r3, [r3]
 328 002c DBB2     		uxtb	r3, r3
 329 002e 23F07F03 		bic	r3, r3, #127
 330 0032 FB72     		strb	r3, [r7, #11]
 204:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 205:.\Generated_Source\PSoC5/Tx_IntClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 331              		.loc 1 205 0
 332 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 333 0036 002B     		cmp	r3, #0
 334 0038 20D1     		bne	.L19
 335              		.loc 1 205 0 is_stmt 0 discriminator 1
 336 003a BB89     		ldrh	r3, [r7, #12]
 337 003c 002B     		cmp	r3, #0
 338 003e 02D0     		beq	.L20
 339 0040 FB88     		ldrh	r3, [r7, #6]
 340 0042 002B     		cmp	r3, #0
 341 0044 1AD1     		bne	.L19
 342              	.L20:
 206:.\Generated_Source\PSoC5/Tx_IntClock.c ****         {
 207:.\Generated_Source\PSoC5/Tx_IntClock.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/Tx_IntClock.c ****             if (oldDivider == 0u)
 343              		.loc 1 208 0 is_stmt 1
 344 0046 BB89     		ldrh	r3, [r7, #12]
 345 0048 002B     		cmp	r3, #0
 346 004a 0BD1     		bne	.L21
 209:.\Generated_Source\PSoC5/Tx_IntClock.c ****             {
 210:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CY_SET_REG16(Tx_IntClock_DIV_PTR, clkDivider);
 347              		.loc 1 213 0
 348 004c 3C4B     		ldr	r3, .L30+4
 349 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 350 0050 1A80     		strh	r2, [r3]	@ movhi
 214:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 Tx_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 351              		.loc 1 214 0
 352 0052 3C4B     		ldr	r3, .L30+8
 353 0054 3B4A     		ldr	r2, .L30+8
 354 0056 1278     		ldrb	r2, [r2]
 355 0058 D2B2     		uxtb	r2, r2
 356 005a 22F04002 		bic	r2, r2, #64
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 11


 357 005e D2B2     		uxtb	r2, r2
 358 0060 1A70     		strb	r2, [r3]
 208:.\Generated_Source\PSoC5/Tx_IntClock.c ****             if (oldDivider == 0u)
 359              		.loc 1 208 0
 360 0062 68E0     		b	.L17
 361              	.L21:
 215:.\Generated_Source\PSoC5/Tx_IntClock.c ****             }
 216:.\Generated_Source\PSoC5/Tx_IntClock.c ****             else
 217:.\Generated_Source\PSoC5/Tx_IntClock.c ****             {
 218:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 Tx_IntClock_MOD_SRC |= CYCLK_SSS;
 362              		.loc 1 220 0
 363 0064 374B     		ldr	r3, .L30+8
 364 0066 374A     		ldr	r2, .L30+8
 365 0068 1278     		ldrb	r2, [r2]
 366 006a D2B2     		uxtb	r2, r2
 367 006c 42F04002 		orr	r2, r2, #64
 368 0070 D2B2     		uxtb	r2, r2
 369 0072 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CY_SET_REG16(Tx_IntClock_DIV_PTR, clkDivider);
 370              		.loc 1 221 0
 371 0074 324B     		ldr	r3, .L30+4
 372 0076 FA88     		ldrh	r2, [r7, #6]	@ movhi
 373 0078 1A80     		strh	r2, [r3]	@ movhi
 208:.\Generated_Source\PSoC5/Tx_IntClock.c ****             if (oldDivider == 0u)
 374              		.loc 1 208 0
 375 007a 5CE0     		b	.L17
 376              	.L19:
 222:.\Generated_Source\PSoC5/Tx_IntClock.c ****             }
 223:.\Generated_Source\PSoC5/Tx_IntClock.c ****         }
 224:.\Generated_Source\PSoC5/Tx_IntClock.c ****         else
 225:.\Generated_Source\PSoC5/Tx_IntClock.c ****         {
 226:.\Generated_Source\PSoC5/Tx_IntClock.c **** 			
 227:.\Generated_Source\PSoC5/Tx_IntClock.c ****             if (enabled != 0u)
 377              		.loc 1 227 0
 378 007c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 379 007e 002B     		cmp	r3, #0
 380 0080 33D0     		beq	.L23
 228:.\Generated_Source\PSoC5/Tx_IntClock.c ****             {
 229:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CLK_DIST_LD = 0x00u;
 381              		.loc 1 229 0
 382 0082 314B     		ldr	r3, .L30+12
 383 0084 0022     		movs	r2, #0
 384 0086 1A70     		strb	r2, [r3]
 230:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 231:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/Tx_IntClock.c **** #if defined(Tx_IntClock__CFG3)
 233:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CLK_DIST_AMASK = Tx_IntClock_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/Tx_IntClock.c **** #else
 236:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CLK_DIST_DMASK = Tx_IntClock_CLKEN_MASK;
 385              		.loc 1 236 0
 386 0088 304B     		ldr	r3, .L30+16
 387 008a 8022     		movs	r2, #128
 388 008c 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CLK_DIST_AMASK = 0x00u;
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 12


 389              		.loc 1 237 0
 390 008e 304B     		ldr	r3, .L30+20
 391 0090 0022     		movs	r2, #0
 392 0092 1A70     		strb	r2, [r3]
 238:.\Generated_Source\PSoC5/Tx_IntClock.c **** #endif /* Tx_IntClock__CFG3 */
 239:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 393              		.loc 1 240 0
 394 0094 2F4B     		ldr	r3, .L30+24
 395 0096 2F4A     		ldr	r2, .L30+24
 396 0098 1278     		ldrb	r2, [r2]
 397 009a D2B2     		uxtb	r2, r2
 398 009c 02F07F02 		and	r2, r2, #127
 399 00a0 D2B2     		uxtb	r2, r2
 400 00a2 1A70     		strb	r2, [r3]
 241:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 242:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 if (((Tx_IntClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 401              		.loc 1 243 0
 402 00a4 274B     		ldr	r3, .L30+8
 403 00a6 1B78     		ldrb	r3, [r3]
 404 00a8 DBB2     		uxtb	r3, r3
 405 00aa 03F00803 		and	r3, r3, #8
 406 00ae 002B     		cmp	r3, #0
 407 00b0 02D0     		beq	.L24
 408              		.loc 1 243 0 is_stmt 0 discriminator 1
 409 00b2 FB88     		ldrh	r3, [r7, #6]
 410 00b4 002B     		cmp	r3, #0
 411 00b6 18D1     		bne	.L23
 412              	.L24:
 244:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 {
 245:.\Generated_Source\PSoC5/Tx_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/Tx_IntClock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 413              		.loc 1 246 0 is_stmt 1
 414 00b8 274B     		ldr	r3, .L30+28
 415 00ba BA89     		ldrh	r2, [r7, #12]	@ movhi
 416 00bc 1A80     		strh	r2, [r3]	@ movhi
 247:.\Generated_Source\PSoC5/Tx_IntClock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 417              		.loc 1 247 0
 418 00be 224B     		ldr	r3, .L30+12
 419 00c0 0722     		movs	r2, #7
 420 00c2 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 249:.\Generated_Source\PSoC5/Tx_IntClock.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/Tx_IntClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 421              		.loc 1 250 0
 422 00c4 00BF     		nop
 423              	.L25:
 424              		.loc 1 250 0 is_stmt 0 discriminator 1
 425 00c6 204B     		ldr	r3, .L30+12
 426 00c8 1B78     		ldrb	r3, [r3]
 427 00ca DBB2     		uxtb	r3, r3
 428 00cc 03F00103 		and	r3, r3, #1
 429 00d0 002B     		cmp	r3, #0
 430 00d2 F8D1     		bne	.L25
 251:.\Generated_Source\PSoC5/Tx_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 13


 253:.\Generated_Source\PSoC5/Tx_IntClock.c ****                     Tx_IntClock_CLKEN &= (uint8)(~Tx_IntClock_CLKEN_MASK);
 431              		.loc 1 253 0 is_stmt 1
 432 00d4 194B     		ldr	r3, .L30
 433 00d6 194A     		ldr	r2, .L30
 434 00d8 1278     		ldrb	r2, [r2]
 435 00da D2B2     		uxtb	r2, r2
 436 00dc 02F07F02 		and	r2, r2, #127
 437 00e0 D2B2     		uxtb	r2, r2
 438 00e2 1A70     		strb	r2, [r3]
 254:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 255:.\Generated_Source\PSoC5/Tx_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/Tx_IntClock.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/Tx_IntClock.c ****                     CLK_DIST_LD = 0x00u;
 439              		.loc 1 257 0
 440 00e4 184B     		ldr	r3, .L30+12
 441 00e6 0022     		movs	r2, #0
 442 00e8 1A70     		strb	r2, [r3]
 443              	.L23:
 258:.\Generated_Source\PSoC5/Tx_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 }
 260:.\Generated_Source\PSoC5/Tx_IntClock.c ****             }
 261:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 262:.\Generated_Source\PSoC5/Tx_IntClock.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/Tx_IntClock.c ****             if ((Tx_IntClock_CLKEN & Tx_IntClock_CLKEN_MASK) != 0u)
 444              		.loc 1 263 0
 445 00ea 144B     		ldr	r3, .L30
 446 00ec 1B78     		ldrb	r3, [r3]
 447 00ee DBB2     		uxtb	r3, r3
 448 00f0 DBB2     		uxtb	r3, r3
 449 00f2 5BB2     		sxtb	r3, r3
 450 00f4 002B     		cmp	r3, #0
 451 00f6 13DA     		bge	.L26
 264:.\Generated_Source\PSoC5/Tx_IntClock.c ****             {
 265:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 452              		.loc 1 266 0
 453 00f8 174B     		ldr	r3, .L30+28
 454 00fa FA88     		ldrh	r2, [r7, #6]	@ movhi
 455 00fc 1A80     		strh	r2, [r3]	@ movhi
 267:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 268:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 456              		.loc 1 268 0
 457 00fe 124A     		ldr	r2, .L30+12
 458 0100 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 459 0102 002B     		cmp	r3, #0
 460 0104 01D0     		beq	.L27
 461              		.loc 1 268 0 is_stmt 0 discriminator 1
 462 0106 0323     		movs	r3, #3
 463 0108 00E0     		b	.L28
 464              	.L27:
 465              		.loc 1 268 0 discriminator 2
 466 010a 0123     		movs	r3, #1
 467              	.L28:
 468              		.loc 1 268 0 discriminator 3
 469 010c 1370     		strb	r3, [r2]
 269:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 470              		.loc 1 269 0 is_stmt 1 discriminator 3
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 14


 471 010e 00BF     		nop
 472              	.L29:
 473              		.loc 1 269 0 is_stmt 0 discriminator 1
 474 0110 0D4B     		ldr	r3, .L30+12
 475 0112 1B78     		ldrb	r3, [r3]
 476 0114 DBB2     		uxtb	r3, r3
 477 0116 03F00103 		and	r3, r3, #1
 478 011a 002B     		cmp	r3, #0
 479 011c F8D1     		bne	.L29
 480 011e 0AE0     		b	.L17
 481              	.L26:
 270:.\Generated_Source\PSoC5/Tx_IntClock.c ****             }
 271:.\Generated_Source\PSoC5/Tx_IntClock.c ****             else
 272:.\Generated_Source\PSoC5/Tx_IntClock.c ****             {
 273:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/Tx_IntClock.c ****                 CY_SET_REG16(Tx_IntClock_DIV_PTR, clkDivider);
 482              		.loc 1 274 0 is_stmt 1
 483 0120 074B     		ldr	r3, .L30+4
 484 0122 FA88     		ldrh	r2, [r7, #6]	@ movhi
 485 0124 1A80     		strh	r2, [r3]	@ movhi
 275:.\Generated_Source\PSoC5/Tx_IntClock.c **** 				Tx_IntClock_CLKEN |= enabled;
 486              		.loc 1 275 0
 487 0126 054B     		ldr	r3, .L30
 488 0128 044A     		ldr	r2, .L30
 489 012a 1278     		ldrb	r2, [r2]
 490 012c D1B2     		uxtb	r1, r2
 491 012e FA7A     		ldrb	r2, [r7, #11]
 492 0130 0A43     		orrs	r2, r2, r1
 493 0132 D2B2     		uxtb	r2, r2
 494 0134 1A70     		strb	r2, [r3]
 495              	.L17:
 276:.\Generated_Source\PSoC5/Tx_IntClock.c ****             }
 277:.\Generated_Source\PSoC5/Tx_IntClock.c ****         }
 278:.\Generated_Source\PSoC5/Tx_IntClock.c ****     }
 279:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 496              		.loc 1 279 0
 497 0136 1037     		adds	r7, r7, #16
 498 0138 BD46     		mov	sp, r7
 499              		@ sp needed
 500 013a 80BD     		pop	{r7, pc}
 501              	.L31:
 502              		.align	2
 503              	.L30:
 504 013c A2430040 		.word	1073759138
 505 0140 9C400040 		.word	1073758364
 506 0144 9E400040 		.word	1073758366
 507 0148 01400040 		.word	1073758209
 508 014c 10400040 		.word	1073758224
 509 0150 14400040 		.word	1073758228
 510 0154 08400040 		.word	1073758216
 511 0158 02400040 		.word	1073758210
 512              		.cfi_endproc
 513              	.LFE4:
 514              		.size	Tx_IntClock_SetDividerRegister, .-Tx_IntClock_SetDividerRegister
 515              		.section	.text.Tx_IntClock_GetDividerRegister,"ax",%progbits
 516              		.align	2
 517              		.global	Tx_IntClock_GetDividerRegister
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 15


 518              		.thumb
 519              		.thumb_func
 520              		.type	Tx_IntClock_GetDividerRegister, %function
 521              	Tx_IntClock_GetDividerRegister:
 522              	.LFB5:
 280:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 281:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 282:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_GetDividerRegister
 284:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 286:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
 287:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 289:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
 290:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
 291:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 292:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
 293:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 296:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/Tx_IntClock.c **** uint16 Tx_IntClock_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 523              		.loc 1 298 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 0000 80B4     		push	{r7}
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 0002 00AF     		add	r7, sp, #0
 532              		.cfi_def_cfa_register 7
 299:.\Generated_Source\PSoC5/Tx_IntClock.c ****     return CY_GET_REG16(Tx_IntClock_DIV_PTR);
 533              		.loc 1 299 0
 534 0004 034B     		ldr	r3, .L34
 535 0006 1B88     		ldrh	r3, [r3]	@ movhi
 536 0008 9BB2     		uxth	r3, r3
 300:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 537              		.loc 1 300 0
 538 000a 1846     		mov	r0, r3
 539 000c BD46     		mov	sp, r7
 540              		@ sp needed
 541 000e 5DF8047B 		ldr	r7, [sp], #4
 542 0012 7047     		bx	lr
 543              	.L35:
 544              		.align	2
 545              	.L34:
 546 0014 9C400040 		.word	1073758364
 547              		.cfi_endproc
 548              	.LFE5:
 549              		.size	Tx_IntClock_GetDividerRegister, .-Tx_IntClock_GetDividerRegister
 550              		.section	.text.Tx_IntClock_SetModeRegister,"ax",%progbits
 551              		.align	2
 552              		.global	Tx_IntClock_SetModeRegister
 553              		.thumb
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 16


 554              		.thumb_func
 555              		.type	Tx_IntClock_SetModeRegister, %function
 556              	Tx_IntClock_SetModeRegister:
 557              	.LFB6:
 301:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 302:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 303:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_SetModeRegister
 305:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 307:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
 308:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 313:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
 314:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 value.
 319:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 328:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
 329:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
 330:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 331:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/Tx_IntClock.c **** void Tx_IntClock_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 558              		.loc 1 333 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 8
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563 0000 80B4     		push	{r7}
 564              		.cfi_def_cfa_offset 4
 565              		.cfi_offset 7, -4
 566 0002 83B0     		sub	sp, sp, #12
 567              		.cfi_def_cfa_offset 16
 568 0004 00AF     		add	r7, sp, #0
 569              		.cfi_def_cfa_register 7
 570 0006 0346     		mov	r3, r0
 571 0008 FB71     		strb	r3, [r7, #7]
 334:.\Generated_Source\PSoC5/Tx_IntClock.c ****     Tx_IntClock_MOD_SRC |= modeBitMask & (uint8)Tx_IntClock_MODE_MASK;
 572              		.loc 1 334 0
 573 000a 094B     		ldr	r3, .L37
 574 000c 084A     		ldr	r2, .L37
 575 000e 1278     		ldrb	r2, [r2]
 576 0010 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 17


 577 0012 D1B2     		uxtb	r1, r2
 578 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 579 0016 22F00702 		bic	r2, r2, #7
 580 001a D2B2     		uxtb	r2, r2
 581 001c 0A43     		orrs	r2, r2, r1
 582 001e D2B2     		uxtb	r2, r2
 583 0020 D2B2     		uxtb	r2, r2
 584 0022 1A70     		strb	r2, [r3]
 335:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 585              		.loc 1 335 0
 586 0024 0C37     		adds	r7, r7, #12
 587 0026 BD46     		mov	sp, r7
 588              		@ sp needed
 589 0028 5DF8047B 		ldr	r7, [sp], #4
 590 002c 7047     		bx	lr
 591              	.L38:
 592 002e 00BF     		.align	2
 593              	.L37:
 594 0030 9E400040 		.word	1073758366
 595              		.cfi_endproc
 596              	.LFE6:
 597              		.size	Tx_IntClock_SetModeRegister, .-Tx_IntClock_SetModeRegister
 598              		.section	.text.Tx_IntClock_ClearModeRegister,"ax",%progbits
 599              		.align	2
 600              		.global	Tx_IntClock_ClearModeRegister
 601              		.thumb
 602              		.thumb_func
 603              		.type	Tx_IntClock_ClearModeRegister, %function
 604              	Tx_IntClock_ClearModeRegister:
 605              	.LFB7:
 336:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 337:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 338:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_ClearModeRegister
 340:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 342:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
 343:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 348:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
 349:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 value.
 354:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/Tx_IntClock.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 18


 363:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
 364:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
 365:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 366:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/Tx_IntClock.c **** void Tx_IntClock_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 606              		.loc 1 368 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 611 0000 80B4     		push	{r7}
 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 7, -4
 614 0002 83B0     		sub	sp, sp, #12
 615              		.cfi_def_cfa_offset 16
 616 0004 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 0006 0346     		mov	r3, r0
 619 0008 FB71     		strb	r3, [r7, #7]
 369:.\Generated_Source\PSoC5/Tx_IntClock.c ****     Tx_IntClock_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Tx_IntClock_MODE_MASK));
 620              		.loc 1 369 0
 621 000a 094B     		ldr	r3, .L40
 622 000c 084A     		ldr	r2, .L40
 623 000e 1278     		ldrb	r2, [r2]
 624 0010 D1B2     		uxtb	r1, r2
 625 0012 FA79     		ldrb	r2, [r7, #7]
 626 0014 D243     		mvns	r2, r2
 627 0016 D2B2     		uxtb	r2, r2
 628 0018 42F00702 		orr	r2, r2, #7
 629 001c D2B2     		uxtb	r2, r2
 630 001e 0A40     		ands	r2, r2, r1
 631 0020 D2B2     		uxtb	r2, r2
 632 0022 1A70     		strb	r2, [r3]
 370:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 633              		.loc 1 370 0
 634 0024 0C37     		adds	r7, r7, #12
 635 0026 BD46     		mov	sp, r7
 636              		@ sp needed
 637 0028 5DF8047B 		ldr	r7, [sp], #4
 638 002c 7047     		bx	lr
 639              	.L41:
 640 002e 00BF     		.align	2
 641              	.L40:
 642 0030 9E400040 		.word	1073758366
 643              		.cfi_endproc
 644              	.LFE7:
 645              		.size	Tx_IntClock_ClearModeRegister, .-Tx_IntClock_ClearModeRegister
 646              		.section	.text.Tx_IntClock_GetModeRegister,"ax",%progbits
 647              		.align	2
 648              		.global	Tx_IntClock_GetModeRegister
 649              		.thumb
 650              		.thumb_func
 651              		.type	Tx_IntClock_GetModeRegister, %function
 652              	Tx_IntClock_GetModeRegister:
 653              	.LFB8:
 371:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 19


 372:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 373:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_GetModeRegister
 375:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 377:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
 378:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 380:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
 381:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
 382:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 383:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
 384:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 387:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/Tx_IntClock.c **** uint8 Tx_IntClock_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 654              		.loc 1 389 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659 0000 80B4     		push	{r7}
 660              		.cfi_def_cfa_offset 4
 661              		.cfi_offset 7, -4
 662 0002 00AF     		add	r7, sp, #0
 663              		.cfi_def_cfa_register 7
 390:.\Generated_Source\PSoC5/Tx_IntClock.c ****     return Tx_IntClock_MOD_SRC & (uint8)(Tx_IntClock_MODE_MASK);
 664              		.loc 1 390 0
 665 0004 054B     		ldr	r3, .L44
 666 0006 1B78     		ldrb	r3, [r3]
 667 0008 DBB2     		uxtb	r3, r3
 668 000a 23F00703 		bic	r3, r3, #7
 669 000e DBB2     		uxtb	r3, r3
 391:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 670              		.loc 1 391 0
 671 0010 1846     		mov	r0, r3
 672 0012 BD46     		mov	sp, r7
 673              		@ sp needed
 674 0014 5DF8047B 		ldr	r7, [sp], #4
 675 0018 7047     		bx	lr
 676              	.L45:
 677 001a 00BF     		.align	2
 678              	.L44:
 679 001c 9E400040 		.word	1073758366
 680              		.cfi_endproc
 681              	.LFE8:
 682              		.size	Tx_IntClock_GetModeRegister, .-Tx_IntClock_GetModeRegister
 683              		.section	.text.Tx_IntClock_SetSourceRegister,"ax",%progbits
 684              		.align	2
 685              		.global	Tx_IntClock_SetSourceRegister
 686              		.thumb
 687              		.thumb_func
 688              		.type	Tx_IntClock_SetSourceRegister, %function
 689              	Tx_IntClock_SetSourceRegister:
 690              	.LFB9:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 20


 392:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 393:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 394:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_SetSourceRegister
 396:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 398:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
 399:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 402:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
 403:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/Tx_IntClock.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 415:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
 416:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
 417:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 418:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/Tx_IntClock.c **** void Tx_IntClock_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 691              		.loc 1 420 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 16
 694              		@ frame_needed = 1, uses_anonymous_args = 0
 695 0000 80B5     		push	{r7, lr}
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 7, -8
 698              		.cfi_offset 14, -4
 699 0002 84B0     		sub	sp, sp, #16
 700              		.cfi_def_cfa_offset 24
 701 0004 00AF     		add	r7, sp, #0
 702              		.cfi_def_cfa_register 7
 703 0006 0346     		mov	r3, r0
 704 0008 FB71     		strb	r3, [r7, #7]
 421:.\Generated_Source\PSoC5/Tx_IntClock.c ****     uint16 currDiv = Tx_IntClock_GetDividerRegister();
 705              		.loc 1 421 0
 706 000a FFF7FEFF 		bl	Tx_IntClock_GetDividerRegister
 707 000e 0346     		mov	r3, r0
 708 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 422:.\Generated_Source\PSoC5/Tx_IntClock.c ****     uint8 oldSrc = Tx_IntClock_GetSourceRegister();
 709              		.loc 1 422 0
 710 0012 FFF7FEFF 		bl	Tx_IntClock_GetSourceRegister
 711 0016 0346     		mov	r3, r0
 712 0018 7B73     		strb	r3, [r7, #13]
 423:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 424:.\Generated_Source\PSoC5/Tx_IntClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 713              		.loc 1 424 0
 714 001a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 21


 715 001c 002B     		cmp	r3, #0
 716 001e 1BD0     		beq	.L47
 717              		.loc 1 424 0 is_stmt 0 discriminator 1
 718 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 0022 002B     		cmp	r3, #0
 720 0024 18D1     		bne	.L47
 425:.\Generated_Source\PSoC5/Tx_IntClock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 721              		.loc 1 425 0 is_stmt 1
 722 0026 FB89     		ldrh	r3, [r7, #14]
 723 0028 002B     		cmp	r3, #0
 724 002a 15D1     		bne	.L47
 426:.\Generated_Source\PSoC5/Tx_IntClock.c ****     {
 427:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_MOD_SRC |= CYCLK_SSS;
 725              		.loc 1 429 0
 726 002c 224B     		ldr	r3, .L50
 727 002e 224A     		ldr	r2, .L50
 728 0030 1278     		ldrb	r2, [r2]
 729 0032 D2B2     		uxtb	r2, r2
 730 0034 42F04002 		orr	r2, r2, #64
 731 0038 D2B2     		uxtb	r2, r2
 732 003a 1A70     		strb	r2, [r3]
 430:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_MOD_SRC =
 733              		.loc 1 430 0
 734 003c 1E4B     		ldr	r3, .L50
 431:.\Generated_Source\PSoC5/Tx_IntClock.c ****             (Tx_IntClock_MOD_SRC & (uint8)(~Tx_IntClock_SRC_SEL_MSK)) | clkSource;
 735              		.loc 1 431 0
 736 003e 1E4A     		ldr	r2, .L50
 737 0040 1278     		ldrb	r2, [r2]
 738 0042 D2B2     		uxtb	r2, r2
 430:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_MOD_SRC =
 739              		.loc 1 430 0
 740 0044 D2B2     		uxtb	r2, r2
 741 0046 22F00702 		bic	r2, r2, #7
 742 004a D1B2     		uxtb	r1, r2
 743 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 744 004e 0A43     		orrs	r2, r2, r1
 745 0050 D2B2     		uxtb	r2, r2
 746 0052 D2B2     		uxtb	r2, r2
 747 0054 1A70     		strb	r2, [r3]
 748 0056 2BE0     		b	.L46
 749              	.L47:
 432:.\Generated_Source\PSoC5/Tx_IntClock.c ****     }
 433:.\Generated_Source\PSoC5/Tx_IntClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 750              		.loc 1 433 0
 751 0058 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 752 005a 002B     		cmp	r3, #0
 753 005c 1BD1     		bne	.L49
 754              		.loc 1 433 0 is_stmt 0 discriminator 1
 755 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 756 0060 002B     		cmp	r3, #0
 757 0062 18D0     		beq	.L49
 434:.\Generated_Source\PSoC5/Tx_IntClock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 758              		.loc 1 434 0 is_stmt 1
 759 0064 FB89     		ldrh	r3, [r7, #14]
 760 0066 002B     		cmp	r3, #0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 22


 761 0068 15D1     		bne	.L49
 435:.\Generated_Source\PSoC5/Tx_IntClock.c ****     {
 436:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/Tx_IntClock.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_MOD_SRC =
 762              		.loc 1 438 0
 763 006a 134B     		ldr	r3, .L50
 439:.\Generated_Source\PSoC5/Tx_IntClock.c ****             (Tx_IntClock_MOD_SRC & (uint8)(~Tx_IntClock_SRC_SEL_MSK)) | clkSource;
 764              		.loc 1 439 0
 765 006c 124A     		ldr	r2, .L50
 766 006e 1278     		ldrb	r2, [r2]
 767 0070 D2B2     		uxtb	r2, r2
 438:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_MOD_SRC =
 768              		.loc 1 438 0
 769 0072 D2B2     		uxtb	r2, r2
 770 0074 22F00702 		bic	r2, r2, #7
 771 0078 D1B2     		uxtb	r1, r2
 772 007a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 773 007c 0A43     		orrs	r2, r2, r1
 774 007e D2B2     		uxtb	r2, r2
 775 0080 D2B2     		uxtb	r2, r2
 776 0082 1A70     		strb	r2, [r3]
 440:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 777              		.loc 1 440 0
 778 0084 0C4B     		ldr	r3, .L50
 779 0086 0C4A     		ldr	r2, .L50
 780 0088 1278     		ldrb	r2, [r2]
 781 008a D2B2     		uxtb	r2, r2
 782 008c 22F04002 		bic	r2, r2, #64
 783 0090 D2B2     		uxtb	r2, r2
 784 0092 1A70     		strb	r2, [r3]
 785 0094 0CE0     		b	.L46
 786              	.L49:
 441:.\Generated_Source\PSoC5/Tx_IntClock.c ****     }
 442:.\Generated_Source\PSoC5/Tx_IntClock.c ****     else
 443:.\Generated_Source\PSoC5/Tx_IntClock.c ****     {
 444:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_MOD_SRC =
 787              		.loc 1 444 0
 788 0096 084B     		ldr	r3, .L50
 445:.\Generated_Source\PSoC5/Tx_IntClock.c ****             (Tx_IntClock_MOD_SRC & (uint8)(~Tx_IntClock_SRC_SEL_MSK)) | clkSource;
 789              		.loc 1 445 0
 790 0098 074A     		ldr	r2, .L50
 791 009a 1278     		ldrb	r2, [r2]
 792 009c D2B2     		uxtb	r2, r2
 444:.\Generated_Source\PSoC5/Tx_IntClock.c ****         Tx_IntClock_MOD_SRC =
 793              		.loc 1 444 0
 794 009e D2B2     		uxtb	r2, r2
 795 00a0 22F00702 		bic	r2, r2, #7
 796 00a4 D1B2     		uxtb	r1, r2
 797 00a6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 798 00a8 0A43     		orrs	r2, r2, r1
 799 00aa D2B2     		uxtb	r2, r2
 800 00ac D2B2     		uxtb	r2, r2
 801 00ae 1A70     		strb	r2, [r3]
 802              	.L46:
 446:.\Generated_Source\PSoC5/Tx_IntClock.c ****     }
 447:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 23


 803              		.loc 1 447 0
 804 00b0 1037     		adds	r7, r7, #16
 805 00b2 BD46     		mov	sp, r7
 806              		@ sp needed
 807 00b4 80BD     		pop	{r7, pc}
 808              	.L51:
 809 00b6 00BF     		.align	2
 810              	.L50:
 811 00b8 9E400040 		.word	1073758366
 812              		.cfi_endproc
 813              	.LFE9:
 814              		.size	Tx_IntClock_SetSourceRegister, .-Tx_IntClock_SetSourceRegister
 815              		.section	.text.Tx_IntClock_GetSourceRegister,"ax",%progbits
 816              		.align	2
 817              		.global	Tx_IntClock_GetSourceRegister
 818              		.thumb
 819              		.thumb_func
 820              		.type	Tx_IntClock_GetSourceRegister, %function
 821              	Tx_IntClock_GetSourceRegister:
 822              	.LFB10:
 448:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 449:.\Generated_Source\PSoC5/Tx_IntClock.c **** 
 450:.\Generated_Source\PSoC5/Tx_IntClock.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Function Name: Tx_IntClock_GetSourceRegister
 452:.\Generated_Source\PSoC5/Tx_IntClock.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 454:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Summary:
 455:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 457:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Parameters:
 458:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  None
 459:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 460:.\Generated_Source\PSoC5/Tx_IntClock.c **** * Returns:
 461:.\Generated_Source\PSoC5/Tx_IntClock.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/Tx_IntClock.c **** *
 463:.\Generated_Source\PSoC5/Tx_IntClock.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/Tx_IntClock.c **** uint8 Tx_IntClock_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/Tx_IntClock.c **** {
 823              		.loc 1 465 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 1, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828 0000 80B4     		push	{r7}
 829              		.cfi_def_cfa_offset 4
 830              		.cfi_offset 7, -4
 831 0002 00AF     		add	r7, sp, #0
 832              		.cfi_def_cfa_register 7
 466:.\Generated_Source\PSoC5/Tx_IntClock.c ****     return Tx_IntClock_MOD_SRC & Tx_IntClock_SRC_SEL_MSK;
 833              		.loc 1 466 0
 834 0004 054B     		ldr	r3, .L54
 835 0006 1B78     		ldrb	r3, [r3]
 836 0008 DBB2     		uxtb	r3, r3
 837 000a 03F00703 		and	r3, r3, #7
 838 000e DBB2     		uxtb	r3, r3
 467:.\Generated_Source\PSoC5/Tx_IntClock.c **** }
 839              		.loc 1 467 0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 24


 840 0010 1846     		mov	r0, r3
 841 0012 BD46     		mov	sp, r7
 842              		@ sp needed
 843 0014 5DF8047B 		ldr	r7, [sp], #4
 844 0018 7047     		bx	lr
 845              	.L55:
 846 001a 00BF     		.align	2
 847              	.L54:
 848 001c 9E400040 		.word	1073758366
 849              		.cfi_endproc
 850              	.LFE10:
 851              		.size	Tx_IntClock_GetSourceRegister, .-Tx_IntClock_GetSourceRegister
 852              		.text
 853              	.Letext0:
 854              		.file 2 ".\\Generated_Source\\PSoC5/cytypes.h"
 855              		.section	.debug_info,"",%progbits
 856              	.Ldebug_info0:
 857 0000 57020000 		.4byte	0x257
 858 0004 0400     		.2byte	0x4
 859 0006 00000000 		.4byte	.Ldebug_abbrev0
 860 000a 04       		.byte	0x4
 861 000b 01       		.uleb128 0x1
 862 000c 4D000000 		.4byte	.LASF37
 863 0010 01       		.byte	0x1
 864 0011 B0010000 		.4byte	.LASF38
 865 0015 3A020000 		.4byte	.LASF39
 866 0019 00000000 		.4byte	.Ldebug_ranges0+0
 867 001d 00000000 		.4byte	0
 868 0021 00000000 		.4byte	.Ldebug_line0
 869 0025 02       		.uleb128 0x2
 870 0026 01       		.byte	0x1
 871 0027 06       		.byte	0x6
 872 0028 62010000 		.4byte	.LASF0
 873 002c 02       		.uleb128 0x2
 874 002d 01       		.byte	0x1
 875 002e 08       		.byte	0x8
 876 002f 29010000 		.4byte	.LASF1
 877 0033 02       		.uleb128 0x2
 878 0034 02       		.byte	0x2
 879 0035 05       		.byte	0x5
 880 0036 0E000000 		.4byte	.LASF2
 881 003a 02       		.uleb128 0x2
 882 003b 02       		.byte	0x2
 883 003c 07       		.byte	0x7
 884 003d D7010000 		.4byte	.LASF3
 885 0041 02       		.uleb128 0x2
 886 0042 04       		.byte	0x4
 887 0043 05       		.byte	0x5
 888 0044 1A010000 		.4byte	.LASF4
 889 0048 02       		.uleb128 0x2
 890 0049 04       		.byte	0x4
 891 004a 07       		.byte	0x7
 892 004b 88020000 		.4byte	.LASF5
 893 004f 02       		.uleb128 0x2
 894 0050 08       		.byte	0x8
 895 0051 05       		.byte	0x5
 896 0052 0C010000 		.4byte	.LASF6
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 25


 897 0056 02       		.uleb128 0x2
 898 0057 08       		.byte	0x8
 899 0058 07       		.byte	0x7
 900 0059 6E010000 		.4byte	.LASF7
 901 005d 03       		.uleb128 0x3
 902 005e 04       		.byte	0x4
 903 005f 05       		.byte	0x5
 904 0060 696E7400 		.ascii	"int\000"
 905 0064 02       		.uleb128 0x2
 906 0065 04       		.byte	0x4
 907 0066 07       		.byte	0x7
 908 0067 85010000 		.4byte	.LASF8
 909 006b 04       		.uleb128 0x4
 910 006c DF000000 		.4byte	.LASF9
 911 0070 02       		.byte	0x2
 912 0071 A1       		.byte	0xa1
 913 0072 2C000000 		.4byte	0x2c
 914 0076 04       		.uleb128 0x4
 915 0077 C9000000 		.4byte	.LASF10
 916 007b 02       		.byte	0x2
 917 007c A2       		.byte	0xa2
 918 007d 3A000000 		.4byte	0x3a
 919 0081 02       		.uleb128 0x2
 920 0082 04       		.byte	0x4
 921 0083 04       		.byte	0x4
 922 0084 06010000 		.4byte	.LASF11
 923 0088 02       		.uleb128 0x2
 924 0089 08       		.byte	0x8
 925 008a 04       		.byte	0x4
 926 008b 9A020000 		.4byte	.LASF12
 927 008f 02       		.uleb128 0x2
 928 0090 01       		.byte	0x1
 929 0091 08       		.byte	0x8
 930 0092 EA010000 		.4byte	.LASF13
 931 0096 05       		.uleb128 0x5
 932 0097 83020000 		.4byte	.LASF14
 933 009b 02       		.byte	0x2
 934 009c 4B01     		.2byte	0x14b
 935 009e A2000000 		.4byte	0xa2
 936 00a2 06       		.uleb128 0x6
 937 00a3 6B000000 		.4byte	0x6b
 938 00a7 05       		.uleb128 0x5
 939 00a8 08000000 		.4byte	.LASF15
 940 00ac 02       		.byte	0x2
 941 00ad 4C01     		.2byte	0x14c
 942 00af B3000000 		.4byte	0xb3
 943 00b3 06       		.uleb128 0x6
 944 00b4 76000000 		.4byte	0x76
 945 00b8 07       		.uleb128 0x7
 946 00b9 0C020000 		.4byte	.LASF16
 947 00bd 01       		.byte	0x1
 948 00be 2D       		.byte	0x2d
 949 00bf 00000000 		.4byte	.LFB0
 950 00c3 34000000 		.4byte	.LFE0-.LFB0
 951 00c7 01       		.uleb128 0x1
 952 00c8 9C       		.byte	0x9c
 953 00c9 07       		.uleb128 0x7
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 26


 954 00ca C7020000 		.4byte	.LASF17
 955 00ce 01       		.byte	0x1
 956 00cf 47       		.byte	0x47
 957 00d0 00000000 		.4byte	.LFB1
 958 00d4 34000000 		.4byte	.LFE1-.LFB1
 959 00d8 01       		.uleb128 0x1
 960 00d9 9C       		.byte	0x9c
 961 00da 08       		.uleb128 0x8
 962 00db F0000000 		.4byte	.LASF18
 963 00df 01       		.byte	0x1
 964 00e0 64       		.byte	0x64
 965 00e1 00000000 		.4byte	.LFB2
 966 00e5 B0000000 		.4byte	.LFE2-.LFB2
 967 00e9 01       		.uleb128 0x1
 968 00ea 9C       		.byte	0x9c
 969 00eb 08010000 		.4byte	0x108
 970 00ef 09       		.uleb128 0x9
 971 00f0 14000000 		.4byte	.LBB2
 972 00f4 70000000 		.4byte	.LBE2-.LBB2
 973 00f8 0A       		.uleb128 0xa
 974 00f9 01020000 		.4byte	.LASF24
 975 00fd 01       		.byte	0x1
 976 00fe 69       		.byte	0x69
 977 00ff 76000000 		.4byte	0x76
 978 0103 02       		.uleb128 0x2
 979 0104 91       		.byte	0x91
 980 0105 76       		.sleb128 -10
 981 0106 00       		.byte	0
 982 0107 00       		.byte	0
 983 0108 08       		.uleb128 0x8
 984 0109 18000000 		.4byte	.LASF19
 985 010d 01       		.byte	0x1
 986 010e 9D       		.byte	0x9d
 987 010f 00000000 		.4byte	.LFB3
 988 0113 40000000 		.4byte	.LFE3-.LFB3
 989 0117 01       		.uleb128 0x1
 990 0118 9C       		.byte	0x9c
 991 0119 2C010000 		.4byte	0x12c
 992 011d 0B       		.uleb128 0xb
 993 011e 23010000 		.4byte	.LASF21
 994 0122 01       		.byte	0x1
 995 0123 9D       		.byte	0x9d
 996 0124 6B000000 		.4byte	0x6b
 997 0128 02       		.uleb128 0x2
 998 0129 91       		.byte	0x91
 999 012a 77       		.sleb128 -9
 1000 012b 00       		.byte	0
 1001 012c 0C       		.uleb128 0xc
 1002 012d F6020000 		.4byte	.LASF20
 1003 0131 01       		.byte	0x1
 1004 0132 C1       		.byte	0xc1
 1005 0133 00000000 		.4byte	.LFB4
 1006 0137 5C010000 		.4byte	.LFE4-.LFB4
 1007 013b 01       		.uleb128 0x1
 1008 013c 9C       		.byte	0x9c
 1009 013d 88010000 		.4byte	0x188
 1010 0141 0B       		.uleb128 0xb
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 27


 1011 0142 E5000000 		.4byte	.LASF22
 1012 0146 01       		.byte	0x1
 1013 0147 C1       		.byte	0xc1
 1014 0148 76000000 		.4byte	0x76
 1015 014c 02       		.uleb128 0x2
 1016 014d 91       		.byte	0x91
 1017 014e 6E       		.sleb128 -18
 1018 014f 0B       		.uleb128 0xb
 1019 0150 D0000000 		.4byte	.LASF23
 1020 0154 01       		.byte	0x1
 1021 0155 C1       		.byte	0xc1
 1022 0156 6B000000 		.4byte	0x6b
 1023 015a 02       		.uleb128 0x2
 1024 015b 91       		.byte	0x91
 1025 015c 6D       		.sleb128 -19
 1026 015d 0A       		.uleb128 0xa
 1027 015e BF020000 		.4byte	.LASF25
 1028 0162 01       		.byte	0x1
 1029 0163 C4       		.byte	0xc4
 1030 0164 6B000000 		.4byte	0x6b
 1031 0168 02       		.uleb128 0x2
 1032 0169 91       		.byte	0x91
 1033 016a 73       		.sleb128 -13
 1034 016b 0A       		.uleb128 0xa
 1035 016c F9010000 		.4byte	.LASF26
 1036 0170 01       		.byte	0x1
 1037 0171 C6       		.byte	0xc6
 1038 0172 6B000000 		.4byte	0x6b
 1039 0176 02       		.uleb128 0x2
 1040 0177 91       		.byte	0x91
 1041 0178 77       		.sleb128 -9
 1042 0179 0A       		.uleb128 0xa
 1043 017a 01020000 		.4byte	.LASF24
 1044 017e 01       		.byte	0x1
 1045 017f C7       		.byte	0xc7
 1046 0180 76000000 		.4byte	0x76
 1047 0184 02       		.uleb128 0x2
 1048 0185 91       		.byte	0x91
 1049 0186 74       		.sleb128 -12
 1050 0187 00       		.byte	0
 1051 0188 0D       		.uleb128 0xd
 1052 0189 43010000 		.4byte	.LASF30
 1053 018d 01       		.byte	0x1
 1054 018e 2901     		.2byte	0x129
 1055 0190 76000000 		.4byte	0x76
 1056 0194 00000000 		.4byte	.LFB5
 1057 0198 18000000 		.4byte	.LFE5-.LFB5
 1058 019c 01       		.uleb128 0x1
 1059 019d 9C       		.byte	0x9c
 1060 019e 0E       		.uleb128 0xe
 1061 019f 1E020000 		.4byte	.LASF27
 1062 01a3 01       		.byte	0x1
 1063 01a4 4C01     		.2byte	0x14c
 1064 01a6 00000000 		.4byte	.LFB6
 1065 01aa 34000000 		.4byte	.LFE6-.LFB6
 1066 01ae 01       		.uleb128 0x1
 1067 01af 9C       		.byte	0x9c
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 28


 1068 01b0 C4010000 		.4byte	0x1c4
 1069 01b4 0F       		.uleb128 0xf
 1070 01b5 37010000 		.4byte	.LASF28
 1071 01b9 01       		.byte	0x1
 1072 01ba 4C01     		.2byte	0x14c
 1073 01bc 6B000000 		.4byte	0x6b
 1074 01c0 02       		.uleb128 0x2
 1075 01c1 91       		.byte	0x91
 1076 01c2 77       		.sleb128 -9
 1077 01c3 00       		.byte	0
 1078 01c4 0E       		.uleb128 0xe
 1079 01c5 A1020000 		.4byte	.LASF29
 1080 01c9 01       		.byte	0x1
 1081 01ca 6F01     		.2byte	0x16f
 1082 01cc 00000000 		.4byte	.LFB7
 1083 01d0 34000000 		.4byte	.LFE7-.LFB7
 1084 01d4 01       		.uleb128 0x1
 1085 01d5 9C       		.byte	0x9c
 1086 01d6 EA010000 		.4byte	0x1ea
 1087 01da 0F       		.uleb128 0xf
 1088 01db 37010000 		.4byte	.LASF28
 1089 01df 01       		.byte	0x1
 1090 01e0 6F01     		.2byte	0x16f
 1091 01e2 6B000000 		.4byte	0x6b
 1092 01e6 02       		.uleb128 0x2
 1093 01e7 91       		.byte	0x91
 1094 01e8 77       		.sleb128 -9
 1095 01e9 00       		.byte	0
 1096 01ea 0D       		.uleb128 0xd
 1097 01eb 31000000 		.4byte	.LASF31
 1098 01ef 01       		.byte	0x1
 1099 01f0 8401     		.2byte	0x184
 1100 01f2 6B000000 		.4byte	0x6b
 1101 01f6 00000000 		.4byte	.LFB8
 1102 01fa 20000000 		.4byte	.LFE8-.LFB8
 1103 01fe 01       		.uleb128 0x1
 1104 01ff 9C       		.byte	0x9c
 1105 0200 10       		.uleb128 0x10
 1106 0201 D8020000 		.4byte	.LASF32
 1107 0205 01       		.byte	0x1
 1108 0206 A301     		.2byte	0x1a3
 1109 0208 00000000 		.4byte	.LFB9
 1110 020c BC000000 		.4byte	.LFE9-.LFB9
 1111 0210 01       		.uleb128 0x1
 1112 0211 9C       		.byte	0x9c
 1113 0212 44020000 		.4byte	0x244
 1114 0216 0F       		.uleb128 0xf
 1115 0217 EF010000 		.4byte	.LASF33
 1116 021b 01       		.byte	0x1
 1117 021c A301     		.2byte	0x1a3
 1118 021e 6B000000 		.4byte	0x6b
 1119 0222 02       		.uleb128 0x2
 1120 0223 91       		.byte	0x91
 1121 0224 6F       		.sleb128 -17
 1122 0225 11       		.uleb128 0x11
 1123 0226 00000000 		.4byte	.LASF34
 1124 022a 01       		.byte	0x1
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 29


 1125 022b A501     		.2byte	0x1a5
 1126 022d 76000000 		.4byte	0x76
 1127 0231 02       		.uleb128 0x2
 1128 0232 91       		.byte	0x91
 1129 0233 76       		.sleb128 -10
 1130 0234 11       		.uleb128 0x11
 1131 0235 D8000000 		.4byte	.LASF35
 1132 0239 01       		.byte	0x1
 1133 023a A601     		.2byte	0x1a6
 1134 023c 6B000000 		.4byte	0x6b
 1135 0240 02       		.uleb128 0x2
 1136 0241 91       		.byte	0x91
 1137 0242 75       		.sleb128 -11
 1138 0243 00       		.byte	0
 1139 0244 0D       		.uleb128 0xd
 1140 0245 92010000 		.4byte	.LASF36
 1141 0249 01       		.byte	0x1
 1142 024a D001     		.2byte	0x1d0
 1143 024c 6B000000 		.4byte	0x6b
 1144 0250 00000000 		.4byte	.LFB10
 1145 0254 20000000 		.4byte	.LFE10-.LFB10
 1146 0258 01       		.uleb128 0x1
 1147 0259 9C       		.byte	0x9c
 1148 025a 00       		.byte	0
 1149              		.section	.debug_abbrev,"",%progbits
 1150              	.Ldebug_abbrev0:
 1151 0000 01       		.uleb128 0x1
 1152 0001 11       		.uleb128 0x11
 1153 0002 01       		.byte	0x1
 1154 0003 25       		.uleb128 0x25
 1155 0004 0E       		.uleb128 0xe
 1156 0005 13       		.uleb128 0x13
 1157 0006 0B       		.uleb128 0xb
 1158 0007 03       		.uleb128 0x3
 1159 0008 0E       		.uleb128 0xe
 1160 0009 1B       		.uleb128 0x1b
 1161 000a 0E       		.uleb128 0xe
 1162 000b 55       		.uleb128 0x55
 1163 000c 17       		.uleb128 0x17
 1164 000d 11       		.uleb128 0x11
 1165 000e 01       		.uleb128 0x1
 1166 000f 10       		.uleb128 0x10
 1167 0010 17       		.uleb128 0x17
 1168 0011 00       		.byte	0
 1169 0012 00       		.byte	0
 1170 0013 02       		.uleb128 0x2
 1171 0014 24       		.uleb128 0x24
 1172 0015 00       		.byte	0
 1173 0016 0B       		.uleb128 0xb
 1174 0017 0B       		.uleb128 0xb
 1175 0018 3E       		.uleb128 0x3e
 1176 0019 0B       		.uleb128 0xb
 1177 001a 03       		.uleb128 0x3
 1178 001b 0E       		.uleb128 0xe
 1179 001c 00       		.byte	0
 1180 001d 00       		.byte	0
 1181 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 30


 1182 001f 24       		.uleb128 0x24
 1183 0020 00       		.byte	0
 1184 0021 0B       		.uleb128 0xb
 1185 0022 0B       		.uleb128 0xb
 1186 0023 3E       		.uleb128 0x3e
 1187 0024 0B       		.uleb128 0xb
 1188 0025 03       		.uleb128 0x3
 1189 0026 08       		.uleb128 0x8
 1190 0027 00       		.byte	0
 1191 0028 00       		.byte	0
 1192 0029 04       		.uleb128 0x4
 1193 002a 16       		.uleb128 0x16
 1194 002b 00       		.byte	0
 1195 002c 03       		.uleb128 0x3
 1196 002d 0E       		.uleb128 0xe
 1197 002e 3A       		.uleb128 0x3a
 1198 002f 0B       		.uleb128 0xb
 1199 0030 3B       		.uleb128 0x3b
 1200 0031 0B       		.uleb128 0xb
 1201 0032 49       		.uleb128 0x49
 1202 0033 13       		.uleb128 0x13
 1203 0034 00       		.byte	0
 1204 0035 00       		.byte	0
 1205 0036 05       		.uleb128 0x5
 1206 0037 16       		.uleb128 0x16
 1207 0038 00       		.byte	0
 1208 0039 03       		.uleb128 0x3
 1209 003a 0E       		.uleb128 0xe
 1210 003b 3A       		.uleb128 0x3a
 1211 003c 0B       		.uleb128 0xb
 1212 003d 3B       		.uleb128 0x3b
 1213 003e 05       		.uleb128 0x5
 1214 003f 49       		.uleb128 0x49
 1215 0040 13       		.uleb128 0x13
 1216 0041 00       		.byte	0
 1217 0042 00       		.byte	0
 1218 0043 06       		.uleb128 0x6
 1219 0044 35       		.uleb128 0x35
 1220 0045 00       		.byte	0
 1221 0046 49       		.uleb128 0x49
 1222 0047 13       		.uleb128 0x13
 1223 0048 00       		.byte	0
 1224 0049 00       		.byte	0
 1225 004a 07       		.uleb128 0x7
 1226 004b 2E       		.uleb128 0x2e
 1227 004c 00       		.byte	0
 1228 004d 3F       		.uleb128 0x3f
 1229 004e 19       		.uleb128 0x19
 1230 004f 03       		.uleb128 0x3
 1231 0050 0E       		.uleb128 0xe
 1232 0051 3A       		.uleb128 0x3a
 1233 0052 0B       		.uleb128 0xb
 1234 0053 3B       		.uleb128 0x3b
 1235 0054 0B       		.uleb128 0xb
 1236 0055 27       		.uleb128 0x27
 1237 0056 19       		.uleb128 0x19
 1238 0057 11       		.uleb128 0x11
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 31


 1239 0058 01       		.uleb128 0x1
 1240 0059 12       		.uleb128 0x12
 1241 005a 06       		.uleb128 0x6
 1242 005b 40       		.uleb128 0x40
 1243 005c 18       		.uleb128 0x18
 1244 005d 9742     		.uleb128 0x2117
 1245 005f 19       		.uleb128 0x19
 1246 0060 00       		.byte	0
 1247 0061 00       		.byte	0
 1248 0062 08       		.uleb128 0x8
 1249 0063 2E       		.uleb128 0x2e
 1250 0064 01       		.byte	0x1
 1251 0065 3F       		.uleb128 0x3f
 1252 0066 19       		.uleb128 0x19
 1253 0067 03       		.uleb128 0x3
 1254 0068 0E       		.uleb128 0xe
 1255 0069 3A       		.uleb128 0x3a
 1256 006a 0B       		.uleb128 0xb
 1257 006b 3B       		.uleb128 0x3b
 1258 006c 0B       		.uleb128 0xb
 1259 006d 27       		.uleb128 0x27
 1260 006e 19       		.uleb128 0x19
 1261 006f 11       		.uleb128 0x11
 1262 0070 01       		.uleb128 0x1
 1263 0071 12       		.uleb128 0x12
 1264 0072 06       		.uleb128 0x6
 1265 0073 40       		.uleb128 0x40
 1266 0074 18       		.uleb128 0x18
 1267 0075 9742     		.uleb128 0x2117
 1268 0077 19       		.uleb128 0x19
 1269 0078 01       		.uleb128 0x1
 1270 0079 13       		.uleb128 0x13
 1271 007a 00       		.byte	0
 1272 007b 00       		.byte	0
 1273 007c 09       		.uleb128 0x9
 1274 007d 0B       		.uleb128 0xb
 1275 007e 01       		.byte	0x1
 1276 007f 11       		.uleb128 0x11
 1277 0080 01       		.uleb128 0x1
 1278 0081 12       		.uleb128 0x12
 1279 0082 06       		.uleb128 0x6
 1280 0083 00       		.byte	0
 1281 0084 00       		.byte	0
 1282 0085 0A       		.uleb128 0xa
 1283 0086 34       		.uleb128 0x34
 1284 0087 00       		.byte	0
 1285 0088 03       		.uleb128 0x3
 1286 0089 0E       		.uleb128 0xe
 1287 008a 3A       		.uleb128 0x3a
 1288 008b 0B       		.uleb128 0xb
 1289 008c 3B       		.uleb128 0x3b
 1290 008d 0B       		.uleb128 0xb
 1291 008e 49       		.uleb128 0x49
 1292 008f 13       		.uleb128 0x13
 1293 0090 02       		.uleb128 0x2
 1294 0091 18       		.uleb128 0x18
 1295 0092 00       		.byte	0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 32


 1296 0093 00       		.byte	0
 1297 0094 0B       		.uleb128 0xb
 1298 0095 05       		.uleb128 0x5
 1299 0096 00       		.byte	0
 1300 0097 03       		.uleb128 0x3
 1301 0098 0E       		.uleb128 0xe
 1302 0099 3A       		.uleb128 0x3a
 1303 009a 0B       		.uleb128 0xb
 1304 009b 3B       		.uleb128 0x3b
 1305 009c 0B       		.uleb128 0xb
 1306 009d 49       		.uleb128 0x49
 1307 009e 13       		.uleb128 0x13
 1308 009f 02       		.uleb128 0x2
 1309 00a0 18       		.uleb128 0x18
 1310 00a1 00       		.byte	0
 1311 00a2 00       		.byte	0
 1312 00a3 0C       		.uleb128 0xc
 1313 00a4 2E       		.uleb128 0x2e
 1314 00a5 01       		.byte	0x1
 1315 00a6 3F       		.uleb128 0x3f
 1316 00a7 19       		.uleb128 0x19
 1317 00a8 03       		.uleb128 0x3
 1318 00a9 0E       		.uleb128 0xe
 1319 00aa 3A       		.uleb128 0x3a
 1320 00ab 0B       		.uleb128 0xb
 1321 00ac 3B       		.uleb128 0x3b
 1322 00ad 0B       		.uleb128 0xb
 1323 00ae 27       		.uleb128 0x27
 1324 00af 19       		.uleb128 0x19
 1325 00b0 11       		.uleb128 0x11
 1326 00b1 01       		.uleb128 0x1
 1327 00b2 12       		.uleb128 0x12
 1328 00b3 06       		.uleb128 0x6
 1329 00b4 40       		.uleb128 0x40
 1330 00b5 18       		.uleb128 0x18
 1331 00b6 9642     		.uleb128 0x2116
 1332 00b8 19       		.uleb128 0x19
 1333 00b9 01       		.uleb128 0x1
 1334 00ba 13       		.uleb128 0x13
 1335 00bb 00       		.byte	0
 1336 00bc 00       		.byte	0
 1337 00bd 0D       		.uleb128 0xd
 1338 00be 2E       		.uleb128 0x2e
 1339 00bf 00       		.byte	0
 1340 00c0 3F       		.uleb128 0x3f
 1341 00c1 19       		.uleb128 0x19
 1342 00c2 03       		.uleb128 0x3
 1343 00c3 0E       		.uleb128 0xe
 1344 00c4 3A       		.uleb128 0x3a
 1345 00c5 0B       		.uleb128 0xb
 1346 00c6 3B       		.uleb128 0x3b
 1347 00c7 05       		.uleb128 0x5
 1348 00c8 27       		.uleb128 0x27
 1349 00c9 19       		.uleb128 0x19
 1350 00ca 49       		.uleb128 0x49
 1351 00cb 13       		.uleb128 0x13
 1352 00cc 11       		.uleb128 0x11
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 33


 1353 00cd 01       		.uleb128 0x1
 1354 00ce 12       		.uleb128 0x12
 1355 00cf 06       		.uleb128 0x6
 1356 00d0 40       		.uleb128 0x40
 1357 00d1 18       		.uleb128 0x18
 1358 00d2 9742     		.uleb128 0x2117
 1359 00d4 19       		.uleb128 0x19
 1360 00d5 00       		.byte	0
 1361 00d6 00       		.byte	0
 1362 00d7 0E       		.uleb128 0xe
 1363 00d8 2E       		.uleb128 0x2e
 1364 00d9 01       		.byte	0x1
 1365 00da 3F       		.uleb128 0x3f
 1366 00db 19       		.uleb128 0x19
 1367 00dc 03       		.uleb128 0x3
 1368 00dd 0E       		.uleb128 0xe
 1369 00de 3A       		.uleb128 0x3a
 1370 00df 0B       		.uleb128 0xb
 1371 00e0 3B       		.uleb128 0x3b
 1372 00e1 05       		.uleb128 0x5
 1373 00e2 27       		.uleb128 0x27
 1374 00e3 19       		.uleb128 0x19
 1375 00e4 11       		.uleb128 0x11
 1376 00e5 01       		.uleb128 0x1
 1377 00e6 12       		.uleb128 0x12
 1378 00e7 06       		.uleb128 0x6
 1379 00e8 40       		.uleb128 0x40
 1380 00e9 18       		.uleb128 0x18
 1381 00ea 9742     		.uleb128 0x2117
 1382 00ec 19       		.uleb128 0x19
 1383 00ed 01       		.uleb128 0x1
 1384 00ee 13       		.uleb128 0x13
 1385 00ef 00       		.byte	0
 1386 00f0 00       		.byte	0
 1387 00f1 0F       		.uleb128 0xf
 1388 00f2 05       		.uleb128 0x5
 1389 00f3 00       		.byte	0
 1390 00f4 03       		.uleb128 0x3
 1391 00f5 0E       		.uleb128 0xe
 1392 00f6 3A       		.uleb128 0x3a
 1393 00f7 0B       		.uleb128 0xb
 1394 00f8 3B       		.uleb128 0x3b
 1395 00f9 05       		.uleb128 0x5
 1396 00fa 49       		.uleb128 0x49
 1397 00fb 13       		.uleb128 0x13
 1398 00fc 02       		.uleb128 0x2
 1399 00fd 18       		.uleb128 0x18
 1400 00fe 00       		.byte	0
 1401 00ff 00       		.byte	0
 1402 0100 10       		.uleb128 0x10
 1403 0101 2E       		.uleb128 0x2e
 1404 0102 01       		.byte	0x1
 1405 0103 3F       		.uleb128 0x3f
 1406 0104 19       		.uleb128 0x19
 1407 0105 03       		.uleb128 0x3
 1408 0106 0E       		.uleb128 0xe
 1409 0107 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 34


 1410 0108 0B       		.uleb128 0xb
 1411 0109 3B       		.uleb128 0x3b
 1412 010a 05       		.uleb128 0x5
 1413 010b 27       		.uleb128 0x27
 1414 010c 19       		.uleb128 0x19
 1415 010d 11       		.uleb128 0x11
 1416 010e 01       		.uleb128 0x1
 1417 010f 12       		.uleb128 0x12
 1418 0110 06       		.uleb128 0x6
 1419 0111 40       		.uleb128 0x40
 1420 0112 18       		.uleb128 0x18
 1421 0113 9642     		.uleb128 0x2116
 1422 0115 19       		.uleb128 0x19
 1423 0116 01       		.uleb128 0x1
 1424 0117 13       		.uleb128 0x13
 1425 0118 00       		.byte	0
 1426 0119 00       		.byte	0
 1427 011a 11       		.uleb128 0x11
 1428 011b 34       		.uleb128 0x34
 1429 011c 00       		.byte	0
 1430 011d 03       		.uleb128 0x3
 1431 011e 0E       		.uleb128 0xe
 1432 011f 3A       		.uleb128 0x3a
 1433 0120 0B       		.uleb128 0xb
 1434 0121 3B       		.uleb128 0x3b
 1435 0122 05       		.uleb128 0x5
 1436 0123 49       		.uleb128 0x49
 1437 0124 13       		.uleb128 0x13
 1438 0125 02       		.uleb128 0x2
 1439 0126 18       		.uleb128 0x18
 1440 0127 00       		.byte	0
 1441 0128 00       		.byte	0
 1442 0129 00       		.byte	0
 1443              		.section	.debug_aranges,"",%progbits
 1444 0000 6C000000 		.4byte	0x6c
 1445 0004 0200     		.2byte	0x2
 1446 0006 00000000 		.4byte	.Ldebug_info0
 1447 000a 04       		.byte	0x4
 1448 000b 00       		.byte	0
 1449 000c 0000     		.2byte	0
 1450 000e 0000     		.2byte	0
 1451 0010 00000000 		.4byte	.LFB0
 1452 0014 34000000 		.4byte	.LFE0-.LFB0
 1453 0018 00000000 		.4byte	.LFB1
 1454 001c 34000000 		.4byte	.LFE1-.LFB1
 1455 0020 00000000 		.4byte	.LFB2
 1456 0024 B0000000 		.4byte	.LFE2-.LFB2
 1457 0028 00000000 		.4byte	.LFB3
 1458 002c 40000000 		.4byte	.LFE3-.LFB3
 1459 0030 00000000 		.4byte	.LFB4
 1460 0034 5C010000 		.4byte	.LFE4-.LFB4
 1461 0038 00000000 		.4byte	.LFB5
 1462 003c 18000000 		.4byte	.LFE5-.LFB5
 1463 0040 00000000 		.4byte	.LFB6
 1464 0044 34000000 		.4byte	.LFE6-.LFB6
 1465 0048 00000000 		.4byte	.LFB7
 1466 004c 34000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 35


 1467 0050 00000000 		.4byte	.LFB8
 1468 0054 20000000 		.4byte	.LFE8-.LFB8
 1469 0058 00000000 		.4byte	.LFB9
 1470 005c BC000000 		.4byte	.LFE9-.LFB9
 1471 0060 00000000 		.4byte	.LFB10
 1472 0064 20000000 		.4byte	.LFE10-.LFB10
 1473 0068 00000000 		.4byte	0
 1474 006c 00000000 		.4byte	0
 1475              		.section	.debug_ranges,"",%progbits
 1476              	.Ldebug_ranges0:
 1477 0000 00000000 		.4byte	.LFB0
 1478 0004 34000000 		.4byte	.LFE0
 1479 0008 00000000 		.4byte	.LFB1
 1480 000c 34000000 		.4byte	.LFE1
 1481 0010 00000000 		.4byte	.LFB2
 1482 0014 B0000000 		.4byte	.LFE2
 1483 0018 00000000 		.4byte	.LFB3
 1484 001c 40000000 		.4byte	.LFE3
 1485 0020 00000000 		.4byte	.LFB4
 1486 0024 5C010000 		.4byte	.LFE4
 1487 0028 00000000 		.4byte	.LFB5
 1488 002c 18000000 		.4byte	.LFE5
 1489 0030 00000000 		.4byte	.LFB6
 1490 0034 34000000 		.4byte	.LFE6
 1491 0038 00000000 		.4byte	.LFB7
 1492 003c 34000000 		.4byte	.LFE7
 1493 0040 00000000 		.4byte	.LFB8
 1494 0044 20000000 		.4byte	.LFE8
 1495 0048 00000000 		.4byte	.LFB9
 1496 004c BC000000 		.4byte	.LFE9
 1497 0050 00000000 		.4byte	.LFB10
 1498 0054 20000000 		.4byte	.LFE10
 1499 0058 00000000 		.4byte	0
 1500 005c 00000000 		.4byte	0
 1501              		.section	.debug_line,"",%progbits
 1502              	.Ldebug_line0:
 1503 0000 9F010000 		.section	.debug_str,"MS",%progbits,1
 1503      02004A00 
 1503      00000201 
 1503      FB0E0D00 
 1503      01010101 
 1504              	.LASF34:
 1505 0000 63757272 		.ascii	"currDiv\000"
 1505      44697600 
 1506              	.LASF15:
 1507 0008 72656731 		.ascii	"reg16\000"
 1507      3600
 1508              	.LASF2:
 1509 000e 73686F72 		.ascii	"short int\000"
 1509      7420696E 
 1509      7400
 1510              	.LASF19:
 1511 0018 54785F49 		.ascii	"Tx_IntClock_StandbyPower\000"
 1511      6E74436C 
 1511      6F636B5F 
 1511      5374616E 
 1511      64627950 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 36


 1512              	.LASF31:
 1513 0031 54785F49 		.ascii	"Tx_IntClock_GetModeRegister\000"
 1513      6E74436C 
 1513      6F636B5F 
 1513      4765744D 
 1513      6F646552 
 1514              	.LASF37:
 1515 004d 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1515      4320342E 
 1515      382E3420 
 1515      32303134 
 1515      30353236 
 1516 0080 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1516      20726576 
 1516      6973696F 
 1516      6E203231 
 1516      31333538 
 1517 00b3 30202D66 		.ascii	"0 -ffunction-sections\000"
 1517      66756E63 
 1517      74696F6E 
 1517      2D736563 
 1517      74696F6E 
 1518              	.LASF10:
 1519 00c9 75696E74 		.ascii	"uint16\000"
 1519      313600
 1520              	.LASF23:
 1521 00d0 72657374 		.ascii	"restart\000"
 1521      61727400 
 1522              	.LASF35:
 1523 00d8 6F6C6453 		.ascii	"oldSrc\000"
 1523      726300
 1524              	.LASF9:
 1525 00df 75696E74 		.ascii	"uint8\000"
 1525      3800
 1526              	.LASF22:
 1527 00e5 636C6B44 		.ascii	"clkDivider\000"
 1527      69766964 
 1527      657200
 1528              	.LASF18:
 1529 00f0 54785F49 		.ascii	"Tx_IntClock_StopBlock\000"
 1529      6E74436C 
 1529      6F636B5F 
 1529      53746F70 
 1529      426C6F63 
 1530              	.LASF11:
 1531 0106 666C6F61 		.ascii	"float\000"
 1531      7400
 1532              	.LASF6:
 1533 010c 6C6F6E67 		.ascii	"long long int\000"
 1533      206C6F6E 
 1533      6720696E 
 1533      7400
 1534              	.LASF4:
 1535 011a 6C6F6E67 		.ascii	"long int\000"
 1535      20696E74 
 1535      00
 1536              	.LASF21:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 37


 1537 0123 73746174 		.ascii	"state\000"
 1537      6500
 1538              	.LASF1:
 1539 0129 756E7369 		.ascii	"unsigned char\000"
 1539      676E6564 
 1539      20636861 
 1539      7200
 1540              	.LASF28:
 1541 0137 6D6F6465 		.ascii	"modeBitMask\000"
 1541      4269744D 
 1541      61736B00 
 1542              	.LASF30:
 1543 0143 54785F49 		.ascii	"Tx_IntClock_GetDividerRegister\000"
 1543      6E74436C 
 1543      6F636B5F 
 1543      47657444 
 1543      69766964 
 1544              	.LASF0:
 1545 0162 7369676E 		.ascii	"signed char\000"
 1545      65642063 
 1545      68617200 
 1546              	.LASF7:
 1547 016e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1547      206C6F6E 
 1547      6720756E 
 1547      7369676E 
 1547      65642069 
 1548              	.LASF8:
 1549 0185 756E7369 		.ascii	"unsigned int\000"
 1549      676E6564 
 1549      20696E74 
 1549      00
 1550              	.LASF36:
 1551 0192 54785F49 		.ascii	"Tx_IntClock_GetSourceRegister\000"
 1551      6E74436C 
 1551      6F636B5F 
 1551      47657453 
 1551      6F757263 
 1552              	.LASF38:
 1553 01b0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Tx_IntClock.c\000"
 1553      6E657261 
 1553      7465645F 
 1553      536F7572 
 1553      63655C50 
 1554              	.LASF3:
 1555 01d7 73686F72 		.ascii	"short unsigned int\000"
 1555      7420756E 
 1555      7369676E 
 1555      65642069 
 1555      6E7400
 1556              	.LASF13:
 1557 01ea 63686172 		.ascii	"char\000"
 1557      00
 1558              	.LASF33:
 1559 01ef 636C6B53 		.ascii	"clkSource\000"
 1559      6F757263 
 1559      6500
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 38


 1560              	.LASF26:
 1561 01f9 63757272 		.ascii	"currSrc\000"
 1561      53726300 
 1562              	.LASF24:
 1563 0201 6F6C6444 		.ascii	"oldDivider\000"
 1563      69766964 
 1563      657200
 1564              	.LASF16:
 1565 020c 54785F49 		.ascii	"Tx_IntClock_Start\000"
 1565      6E74436C 
 1565      6F636B5F 
 1565      53746172 
 1565      7400
 1566              	.LASF27:
 1567 021e 54785F49 		.ascii	"Tx_IntClock_SetModeRegister\000"
 1567      6E74436C 
 1567      6F636B5F 
 1567      5365744D 
 1567      6F646552 
 1568              	.LASF39:
 1569 023a 433A5C55 		.ascii	"C:\\Users\\Matthew Arbesfeld\\Documents\\PSoC Creat"
 1569      73657273 
 1569      5C4D6174 
 1569      74686577 
 1569      20417262 
 1570 0269 6F725C42 		.ascii	"or\\BoxesUART\\Boxes5.cydsn\000"
 1570      6F786573 
 1570      55415254 
 1570      5C426F78 
 1570      6573352E 
 1571              	.LASF14:
 1572 0283 72656738 		.ascii	"reg8\000"
 1572      00
 1573              	.LASF5:
 1574 0288 6C6F6E67 		.ascii	"long unsigned int\000"
 1574      20756E73 
 1574      69676E65 
 1574      6420696E 
 1574      7400
 1575              	.LASF12:
 1576 029a 646F7562 		.ascii	"double\000"
 1576      6C6500
 1577              	.LASF29:
 1578 02a1 54785F49 		.ascii	"Tx_IntClock_ClearModeRegister\000"
 1578      6E74436C 
 1578      6F636B5F 
 1578      436C6561 
 1578      724D6F64 
 1579              	.LASF25:
 1580 02bf 656E6162 		.ascii	"enabled\000"
 1580      6C656400 
 1581              	.LASF17:
 1582 02c7 54785F49 		.ascii	"Tx_IntClock_Stop\000"
 1582      6E74436C 
 1582      6F636B5F 
 1582      53746F70 
 1582      00
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\cc3gQk6r.s 			page 39


 1583              	.LASF32:
 1584 02d8 54785F49 		.ascii	"Tx_IntClock_SetSourceRegister\000"
 1584      6E74436C 
 1584      6F636B5F 
 1584      53657453 
 1584      6F757263 
 1585              	.LASF20:
 1586 02f6 54785F49 		.ascii	"Tx_IntClock_SetDividerRegister\000"
 1586      6E74436C 
 1586      6F636B5F 
 1586      53657444 
 1586      69766964 
 1587              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
