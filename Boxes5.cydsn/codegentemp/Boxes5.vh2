--
--	Conversion of Boxes5.v to vh2:
--
--	Cypress Semiconductor - WARP Version 6.3 IR 41
--	Sat Apr 25 23:26:33 2015
--

USE cypress.cypress.all;
USE cypress.rtlpkg.all;
ENTITY top_RTL IS
ATTRIBUTE part_name of top_RTL:TYPE IS "cpsoc3";
END top_RTL;
--------------------------------------------------------
ARCHITECTURE R_T_L OF top_RTL IS
SIGNAL \Tx:Net_9\ : bit;
SIGNAL \Tx:Net_61\ : bit;
SIGNAL one : bit;
SIGNAL \Tx:BUART:clock_op\ : bit;
SIGNAL \Tx:BUART:reset_reg\ : bit;
SIGNAL \Tx:BUART:tx_hd_send_break\ : bit;
SIGNAL \Tx:BUART:HalfDuplexSend\ : bit;
SIGNAL \Tx:BUART:FinalParityType_1\ : bit;
SIGNAL \Tx:BUART:FinalParityType_0\ : bit;
SIGNAL \Tx:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Tx:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Tx:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Tx:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Tx:BUART:reset_sr\ : bit;
SIGNAL \Tx:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_2 : bit;
SIGNAL \Tx:BUART:txn\ : bit;
SIGNAL Net_563 : bit;
SIGNAL \Tx:BUART:tx_interrupt_out\ : bit;
SIGNAL Net_564 : bit;
SIGNAL \Tx:BUART:tx_state_1\ : bit;
SIGNAL \Tx:BUART:tx_state_0\ : bit;
SIGNAL \Tx:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL zero : bit;
SIGNAL \Tx:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Tx:BUART:tx_shift_out\ : bit;
SIGNAL \Tx:BUART:tx_fifo_notfull\ : bit;
SIGNAL \Tx:BUART:tx_fifo_empty\ : bit;
SIGNAL \Tx:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Tx:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Tx:BUART:counter_load_not\ : bit;
SIGNAL \Tx:BUART:tx_state_2\ : bit;
SIGNAL \Tx:BUART:tx_bitclk_dp\ : bit;
SIGNAL \Tx:BUART:tx_counter_dp\ : bit;
SIGNAL \Tx:BUART:sc_out_7\ : bit;
SIGNAL \Tx:BUART:sc_out_6\ : bit;
SIGNAL \Tx:BUART:sc_out_5\ : bit;
SIGNAL \Tx:BUART:sc_out_4\ : bit;
SIGNAL \Tx:BUART:sc_out_3\ : bit;
SIGNAL \Tx:BUART:sc_out_2\ : bit;
SIGNAL \Tx:BUART:sc_out_1\ : bit;
SIGNAL \Tx:BUART:sc_out_0\ : bit;
SIGNAL \Tx:BUART:tx_counter_tc\ : bit;
SIGNAL \Tx:BUART:tx_status_6\ : bit;
SIGNAL \Tx:BUART:tx_status_5\ : bit;
SIGNAL \Tx:BUART:tx_status_4\ : bit;
SIGNAL \Tx:BUART:tx_status_0\ : bit;
SIGNAL \Tx:BUART:tx_status_1\ : bit;
SIGNAL \Tx:BUART:tx_status_2\ : bit;
SIGNAL \Tx:BUART:tx_status_3\ : bit;
SIGNAL Net_559 : bit;
SIGNAL \Tx:BUART:tx_bitclk\ : bit;
SIGNAL \Tx:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \Tx:BUART:tx_mark\ : bit;
SIGNAL \Tx:BUART:tx_parity_bit\ : bit;
SIGNAL \Rx_Right:Net_9\ : bit;
SIGNAL \Rx_Right:Net_61\ : bit;
SIGNAL \Rx_Right:BUART:clock_op\ : bit;
SIGNAL \Rx_Right:BUART:reset_reg\ : bit;
SIGNAL \Rx_Right:BUART:tx_hd_send_break\ : bit;
SIGNAL \Rx_Right:BUART:HalfDuplexSend\ : bit;
SIGNAL \Rx_Right:BUART:FinalParityType_1\ : bit;
SIGNAL \Rx_Right:BUART:FinalParityType_0\ : bit;
SIGNAL \Rx_Right:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Rx_Right:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Rx_Right:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Rx_Right:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Rx_Right:BUART:reset_sr\ : bit;
SIGNAL \Rx_Right:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_570 : bit;
SIGNAL \Rx_Right:BUART:txn\ : bit;
SIGNAL Net_576 : bit;
SIGNAL Net_577 : bit;
SIGNAL \Rx_Right:BUART:rx_interrupt_out\ : bit;
SIGNAL \Rx_Right:BUART:rx_addressmatch\ : bit;
SIGNAL \Rx_Right:BUART:rx_addressmatch1\ : bit;
SIGNAL \Rx_Right:BUART:rx_addressmatch2\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_1\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_0\ : bit;
SIGNAL \Rx_Right:BUART:rx_bitclk_enable\ : bit;
SIGNAL \Rx_Right:BUART:rx_postpoll\ : bit;
SIGNAL \Rx_Right:BUART:rx_load_fifo\ : bit;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:hd_shift_out\ : bit;
SIGNAL \Rx_Right:BUART:rx_fifonotempty\ : bit;
SIGNAL \Rx_Right:BUART:rx_fifofull\ : bit;
SIGNAL \Rx_Right:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \Rx_Right:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:rx_counter_load\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_3\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_2\ : bit;
SIGNAL \Rx_Right:BUART:rx_bitclk_pre\ : bit;
SIGNAL \Rx_Right:BUART:rx_count_2\ : bit;
SIGNAL \Rx_Right:BUART:rx_count_1\ : bit;
SIGNAL \Rx_Right:BUART:rx_count_0\ : bit;
SIGNAL \Rx_Right:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \Rx_Right:BUART:rx_count_6\ : bit;
SIGNAL \Rx_Right:BUART:rx_count_5\ : bit;
SIGNAL \Rx_Right:BUART:rx_count_4\ : bit;
SIGNAL \Rx_Right:BUART:rx_count_3\ : bit;
SIGNAL \Rx_Right:BUART:rx_count7_tc\ : bit;
SIGNAL \Rx_Right:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \Rx_Right:BUART:rx_bitclk\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \Rx_Right:BUART:rx_poll_bit1\ : bit;
SIGNAL \Rx_Right:BUART:rx_poll_bit2\ : bit;
SIGNAL \Rx_Right:BUART:pollingrange\ : bit;
SIGNAL \Rx_Right:BUART:pollcount_1\ : bit;
SIGNAL Net_575 : bit;
ATTRIBUTE soft of Net_575:SIGNAL IS '1';
SIGNAL add_vv_vv_MODGEN_1_1 : bit;
SIGNAL \Rx_Right:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_1_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_2 : bit;
SIGNAL cmp_vv_vv_MODGEN_3 : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:a_1\ : bit;
SIGNAL MODIN1_1 : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:a_0\ : bit;
SIGNAL MODIN1_0 : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:b_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:b_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:s_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:s_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:newa_1\ : bit;
SIGNAL MODIN2_1 : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:newa_0\ : bit;
SIGNAL MODIN2_0 : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_2:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\ : bit;
SIGNAL MODIN3_1 : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\ : bit;
SIGNAL MODIN3_0 : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Right:BUART:rx_status_0\ : bit;
SIGNAL \Rx_Right:BUART:rx_markspace_status\ : bit;
SIGNAL \Rx_Right:BUART:rx_status_1\ : bit;
SIGNAL \Rx_Right:BUART:rx_status_2\ : bit;
SIGNAL \Rx_Right:BUART:rx_parity_error_status\ : bit;
SIGNAL \Rx_Right:BUART:rx_status_3\ : bit;
SIGNAL \Rx_Right:BUART:rx_stop_bit_error\ : bit;
SIGNAL \Rx_Right:BUART:rx_status_4\ : bit;
SIGNAL \Rx_Right:BUART:rx_status_5\ : bit;
SIGNAL \Rx_Right:BUART:rx_status_6\ : bit;
SIGNAL \Rx_Right:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_571 : bit;
SIGNAL \Rx_Right:BUART:rx_markspace_pre\ : bit;
SIGNAL \Rx_Right:BUART:rx_parity_error_pre\ : bit;
SIGNAL \Rx_Right:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_4 : bit;
SIGNAL \Rx_Right:BUART:rx_address_detected\ : bit;
SIGNAL \Rx_Right:BUART:rx_last\ : bit;
SIGNAL \Rx_Right:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_5 : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newa_6\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newa_5\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newa_4\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newa_3\ : bit;
SIGNAL MODIN4_6 : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newa_2\ : bit;
SIGNAL MODIN4_5 : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newa_1\ : bit;
SIGNAL MODIN4_4 : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newa_0\ : bit;
SIGNAL MODIN4_3 : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newb_6\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newb_5\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newb_4\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newb_3\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newb_2\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:dataa_6\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:dataa_5\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:dataa_4\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:dataa_3\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:dataa_2\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:datab_6\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:datab_5\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:datab_4\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:datab_3\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:datab_2\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:lta_6\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:gta_6\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:lta_5\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:gta_5\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:lta_4\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:gta_4\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:lta_3\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:gta_3\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:lta_2\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:gta_2\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_4:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:newa_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:newb_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:dataa_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:datab_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:xeq\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:xneq\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:xlt\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:xlte\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:xgt\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:g1:a0:xgte\ : bit;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:lt\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:MODULE_5:lt\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:eq\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:MODULE_5:eq\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:gt\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:MODULE_5:gt\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:gte\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:MODULE_5:gte\:SIGNAL IS 2;
SIGNAL \Rx_Right:BUART:sRX:MODULE_5:lte\ : bit;
ATTRIBUTE port_state_att of \Rx_Right:BUART:sRX:MODULE_5:lte\:SIGNAL IS 2;
SIGNAL tmpOE__Tx_Pin_net_0 : bit;
SIGNAL tmpFB_0__Tx_Pin_net_0 : bit;
SIGNAL tmpIO_0__Tx_Pin_net_0 : bit;
TERMINAL tmpSIOVREF__Tx_Pin_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Tx_Pin_net_0 : bit;
SIGNAL Net_582 : bit;
SIGNAL tmpOE__Rx_Left_Pins_net_3 : bit;
SIGNAL tmpOE__Rx_Left_Pins_net_2 : bit;
SIGNAL tmpOE__Rx_Left_Pins_net_1 : bit;
SIGNAL tmpOE__Rx_Left_Pins_net_0 : bit;
SIGNAL Net_498_3 : bit;
SIGNAL Net_498_2 : bit;
SIGNAL Net_498_1 : bit;
SIGNAL Net_498_0 : bit;
SIGNAL tmpIO_3__Rx_Left_Pins_net_3 : bit;
SIGNAL tmpIO_3__Rx_Left_Pins_net_2 : bit;
SIGNAL tmpIO_3__Rx_Left_Pins_net_1 : bit;
SIGNAL tmpIO_3__Rx_Left_Pins_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_Left_Pins_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_Left_Pins_net_0 : bit;
SIGNAL Net_583 : bit;
ATTRIBUTE soft of Net_583:SIGNAL IS '1';
SIGNAL \Rx_Front:Net_9\ : bit;
SIGNAL \Rx_Front:Net_61\ : bit;
SIGNAL \Rx_Front:BUART:clock_op\ : bit;
SIGNAL \Rx_Front:BUART:reset_reg\ : bit;
SIGNAL \Rx_Front:BUART:tx_hd_send_break\ : bit;
SIGNAL \Rx_Front:BUART:HalfDuplexSend\ : bit;
SIGNAL \Rx_Front:BUART:FinalParityType_1\ : bit;
SIGNAL \Rx_Front:BUART:FinalParityType_0\ : bit;
SIGNAL \Rx_Front:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Rx_Front:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Rx_Front:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Rx_Front:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Rx_Front:BUART:reset_sr\ : bit;
SIGNAL \Rx_Front:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_585 : bit;
SIGNAL \Rx_Front:BUART:txn\ : bit;
SIGNAL Net_591 : bit;
SIGNAL Net_592 : bit;
SIGNAL \Rx_Front:BUART:rx_interrupt_out\ : bit;
SIGNAL \Rx_Front:BUART:rx_addressmatch\ : bit;
SIGNAL \Rx_Front:BUART:rx_addressmatch1\ : bit;
SIGNAL \Rx_Front:BUART:rx_addressmatch2\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_1\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_0\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk_enable\ : bit;
SIGNAL \Rx_Front:BUART:rx_postpoll\ : bit;
SIGNAL \Rx_Front:BUART:rx_load_fifo\ : bit;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:hd_shift_out\ : bit;
SIGNAL \Rx_Front:BUART:rx_fifonotempty\ : bit;
SIGNAL \Rx_Front:BUART:rx_fifofull\ : bit;
SIGNAL \Rx_Front:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \Rx_Front:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:rx_counter_load\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_3\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_2\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk_pre\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_2\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_1\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_0\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_6\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_5\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_4\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_3\ : bit;
SIGNAL \Rx_Front:BUART:rx_count7_tc\ : bit;
SIGNAL \Rx_Front:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \Rx_Front:BUART:rx_poll_bit1\ : bit;
SIGNAL \Rx_Front:BUART:rx_poll_bit2\ : bit;
SIGNAL \Rx_Front:BUART:pollingrange\ : bit;
SIGNAL \Rx_Front:BUART:pollcount_1\ : bit;
SIGNAL Net_590 : bit;
ATTRIBUTE soft of Net_590:SIGNAL IS '1';
SIGNAL add_vv_vv_MODGEN_6_1 : bit;
SIGNAL \Rx_Front:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_6_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_7 : bit;
SIGNAL cmp_vv_vv_MODGEN_8 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:a_1\ : bit;
SIGNAL MODIN5_1 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:a_0\ : bit;
SIGNAL MODIN5_0 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:b_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:b_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:s_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:s_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:newa_1\ : bit;
SIGNAL MODIN6_1 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:newa_0\ : bit;
SIGNAL MODIN6_0 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_7:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:newa_1\ : bit;
SIGNAL MODIN7_1 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:newa_0\ : bit;
SIGNAL MODIN7_0 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_0\ : bit;
SIGNAL \Rx_Front:BUART:rx_markspace_status\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_1\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_2\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_error_status\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_3\ : bit;
SIGNAL \Rx_Front:BUART:rx_stop_bit_error\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_4\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_5\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_6\ : bit;
SIGNAL \Rx_Front:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_586 : bit;
SIGNAL \Rx_Front:BUART:rx_markspace_pre\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_error_pre\ : bit;
SIGNAL \Rx_Front:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_9 : bit;
SIGNAL \Rx_Front:BUART:rx_address_detected\ : bit;
SIGNAL \Rx_Front:BUART:rx_last\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_10 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newa_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newa_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newa_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newa_3\ : bit;
SIGNAL MODIN8_6 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newa_2\ : bit;
SIGNAL MODIN8_5 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newa_1\ : bit;
SIGNAL MODIN8_4 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newa_0\ : bit;
SIGNAL MODIN8_3 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newb_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newb_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newb_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newb_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newb_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:dataa_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:dataa_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:dataa_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:dataa_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:dataa_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:datab_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:datab_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:datab_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:datab_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:datab_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:lta_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:gta_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:lta_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:gta_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:lta_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:gta_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:lta_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:gta_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:lta_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:gta_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_9:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:newa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:newb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:dataa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:datab_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:xeq\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:xneq\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:xlt\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:xlte\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:xgt\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:g1:a0:xgte\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:lt\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_10:lt\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:eq\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_10:eq\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:gt\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_10:gt\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:gte\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_10:gte\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:MODULE_10:lte\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_10:lte\:SIGNAL IS 2;
SIGNAL Net_719_2 : bit;
SIGNAL Net_719_1 : bit;
SIGNAL Net_719_0 : bit;
SIGNAL Net_719_3 : bit;
SIGNAL \Rx_Left:Net_9\ : bit;
SIGNAL \Rx_Left:Net_61\ : bit;
SIGNAL \Rx_Left:BUART:clock_op\ : bit;
SIGNAL \Rx_Left:BUART:reset_reg\ : bit;
SIGNAL \Rx_Left:BUART:tx_hd_send_break\ : bit;
SIGNAL \Rx_Left:BUART:HalfDuplexSend\ : bit;
SIGNAL \Rx_Left:BUART:FinalParityType_1\ : bit;
SIGNAL \Rx_Left:BUART:FinalParityType_0\ : bit;
SIGNAL \Rx_Left:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Rx_Left:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Rx_Left:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Rx_Left:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Rx_Left:BUART:reset_sr\ : bit;
SIGNAL \Rx_Left:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_598 : bit;
SIGNAL \Rx_Left:BUART:txn\ : bit;
SIGNAL Net_603 : bit;
SIGNAL \Rx_Left:BUART:rx_interrupt_out\ : bit;
SIGNAL \Rx_Left:BUART:rx_addressmatch\ : bit;
SIGNAL \Rx_Left:BUART:rx_addressmatch1\ : bit;
SIGNAL \Rx_Left:BUART:rx_addressmatch2\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_1\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_0\ : bit;
SIGNAL \Rx_Left:BUART:rx_bitclk_enable\ : bit;
SIGNAL \Rx_Left:BUART:rx_postpoll\ : bit;
SIGNAL \Rx_Left:BUART:rx_load_fifo\ : bit;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:hd_shift_out\ : bit;
SIGNAL \Rx_Left:BUART:rx_fifonotempty\ : bit;
SIGNAL \Rx_Left:BUART:rx_fifofull\ : bit;
SIGNAL \Rx_Left:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \Rx_Left:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:rx_counter_load\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_3\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_2\ : bit;
SIGNAL \Rx_Left:BUART:rx_bitclk_pre\ : bit;
SIGNAL \Rx_Left:BUART:rx_count_2\ : bit;
SIGNAL \Rx_Left:BUART:rx_count_1\ : bit;
SIGNAL \Rx_Left:BUART:rx_count_0\ : bit;
SIGNAL \Rx_Left:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \Rx_Left:BUART:rx_count_6\ : bit;
SIGNAL \Rx_Left:BUART:rx_count_5\ : bit;
SIGNAL \Rx_Left:BUART:rx_count_4\ : bit;
SIGNAL \Rx_Left:BUART:rx_count_3\ : bit;
SIGNAL \Rx_Left:BUART:rx_count7_tc\ : bit;
SIGNAL \Rx_Left:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \Rx_Left:BUART:rx_bitclk\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \Rx_Left:BUART:rx_poll_bit1\ : bit;
SIGNAL \Rx_Left:BUART:rx_poll_bit2\ : bit;
SIGNAL \Rx_Left:BUART:pollingrange\ : bit;
SIGNAL \Rx_Left:BUART:pollcount_1\ : bit;
SIGNAL add_vv_vv_MODGEN_11_1 : bit;
SIGNAL \Rx_Left:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_11_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_12 : bit;
SIGNAL cmp_vv_vv_MODGEN_13 : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:a_1\ : bit;
SIGNAL MODIN9_1 : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:a_0\ : bit;
SIGNAL MODIN9_0 : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:b_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:b_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:s_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:s_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_11:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:newa_1\ : bit;
SIGNAL MODIN10_1 : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:newa_0\ : bit;
SIGNAL MODIN10_0 : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_12:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:newa_1\ : bit;
SIGNAL MODIN11_1 : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:newa_0\ : bit;
SIGNAL MODIN11_0 : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:s23Poll:MODULE_13:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Left:BUART:rx_status_0\ : bit;
SIGNAL \Rx_Left:BUART:rx_markspace_status\ : bit;
SIGNAL \Rx_Left:BUART:rx_status_1\ : bit;
SIGNAL \Rx_Left:BUART:rx_status_2\ : bit;
SIGNAL \Rx_Left:BUART:rx_parity_error_status\ : bit;
SIGNAL \Rx_Left:BUART:rx_status_3\ : bit;
SIGNAL \Rx_Left:BUART:rx_stop_bit_error\ : bit;
SIGNAL \Rx_Left:BUART:rx_status_4\ : bit;
SIGNAL \Rx_Left:BUART:rx_status_5\ : bit;
SIGNAL \Rx_Left:BUART:rx_status_6\ : bit;
SIGNAL \Rx_Left:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_599 : bit;
SIGNAL \Rx_Left:BUART:rx_markspace_pre\ : bit;
SIGNAL \Rx_Left:BUART:rx_parity_error_pre\ : bit;
SIGNAL \Rx_Left:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_14 : bit;
SIGNAL \Rx_Left:BUART:rx_address_detected\ : bit;
SIGNAL \Rx_Left:BUART:rx_last\ : bit;
SIGNAL \Rx_Left:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_15 : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newa_6\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newa_5\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newa_4\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newa_3\ : bit;
SIGNAL MODIN12_6 : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newa_2\ : bit;
SIGNAL MODIN12_5 : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newa_1\ : bit;
SIGNAL MODIN12_4 : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newa_0\ : bit;
SIGNAL MODIN12_3 : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newb_6\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newb_5\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newb_4\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newb_3\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newb_2\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:dataa_6\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:dataa_5\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:dataa_4\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:dataa_3\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:dataa_2\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:datab_6\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:datab_5\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:datab_4\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:datab_3\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:datab_2\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:lta_6\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:gta_6\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:lta_5\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:gta_5\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:lta_4\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:gta_4\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:lta_3\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:gta_3\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:lta_2\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:gta_2\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_14:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:newa_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:newb_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:dataa_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:datab_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:xeq\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:xneq\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:xlt\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:xlte\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:xgt\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:g1:a0:xgte\ : bit;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:lt\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:MODULE_15:lt\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:eq\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:MODULE_15:eq\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:gt\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:MODULE_15:gt\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:gte\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:MODULE_15:gte\:SIGNAL IS 2;
SIGNAL \Rx_Left:BUART:sRX:MODULE_15:lte\ : bit;
ATTRIBUTE port_state_att of \Rx_Left:BUART:sRX:MODULE_15:lte\:SIGNAL IS 2;
SIGNAL Net_608 : bit;
SIGNAL \Rx_Back:Net_9\ : bit;
SIGNAL \Rx_Back:Net_61\ : bit;
SIGNAL \Rx_Back:BUART:clock_op\ : bit;
SIGNAL \Rx_Back:BUART:reset_reg\ : bit;
SIGNAL \Rx_Back:BUART:tx_hd_send_break\ : bit;
SIGNAL \Rx_Back:BUART:HalfDuplexSend\ : bit;
SIGNAL \Rx_Back:BUART:FinalParityType_1\ : bit;
SIGNAL \Rx_Back:BUART:FinalParityType_0\ : bit;
SIGNAL \Rx_Back:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Rx_Back:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Rx_Back:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Rx_Back:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Rx_Back:BUART:reset_sr\ : bit;
SIGNAL \Rx_Back:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_610 : bit;
SIGNAL \Rx_Back:BUART:txn\ : bit;
SIGNAL Net_616 : bit;
SIGNAL \Rx_Back:BUART:rx_interrupt_out\ : bit;
SIGNAL \Rx_Back:BUART:rx_addressmatch\ : bit;
SIGNAL \Rx_Back:BUART:rx_addressmatch1\ : bit;
SIGNAL \Rx_Back:BUART:rx_addressmatch2\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_1\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_0\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk_enable\ : bit;
SIGNAL \Rx_Back:BUART:rx_postpoll\ : bit;
SIGNAL \Rx_Back:BUART:rx_load_fifo\ : bit;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:hd_shift_out\ : bit;
SIGNAL \Rx_Back:BUART:rx_fifonotempty\ : bit;
SIGNAL \Rx_Back:BUART:rx_fifofull\ : bit;
SIGNAL \Rx_Back:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \Rx_Back:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:rx_counter_load\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_3\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_2\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk_pre\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_2\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_1\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_0\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_6\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_5\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_4\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_3\ : bit;
SIGNAL \Rx_Back:BUART:rx_count7_tc\ : bit;
SIGNAL \Rx_Back:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \Rx_Back:BUART:rx_poll_bit1\ : bit;
SIGNAL \Rx_Back:BUART:rx_poll_bit2\ : bit;
SIGNAL \Rx_Back:BUART:pollingrange\ : bit;
SIGNAL \Rx_Back:BUART:pollcount_1\ : bit;
SIGNAL Net_615 : bit;
ATTRIBUTE soft of Net_615:SIGNAL IS '1';
SIGNAL add_vv_vv_MODGEN_16_1 : bit;
SIGNAL \Rx_Back:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_16_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_17 : bit;
SIGNAL cmp_vv_vv_MODGEN_18 : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:a_1\ : bit;
SIGNAL MODIN13_1 : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:a_0\ : bit;
SIGNAL MODIN13_0 : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:b_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:b_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:s_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:s_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_16:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:newa_1\ : bit;
SIGNAL MODIN14_1 : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:newa_0\ : bit;
SIGNAL MODIN14_0 : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_17:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:newa_1\ : bit;
SIGNAL MODIN15_1 : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:newa_0\ : bit;
SIGNAL MODIN15_0 : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_18:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_0\ : bit;
SIGNAL \Rx_Back:BUART:rx_markspace_status\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_1\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_2\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_error_status\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_3\ : bit;
SIGNAL \Rx_Back:BUART:rx_stop_bit_error\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_4\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_5\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_6\ : bit;
SIGNAL \Rx_Back:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_611 : bit;
SIGNAL \Rx_Back:BUART:rx_markspace_pre\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_error_pre\ : bit;
SIGNAL \Rx_Back:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_19 : bit;
SIGNAL \Rx_Back:BUART:rx_address_detected\ : bit;
SIGNAL \Rx_Back:BUART:rx_last\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_20 : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newa_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newa_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newa_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newa_3\ : bit;
SIGNAL MODIN16_6 : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newa_2\ : bit;
SIGNAL MODIN16_5 : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newa_1\ : bit;
SIGNAL MODIN16_4 : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newa_0\ : bit;
SIGNAL MODIN16_3 : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newb_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newb_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newb_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newb_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newb_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:dataa_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:dataa_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:dataa_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:dataa_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:dataa_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:datab_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:datab_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:datab_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:datab_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:datab_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:lta_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:gta_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:lta_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:gta_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:lta_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:gta_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:lta_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:gta_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:lta_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:gta_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_19:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:newa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:newb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:dataa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:datab_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:xeq\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:xneq\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:xlt\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:xlte\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:xgt\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:g1:a0:xgte\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:lt\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_20:lt\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:eq\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_20:eq\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:gt\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_20:gt\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:gte\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_20:gte\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:MODULE_20:lte\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_20:lte\:SIGNAL IS 2;
SIGNAL tmpOE__Rx_Back_Pins_net_3 : bit;
SIGNAL tmpOE__Rx_Back_Pins_net_2 : bit;
SIGNAL tmpOE__Rx_Back_Pins_net_1 : bit;
SIGNAL tmpOE__Rx_Back_Pins_net_0 : bit;
SIGNAL Net_674_3 : bit;
SIGNAL Net_674_2 : bit;
SIGNAL Net_674_1 : bit;
SIGNAL Net_674_0 : bit;
SIGNAL tmpIO_3__Rx_Back_Pins_net_3 : bit;
SIGNAL tmpIO_3__Rx_Back_Pins_net_2 : bit;
SIGNAL tmpIO_3__Rx_Back_Pins_net_1 : bit;
SIGNAL tmpIO_3__Rx_Back_Pins_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_Back_Pins_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_Back_Pins_net_0 : bit;
SIGNAL \LCD:tmpOE__LCDPort_net_6\ : bit;
SIGNAL \LCD:tmpOE__LCDPort_net_5\ : bit;
SIGNAL \LCD:tmpOE__LCDPort_net_4\ : bit;
SIGNAL \LCD:tmpOE__LCDPort_net_3\ : bit;
SIGNAL \LCD:tmpOE__LCDPort_net_2\ : bit;
SIGNAL \LCD:tmpOE__LCDPort_net_1\ : bit;
SIGNAL \LCD:tmpOE__LCDPort_net_0\ : bit;
SIGNAL \LCD:tmpFB_6__LCDPort_net_6\ : bit;
SIGNAL \LCD:tmpFB_6__LCDPort_net_5\ : bit;
SIGNAL \LCD:tmpFB_6__LCDPort_net_4\ : bit;
SIGNAL \LCD:tmpFB_6__LCDPort_net_3\ : bit;
SIGNAL \LCD:tmpFB_6__LCDPort_net_2\ : bit;
SIGNAL \LCD:tmpFB_6__LCDPort_net_1\ : bit;
SIGNAL \LCD:tmpFB_6__LCDPort_net_0\ : bit;
SIGNAL \LCD:tmpIO_6__LCDPort_net_6\ : bit;
SIGNAL \LCD:tmpIO_6__LCDPort_net_5\ : bit;
SIGNAL \LCD:tmpIO_6__LCDPort_net_4\ : bit;
SIGNAL \LCD:tmpIO_6__LCDPort_net_3\ : bit;
SIGNAL \LCD:tmpIO_6__LCDPort_net_2\ : bit;
SIGNAL \LCD:tmpIO_6__LCDPort_net_1\ : bit;
SIGNAL \LCD:tmpIO_6__LCDPort_net_0\ : bit;
TERMINAL \LCD:tmpSIOVREF__LCDPort_net_0\ : bit;
SIGNAL \LCD:tmpINTERRUPT_0__LCDPort_net_0\ : bit;
SIGNAL tmpOE__Rx_Front_Pins_net_3 : bit;
SIGNAL tmpOE__Rx_Front_Pins_net_2 : bit;
SIGNAL tmpOE__Rx_Front_Pins_net_1 : bit;
SIGNAL tmpOE__Rx_Front_Pins_net_0 : bit;
SIGNAL tmpIO_3__Rx_Front_Pins_net_3 : bit;
SIGNAL tmpIO_3__Rx_Front_Pins_net_2 : bit;
SIGNAL tmpIO_3__Rx_Front_Pins_net_1 : bit;
SIGNAL tmpIO_3__Rx_Front_Pins_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_Front_Pins_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_Front_Pins_net_0 : bit;
SIGNAL Net_515_2 : bit;
SIGNAL Net_515_1 : bit;
SIGNAL Net_515_0 : bit;
SIGNAL Net_515_3 : bit;
SIGNAL tmpOE__Rx_Right_Pins_net_3 : bit;
SIGNAL tmpOE__Rx_Right_Pins_net_2 : bit;
SIGNAL tmpOE__Rx_Right_Pins_net_1 : bit;
SIGNAL tmpOE__Rx_Right_Pins_net_0 : bit;
SIGNAL tmpIO_3__Rx_Right_Pins_net_3 : bit;
SIGNAL tmpIO_3__Rx_Right_Pins_net_2 : bit;
SIGNAL tmpIO_3__Rx_Right_Pins_net_1 : bit;
SIGNAL tmpIO_3__Rx_Right_Pins_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_Right_Pins_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_Right_Pins_net_0 : bit;
SIGNAL tmpOE__LED_net_0 : bit;
SIGNAL tmpFB_0__LED_net_0 : bit;
SIGNAL tmpIO_0__LED_net_0 : bit;
TERMINAL tmpSIOVREF__LED_net_0 : bit;
SIGNAL tmpINTERRUPT_0__LED_net_0 : bit;
SIGNAL tmpOE__Button_net_0 : bit;
SIGNAL tmpFB_0__Button_net_0 : bit;
SIGNAL tmpIO_0__Button_net_0 : bit;
TERMINAL tmpSIOVREF__Button_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Button_net_0 : bit;
SIGNAL tmpOE__StartupLED_net_0 : bit;
SIGNAL tmpFB_0__StartupLED_net_0 : bit;
SIGNAL tmpIO_0__StartupLED_net_0 : bit;
TERMINAL tmpSIOVREF__StartupLED_net_0 : bit;
SIGNAL tmpINTERRUPT_0__StartupLED_net_0 : bit;
SIGNAL \Rx_Front_Register:status_7\ : bit;
SIGNAL \Rx_Front_Register:status_6\ : bit;
SIGNAL \Rx_Front_Register:status_5\ : bit;
SIGNAL \Rx_Front_Register:status_4\ : bit;
SIGNAL \Rx_Front_Register:status_3\ : bit;
SIGNAL \Rx_Front_Register:status_2\ : bit;
SIGNAL \Rx_Front_Register:status_1\ : bit;
SIGNAL \Rx_Front_Register:status_0\ : bit;
SIGNAL Clock : bit;
SIGNAL \Rx_Back_Register:status_7\ : bit;
SIGNAL \Rx_Back_Register:status_6\ : bit;
SIGNAL \Rx_Back_Register:status_5\ : bit;
SIGNAL \Rx_Back_Register:status_4\ : bit;
SIGNAL \Rx_Back_Register:status_3\ : bit;
SIGNAL \Rx_Back_Register:status_2\ : bit;
SIGNAL \Rx_Back_Register:status_1\ : bit;
SIGNAL \Rx_Back_Register:status_0\ : bit;
SIGNAL \Rx_Top:Net_9\ : bit;
SIGNAL \Rx_Top:Net_61\ : bit;
SIGNAL \Rx_Top:BUART:clock_op\ : bit;
SIGNAL \Rx_Top:BUART:reset_reg\ : bit;
SIGNAL \Rx_Top:BUART:tx_hd_send_break\ : bit;
SIGNAL \Rx_Top:BUART:HalfDuplexSend\ : bit;
SIGNAL \Rx_Top:BUART:FinalParityType_1\ : bit;
SIGNAL \Rx_Top:BUART:FinalParityType_0\ : bit;
SIGNAL \Rx_Top:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Rx_Top:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Rx_Top:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Rx_Top:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Rx_Top:BUART:reset_sr\ : bit;
SIGNAL \Rx_Top:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_810 : bit;
SIGNAL \Rx_Top:BUART:txn\ : bit;
SIGNAL Net_815 : bit;
SIGNAL Net_785 : bit;
SIGNAL \Rx_Top:BUART:rx_interrupt_out\ : bit;
SIGNAL \Rx_Top:BUART:rx_addressmatch\ : bit;
SIGNAL \Rx_Top:BUART:rx_addressmatch1\ : bit;
SIGNAL \Rx_Top:BUART:rx_addressmatch2\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_1\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_0\ : bit;
SIGNAL \Rx_Top:BUART:rx_bitclk_enable\ : bit;
SIGNAL \Rx_Top:BUART:rx_postpoll\ : bit;
SIGNAL \Rx_Top:BUART:rx_load_fifo\ : bit;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:hd_shift_out\ : bit;
SIGNAL \Rx_Top:BUART:rx_fifonotempty\ : bit;
SIGNAL \Rx_Top:BUART:rx_fifofull\ : bit;
SIGNAL \Rx_Top:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \Rx_Top:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:rx_counter_load\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_3\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_2\ : bit;
SIGNAL \Rx_Top:BUART:rx_bitclk_pre\ : bit;
SIGNAL \Rx_Top:BUART:rx_count_2\ : bit;
SIGNAL \Rx_Top:BUART:rx_count_1\ : bit;
SIGNAL \Rx_Top:BUART:rx_count_0\ : bit;
SIGNAL \Rx_Top:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \Rx_Top:BUART:rx_count_6\ : bit;
SIGNAL \Rx_Top:BUART:rx_count_5\ : bit;
SIGNAL \Rx_Top:BUART:rx_count_4\ : bit;
SIGNAL \Rx_Top:BUART:rx_count_3\ : bit;
SIGNAL \Rx_Top:BUART:rx_count7_tc\ : bit;
SIGNAL \Rx_Top:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \Rx_Top:BUART:rx_bitclk\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \Rx_Top:BUART:rx_poll_bit1\ : bit;
SIGNAL \Rx_Top:BUART:rx_poll_bit2\ : bit;
SIGNAL \Rx_Top:BUART:pollingrange\ : bit;
SIGNAL \Rx_Top:BUART:pollcount_1\ : bit;
SIGNAL Net_783 : bit;
ATTRIBUTE soft of Net_783:SIGNAL IS '1';
SIGNAL add_vv_vv_MODGEN_21_1 : bit;
SIGNAL \Rx_Top:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_21_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_22 : bit;
SIGNAL cmp_vv_vv_MODGEN_23 : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:a_1\ : bit;
SIGNAL MODIN17_1 : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:a_0\ : bit;
SIGNAL MODIN17_0 : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:b_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:b_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:s_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:s_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_21:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:newa_1\ : bit;
SIGNAL MODIN18_1 : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:newa_0\ : bit;
SIGNAL MODIN18_0 : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_22:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:newa_1\ : bit;
SIGNAL MODIN19_1 : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:newa_0\ : bit;
SIGNAL MODIN19_0 : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:s23Poll:MODULE_23:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Top:BUART:rx_status_0\ : bit;
SIGNAL \Rx_Top:BUART:rx_markspace_status\ : bit;
SIGNAL \Rx_Top:BUART:rx_status_1\ : bit;
SIGNAL \Rx_Top:BUART:rx_status_2\ : bit;
SIGNAL \Rx_Top:BUART:rx_parity_error_status\ : bit;
SIGNAL \Rx_Top:BUART:rx_status_3\ : bit;
SIGNAL \Rx_Top:BUART:rx_stop_bit_error\ : bit;
SIGNAL \Rx_Top:BUART:rx_status_4\ : bit;
SIGNAL \Rx_Top:BUART:rx_status_5\ : bit;
SIGNAL \Rx_Top:BUART:rx_status_6\ : bit;
SIGNAL \Rx_Top:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_811 : bit;
SIGNAL \Rx_Top:BUART:rx_markspace_pre\ : bit;
SIGNAL \Rx_Top:BUART:rx_parity_error_pre\ : bit;
SIGNAL \Rx_Top:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_24 : bit;
SIGNAL \Rx_Top:BUART:rx_address_detected\ : bit;
SIGNAL \Rx_Top:BUART:rx_last\ : bit;
SIGNAL \Rx_Top:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_25 : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newa_6\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newa_5\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newa_4\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newa_3\ : bit;
SIGNAL MODIN20_6 : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newa_2\ : bit;
SIGNAL MODIN20_5 : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newa_1\ : bit;
SIGNAL MODIN20_4 : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newa_0\ : bit;
SIGNAL MODIN20_3 : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newb_6\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newb_5\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newb_4\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newb_3\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newb_2\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:dataa_6\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:dataa_5\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:dataa_4\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:dataa_3\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:dataa_2\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:datab_6\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:datab_5\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:datab_4\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:datab_3\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:datab_2\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:lta_6\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:gta_6\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:lta_5\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:gta_5\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:lta_4\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:gta_4\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:lta_3\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:gta_3\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:lta_2\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:gta_2\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_24:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:newa_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:newb_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:dataa_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:datab_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:xeq\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:xneq\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:xlt\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:xlte\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:xgt\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:g1:a0:xgte\ : bit;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:lt\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:MODULE_25:lt\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:eq\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:MODULE_25:eq\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:gt\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:MODULE_25:gt\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:gte\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:MODULE_25:gte\:SIGNAL IS 2;
SIGNAL \Rx_Top:BUART:sRX:MODULE_25:lte\ : bit;
ATTRIBUTE port_state_att of \Rx_Top:BUART:sRX:MODULE_25:lte\:SIGNAL IS 2;
SIGNAL \Rx_Left_Register:status_7\ : bit;
SIGNAL \Rx_Left_Register:status_6\ : bit;
SIGNAL \Rx_Left_Register:status_5\ : bit;
SIGNAL \Rx_Left_Register:status_4\ : bit;
SIGNAL \Rx_Left_Register:status_3\ : bit;
SIGNAL \Rx_Left_Register:status_2\ : bit;
SIGNAL \Rx_Left_Register:status_1\ : bit;
SIGNAL \Rx_Left_Register:status_0\ : bit;
SIGNAL Net_790_2 : bit;
SIGNAL Net_790_1 : bit;
SIGNAL Net_790_0 : bit;
SIGNAL Net_790_3 : bit;
SIGNAL \Rx_Right_Register:status_7\ : bit;
SIGNAL \Rx_Right_Register:status_6\ : bit;
SIGNAL \Rx_Right_Register:status_5\ : bit;
SIGNAL \Rx_Right_Register:status_4\ : bit;
SIGNAL \Rx_Right_Register:status_3\ : bit;
SIGNAL \Rx_Right_Register:status_2\ : bit;
SIGNAL \Rx_Right_Register:status_1\ : bit;
SIGNAL \Rx_Right_Register:status_0\ : bit;
SIGNAL tmpOE__Rx_Top_Pins_net_3 : bit;
SIGNAL tmpOE__Rx_Top_Pins_net_2 : bit;
SIGNAL tmpOE__Rx_Top_Pins_net_1 : bit;
SIGNAL tmpOE__Rx_Top_Pins_net_0 : bit;
SIGNAL tmpIO_3__Rx_Top_Pins_net_3 : bit;
SIGNAL tmpIO_3__Rx_Top_Pins_net_2 : bit;
SIGNAL tmpIO_3__Rx_Top_Pins_net_1 : bit;
SIGNAL tmpIO_3__Rx_Top_Pins_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_Top_Pins_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_Top_Pins_net_0 : bit;
SIGNAL \Rx_Top_Register:status_7\ : bit;
SIGNAL \Rx_Top_Register:status_6\ : bit;
SIGNAL \Rx_Top_Register:status_5\ : bit;
SIGNAL \Rx_Top_Register:status_4\ : bit;
SIGNAL \Rx_Top_Register:status_3\ : bit;
SIGNAL \Rx_Top_Register:status_2\ : bit;
SIGNAL \Rx_Top_Register:status_1\ : bit;
SIGNAL \Rx_Top_Register:status_0\ : bit;
SIGNAL \Rx_Bottom:Net_9\ : bit;
SIGNAL \Rx_Bottom:Net_61\ : bit;
SIGNAL \Rx_Bottom:BUART:clock_op\ : bit;
SIGNAL \Rx_Bottom:BUART:reset_reg\ : bit;
SIGNAL \Rx_Bottom:BUART:tx_hd_send_break\ : bit;
SIGNAL \Rx_Bottom:BUART:HalfDuplexSend\ : bit;
SIGNAL \Rx_Bottom:BUART:FinalParityType_1\ : bit;
SIGNAL \Rx_Bottom:BUART:FinalParityType_0\ : bit;
SIGNAL \Rx_Bottom:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Rx_Bottom:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Rx_Bottom:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Rx_Bottom:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Rx_Bottom:BUART:reset_sr\ : bit;
SIGNAL \Rx_Bottom:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_863 : bit;
SIGNAL \Rx_Bottom:BUART:txn\ : bit;
SIGNAL Net_868 : bit;
SIGNAL Net_828 : bit;
SIGNAL \Rx_Bottom:BUART:rx_interrupt_out\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_addressmatch\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_addressmatch1\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_addressmatch2\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_1\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_0\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_bitclk_enable\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_postpoll\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_load_fifo\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:hd_shift_out\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_fifonotempty\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_fifofull\ : bit;
SIGNAL \Rx_Bottom:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \Rx_Bottom:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:rx_counter_load\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_3\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_2\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_bitclk_pre\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count_2\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count_1\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count_0\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count_6\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count_5\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count_4\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count_3\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count7_tc\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_bitclk\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_poll_bit1\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_poll_bit2\ : bit;
SIGNAL \Rx_Bottom:BUART:pollingrange\ : bit;
SIGNAL \Rx_Bottom:BUART:pollcount_1\ : bit;
SIGNAL Net_826 : bit;
ATTRIBUTE soft of Net_826:SIGNAL IS '1';
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:add_vv_vv_MODGEN_26_1\ : bit;
SIGNAL \Rx_Bottom:BUART:pollcount_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:add_vv_vv_MODGEN_26_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_27\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_28\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:a_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODIN21_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:a_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODIN21_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:b_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:b_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:s_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:s_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_26:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:newa_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODIN22_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:newa_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODIN22_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_27:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:newa_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODIN23_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:newa_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODIN23_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:s23Poll:MODULE_28:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_status_0\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_markspace_status\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_status_1\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_status_2\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_parity_error_status\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_status_3\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_stop_bit_error\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_status_4\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_status_5\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_status_6\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_864 : bit;
SIGNAL \Rx_Bottom:BUART:rx_markspace_pre\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_parity_error_pre\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_break_status\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:cmp_vv_vv_MODGEN_29\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_address_detected\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_last\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_parity_bit\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:cmp_vv_vv_MODGEN_30\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newa_6\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newa_5\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newa_4\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newa_3\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODIN24_6\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newa_2\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODIN24_5\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newa_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODIN24_4\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newa_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODIN24_3\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newb_6\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newb_5\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newb_4\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newb_3\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newb_2\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:dataa_6\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:dataa_5\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:dataa_4\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:dataa_3\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:dataa_2\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:datab_6\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:datab_5\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:datab_4\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:datab_3\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:datab_2\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:lta_6\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:gta_6\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:lta_5\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:gta_5\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:lta_4\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:gta_4\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:lta_3\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:gta_3\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:lta_2\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:gta_2\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_29:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:newa_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:newb_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:dataa_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:datab_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:xeq\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:xneq\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:xlt\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:xlte\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:xgt\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:g1:a0:xgte\ : bit;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:lt\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:MODULE_30:lt\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:eq\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:MODULE_30:eq\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:gt\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:MODULE_30:gt\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:gte\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:MODULE_30:gte\:SIGNAL IS 2;
SIGNAL \Rx_Bottom:BUART:sRX:MODULE_30:lte\ : bit;
ATTRIBUTE port_state_att of \Rx_Bottom:BUART:sRX:MODULE_30:lte\:SIGNAL IS 2;
SIGNAL Net_833_2 : bit;
SIGNAL Net_833_1 : bit;
SIGNAL Net_833_0 : bit;
SIGNAL Net_833_3 : bit;
SIGNAL tmpOE__Rx_Bottom_Pins_net_3 : bit;
SIGNAL tmpOE__Rx_Bottom_Pins_net_2 : bit;
SIGNAL tmpOE__Rx_Bottom_Pins_net_1 : bit;
SIGNAL tmpOE__Rx_Bottom_Pins_net_0 : bit;
SIGNAL tmpIO_3__Rx_Bottom_Pins_net_3 : bit;
SIGNAL tmpIO_3__Rx_Bottom_Pins_net_2 : bit;
SIGNAL tmpIO_3__Rx_Bottom_Pins_net_1 : bit;
SIGNAL tmpIO_3__Rx_Bottom_Pins_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_Bottom_Pins_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_Bottom_Pins_net_0 : bit;
SIGNAL \Rx_Bottom_Register:status_7\ : bit;
SIGNAL \Rx_Bottom_Register:status_6\ : bit;
SIGNAL \Rx_Bottom_Register:status_5\ : bit;
SIGNAL \Rx_Bottom_Register:status_4\ : bit;
SIGNAL \Rx_Bottom_Register:status_3\ : bit;
SIGNAL \Rx_Bottom_Register:status_2\ : bit;
SIGNAL \Rx_Bottom_Register:status_1\ : bit;
SIGNAL \Rx_Bottom_Register:status_0\ : bit;
SIGNAL \Tx:BUART:reset_reg\\D\ : bit;
SIGNAL \Tx:BUART:txn\\D\ : bit;
SIGNAL \Tx:BUART:tx_state_1\\D\ : bit;
SIGNAL \Tx:BUART:tx_state_0\\D\ : bit;
SIGNAL \Tx:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_559D : bit;
SIGNAL \Tx:BUART:tx_bitclk\\D\ : bit;
SIGNAL \Tx:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \Tx:BUART:tx_mark\\D\ : bit;
SIGNAL \Tx:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \Rx_Right:BUART:reset_reg\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_1\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_0\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_3\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_2\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_bitclk\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \Rx_Right:BUART:pollcount_1\\D\ : bit;
SIGNAL \Rx_Right:BUART:pollcount_0\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_break_status\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_address_detected\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_last\\D\ : bit;
SIGNAL \Rx_Right:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Rx_Front:BUART:reset_reg\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_1\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_0\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_3\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_2\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \Rx_Front:BUART:pollcount_1\\D\ : bit;
SIGNAL \Rx_Front:BUART:pollcount_0\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_break_status\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_address_detected\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_last\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Rx_Left:BUART:reset_reg\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_1\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_0\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_3\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_2\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_bitclk\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \Rx_Left:BUART:pollcount_1\\D\ : bit;
SIGNAL \Rx_Left:BUART:pollcount_0\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_break_status\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_address_detected\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_last\\D\ : bit;
SIGNAL \Rx_Left:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Rx_Back:BUART:reset_reg\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_1\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_0\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_3\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_2\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \Rx_Back:BUART:pollcount_1\\D\ : bit;
SIGNAL \Rx_Back:BUART:pollcount_0\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_break_status\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_address_detected\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_last\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Rx_Top:BUART:reset_reg\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_1\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_0\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_3\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_2\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_bitclk\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \Rx_Top:BUART:pollcount_1\\D\ : bit;
SIGNAL \Rx_Top:BUART:pollcount_0\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_break_status\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_address_detected\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_last\\D\ : bit;
SIGNAL \Rx_Top:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:reset_reg\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_1\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_0\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_3\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_2\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_bitclk\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:pollcount_1\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:pollcount_0\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_break_status\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_address_detected\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_last\\D\ : bit;
SIGNAL \Rx_Bottom:BUART:rx_parity_bit\\D\ : bit;
BEGIN

one <=  ('1') ;

Net_2 <= (not \Tx:BUART:txn\);

zero <=  ('0') ;

\Tx:BUART:counter_load_not\ <= ((not \Tx:BUART:tx_bitclk_enable_pre\ and \Tx:BUART:tx_state_2\)
	OR \Tx:BUART:tx_state_0\
	OR \Tx:BUART:tx_state_1\);

\Tx:BUART:tx_status_0\ <= ((not \Tx:BUART:tx_state_1\ and not \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_bitclk_enable_pre\ and \Tx:BUART:tx_fifo_empty\ and \Tx:BUART:tx_state_2\));

\Tx:BUART:tx_status_2\ <= (not \Tx:BUART:tx_fifo_notfull\);

Net_559D <= ((not \Tx:BUART:reset_reg\ and \Tx:BUART:tx_state_2\)
	OR (not \Tx:BUART:reset_reg\ and \Tx:BUART:tx_state_0\)
	OR (not \Tx:BUART:reset_reg\ and \Tx:BUART:tx_state_1\));

\Tx:BUART:tx_bitclk\\D\ <= ((not \Tx:BUART:tx_state_2\ and \Tx:BUART:tx_bitclk_enable_pre\)
	OR (\Tx:BUART:tx_state_0\ and \Tx:BUART:tx_bitclk_enable_pre\)
	OR (\Tx:BUART:tx_state_1\ and \Tx:BUART:tx_bitclk_enable_pre\));

\Tx:BUART:tx_mark\\D\ <= ((not \Tx:BUART:reset_reg\ and \Tx:BUART:tx_mark\));

\Tx:BUART:tx_state_2\\D\ <= ((not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_2\ and \Tx:BUART:tx_state_1\ and \Tx:BUART:tx_counter_dp\ and \Tx:BUART:tx_bitclk\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_2\ and \Tx:BUART:tx_state_1\ and \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_bitclk\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_1\ and \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_state_2\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_state_1\ and \Tx:BUART:tx_state_2\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_bitclk_enable_pre\ and \Tx:BUART:tx_state_2\));

\Tx:BUART:tx_state_1\\D\ <= ((not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_1\ and not \Tx:BUART:tx_state_2\ and \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_bitclk\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_2\ and not \Tx:BUART:tx_bitclk\ and \Tx:BUART:tx_state_1\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_bitclk_enable_pre\ and \Tx:BUART:tx_state_1\ and \Tx:BUART:tx_state_2\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_0\ and not \Tx:BUART:tx_counter_dp\ and \Tx:BUART:tx_state_1\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_state_1\ and \Tx:BUART:tx_state_2\));

\Tx:BUART:tx_state_0\\D\ <= ((not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_1\ and not \Tx:BUART:tx_fifo_empty\ and \Tx:BUART:tx_bitclk_enable_pre\ and \Tx:BUART:tx_state_2\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_1\ and not \Tx:BUART:tx_state_0\ and not \Tx:BUART:tx_fifo_empty\ and not \Tx:BUART:tx_state_2\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_bitclk_enable_pre\ and \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_state_2\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_2\ and not \Tx:BUART:tx_bitclk\ and \Tx:BUART:tx_state_0\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_fifo_empty\ and \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_state_2\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_1\ and \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_state_2\));

\Tx:BUART:txn\\D\ <= ((not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_0\ and not \Tx:BUART:tx_shift_out\ and not \Tx:BUART:tx_state_2\ and not \Tx:BUART:tx_counter_dp\ and \Tx:BUART:tx_state_1\ and \Tx:BUART:tx_bitclk\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_1\ and not \Tx:BUART:tx_state_2\ and not \Tx:BUART:tx_bitclk\ and \Tx:BUART:tx_state_0\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_state_1\ and not \Tx:BUART:tx_shift_out\ and not \Tx:BUART:tx_state_2\ and \Tx:BUART:tx_state_0\)
	OR (not \Tx:BUART:reset_reg\ and not \Tx:BUART:tx_bitclk\ and \Tx:BUART:txn\ and \Tx:BUART:tx_state_1\)
	OR (not \Tx:BUART:reset_reg\ and \Tx:BUART:txn\ and \Tx:BUART:tx_state_2\));

\Tx:BUART:tx_parity_bit\\D\ <= ((not \Tx:BUART:tx_state_0\ and \Tx:BUART:txn\ and \Tx:BUART:tx_parity_bit\)
	OR (not \Tx:BUART:tx_state_1\ and not \Tx:BUART:tx_state_0\ and \Tx:BUART:tx_parity_bit\)
	OR \Tx:BUART:tx_parity_bit\);

\Rx_Right:BUART:rx_counter_load\ <= ((not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_0\ and not \Rx_Right:BUART:rx_state_3\ and not \Rx_Right:BUART:rx_state_2\));

\Rx_Right:BUART:rx_bitclk_pre\ <= ((not \Rx_Right:BUART:rx_count_2\ and not \Rx_Right:BUART:rx_count_1\ and not \Rx_Right:BUART:rx_count_0\));

\Rx_Right:BUART:rx_state_stop1_reg\\D\ <= (not \Rx_Right:BUART:rx_state_2\
	OR not \Rx_Right:BUART:rx_state_3\
	OR \Rx_Right:BUART:rx_state_0\
	OR \Rx_Right:BUART:rx_state_1\);

\Rx_Right:BUART:pollcount_1\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_count_2\ and not \Rx_Right:BUART:rx_count_1\ and not MODIN1_1 and Net_575 and MODIN1_0)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_count_2\ and not \Rx_Right:BUART:rx_count_1\ and not MODIN1_0 and MODIN1_1)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_count_2\ and not \Rx_Right:BUART:rx_count_1\ and not Net_575 and MODIN1_1));

\Rx_Right:BUART:pollcount_0\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_count_2\ and not \Rx_Right:BUART:rx_count_1\ and not MODIN1_0 and Net_575)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_count_2\ and not \Rx_Right:BUART:rx_count_1\ and not Net_575 and MODIN1_0));

\Rx_Right:BUART:rx_postpoll\ <= ((Net_575 and MODIN1_0)
	OR MODIN1_1);

\Rx_Right:BUART:rx_status_4\ <= ((\Rx_Right:BUART:rx_load_fifo\ and \Rx_Right:BUART:rx_fifofull\));

\Rx_Right:BUART:rx_status_5\ <= ((\Rx_Right:BUART:rx_fifonotempty\ and \Rx_Right:BUART:rx_state_stop1_reg\));

\Rx_Right:BUART:rx_stop_bit_error\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_0\ and not MODIN1_1 and not MODIN1_0 and \Rx_Right:BUART:rx_bitclk_enable\ and \Rx_Right:BUART:rx_state_3\ and \Rx_Right:BUART:rx_state_2\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_0\ and not Net_575 and not MODIN1_1 and \Rx_Right:BUART:rx_bitclk_enable\ and \Rx_Right:BUART:rx_state_3\ and \Rx_Right:BUART:rx_state_2\));

\Rx_Right:BUART:rx_load_fifo\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_0\ and not \Rx_Right:BUART:rx_state_2\ and \Rx_Right:BUART:rx_bitclk_enable\ and \Rx_Right:BUART:rx_state_3\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_3\ and not \Rx_Right:BUART:rx_state_2\ and not MODIN4_6 and not MODIN4_4 and \Rx_Right:BUART:rx_state_0\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_3\ and not \Rx_Right:BUART:rx_state_2\ and not MODIN4_6 and not MODIN4_5 and \Rx_Right:BUART:rx_state_0\));

\Rx_Right:BUART:rx_state_3\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_2\ and not MODIN4_6 and not MODIN4_4 and \Rx_Right:BUART:rx_state_0\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_2\ and not MODIN4_6 and not MODIN4_5 and \Rx_Right:BUART:rx_state_0\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_bitclk_enable\ and \Rx_Right:BUART:rx_state_3\)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_1\ and \Rx_Right:BUART:rx_state_3\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_2\ and \Rx_Right:BUART:rx_state_3\)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_0\ and \Rx_Right:BUART:rx_state_3\));

\Rx_Right:BUART:rx_state_2\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_0\ and not \Rx_Right:BUART:rx_state_3\ and not \Rx_Right:BUART:rx_state_2\ and not Net_575 and \Rx_Right:BUART:rx_last\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_0\ and not \Rx_Right:BUART:rx_state_2\ and \Rx_Right:BUART:rx_bitclk_enable\ and \Rx_Right:BUART:rx_state_3\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_3\ and not MODIN4_6 and not MODIN4_4 and \Rx_Right:BUART:rx_state_0\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_3\ and not MODIN4_6 and not MODIN4_5 and \Rx_Right:BUART:rx_state_0\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_bitclk_enable\ and \Rx_Right:BUART:rx_state_2\)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_1\ and \Rx_Right:BUART:rx_state_2\)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_0\ and \Rx_Right:BUART:rx_state_2\));

\Rx_Right:BUART:rx_state_1\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_1\));

\Rx_Right:BUART:rx_state_0\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_3\ and not MODIN1_1 and not MODIN1_0 and \Rx_Right:BUART:rx_bitclk_enable\ and \Rx_Right:BUART:rx_state_2\)
	OR (not \Rx_Right:BUART:reset_reg\ and not \Rx_Right:BUART:rx_state_1\ and not \Rx_Right:BUART:rx_state_3\ and not Net_575 and not MODIN1_1 and \Rx_Right:BUART:rx_bitclk_enable\ and \Rx_Right:BUART:rx_state_2\)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_0\ and MODIN4_5 and MODIN4_4)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_0\ and MODIN4_6)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_0\ and \Rx_Right:BUART:rx_state_3\)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_1\ and \Rx_Right:BUART:rx_state_0\)
	OR (not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_state_0\ and \Rx_Right:BUART:rx_state_2\));

\Rx_Right:BUART:rx_last\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and Net_575));

\Rx_Right:BUART:rx_address_detected\\D\ <= ((not \Rx_Right:BUART:reset_reg\ and \Rx_Right:BUART:rx_address_detected\));

Net_583 <= (Net_498_0
	OR Net_498_1
	OR Net_498_2
	OR Net_498_3);

\Rx_Front:BUART:rx_counter_load\ <= ((not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not \Rx_Front:BUART:rx_state_3\ and not \Rx_Front:BUART:rx_state_2\));

\Rx_Front:BUART:rx_bitclk_pre\ <= ((not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not \Rx_Front:BUART:rx_count_0\));

\Rx_Front:BUART:rx_state_stop1_reg\\D\ <= (not \Rx_Front:BUART:rx_state_2\
	OR not \Rx_Front:BUART:rx_state_3\
	OR \Rx_Front:BUART:rx_state_0\
	OR \Rx_Front:BUART:rx_state_1\);

\Rx_Front:BUART:pollcount_1\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not MODIN5_1 and Net_590 and MODIN5_0)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not MODIN5_0 and MODIN5_1)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not Net_590 and MODIN5_1));

\Rx_Front:BUART:pollcount_0\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not MODIN5_0 and Net_590)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not Net_590 and MODIN5_0));

\Rx_Front:BUART:rx_postpoll\ <= ((Net_590 and MODIN5_0)
	OR MODIN5_1);

\Rx_Front:BUART:rx_status_4\ <= ((\Rx_Front:BUART:rx_load_fifo\ and \Rx_Front:BUART:rx_fifofull\));

\Rx_Front:BUART:rx_status_5\ <= ((\Rx_Front:BUART:rx_fifonotempty\ and \Rx_Front:BUART:rx_state_stop1_reg\));

\Rx_Front:BUART:rx_stop_bit_error\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not MODIN5_1 and not MODIN5_0 and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not Net_590 and not MODIN5_1 and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\ and \Rx_Front:BUART:rx_state_2\));

\Rx_Front:BUART:rx_load_fifo\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not \Rx_Front:BUART:rx_state_2\ and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not \Rx_Front:BUART:rx_state_2\ and not MODIN8_6 and not MODIN8_4 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not \Rx_Front:BUART:rx_state_2\ and not MODIN8_6 and not MODIN8_5 and \Rx_Front:BUART:rx_state_0\));

\Rx_Front:BUART:rx_state_3\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_2\ and not MODIN8_6 and not MODIN8_4 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_2\ and not MODIN8_6 and not MODIN8_5 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_1\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_2\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and \Rx_Front:BUART:rx_state_3\));

\Rx_Front:BUART:rx_state_2\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not \Rx_Front:BUART:rx_state_3\ and not \Rx_Front:BUART:rx_state_2\ and not Net_590 and \Rx_Front:BUART:rx_last\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not \Rx_Front:BUART:rx_state_2\ and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not MODIN8_6 and not MODIN8_4 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not MODIN8_6 and not MODIN8_5 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_1\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and \Rx_Front:BUART:rx_state_2\));

\Rx_Front:BUART:rx_state_1\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_1\));

\Rx_Front:BUART:rx_state_0\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not MODIN5_1 and not MODIN5_0 and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not Net_590 and not MODIN5_1 and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and MODIN8_5 and MODIN8_4)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and MODIN8_6)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_1\ and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and \Rx_Front:BUART:rx_state_2\));

\Rx_Front:BUART:rx_last\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and Net_590));

\Rx_Front:BUART:rx_address_detected\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_address_detected\));

Net_590 <= (Net_719_3
	OR Net_719_0
	OR Net_719_1
	OR Net_719_2);

\Rx_Left:BUART:rx_counter_load\ <= ((not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_0\ and not \Rx_Left:BUART:rx_state_3\ and not \Rx_Left:BUART:rx_state_2\));

\Rx_Left:BUART:rx_bitclk_pre\ <= ((not \Rx_Left:BUART:rx_count_2\ and not \Rx_Left:BUART:rx_count_1\ and not \Rx_Left:BUART:rx_count_0\));

\Rx_Left:BUART:rx_state_stop1_reg\\D\ <= (not \Rx_Left:BUART:rx_state_2\
	OR not \Rx_Left:BUART:rx_state_3\
	OR \Rx_Left:BUART:rx_state_0\
	OR \Rx_Left:BUART:rx_state_1\);

\Rx_Left:BUART:pollcount_1\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_count_2\ and not \Rx_Left:BUART:rx_count_1\ and not MODIN9_1 and Net_583 and MODIN9_0)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_count_2\ and not \Rx_Left:BUART:rx_count_1\ and not MODIN9_0 and MODIN9_1)
	OR (not Net_583 and not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_count_2\ and not \Rx_Left:BUART:rx_count_1\ and MODIN9_1));

\Rx_Left:BUART:pollcount_0\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_count_2\ and not \Rx_Left:BUART:rx_count_1\ and not MODIN9_0 and Net_583)
	OR (not Net_583 and not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_count_2\ and not \Rx_Left:BUART:rx_count_1\ and MODIN9_0));

\Rx_Left:BUART:rx_postpoll\ <= ((Net_583 and MODIN9_0)
	OR MODIN9_1);

\Rx_Left:BUART:rx_status_4\ <= ((\Rx_Left:BUART:rx_load_fifo\ and \Rx_Left:BUART:rx_fifofull\));

\Rx_Left:BUART:rx_status_5\ <= ((\Rx_Left:BUART:rx_fifonotempty\ and \Rx_Left:BUART:rx_state_stop1_reg\));

\Rx_Left:BUART:rx_stop_bit_error\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_0\ and not MODIN9_1 and not MODIN9_0 and \Rx_Left:BUART:rx_bitclk_enable\ and \Rx_Left:BUART:rx_state_3\ and \Rx_Left:BUART:rx_state_2\)
	OR (not Net_583 and not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_0\ and not MODIN9_1 and \Rx_Left:BUART:rx_bitclk_enable\ and \Rx_Left:BUART:rx_state_3\ and \Rx_Left:BUART:rx_state_2\));

\Rx_Left:BUART:rx_load_fifo\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_0\ and not \Rx_Left:BUART:rx_state_2\ and \Rx_Left:BUART:rx_bitclk_enable\ and \Rx_Left:BUART:rx_state_3\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_3\ and not \Rx_Left:BUART:rx_state_2\ and not MODIN12_6 and not MODIN12_4 and \Rx_Left:BUART:rx_state_0\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_3\ and not \Rx_Left:BUART:rx_state_2\ and not MODIN12_6 and not MODIN12_5 and \Rx_Left:BUART:rx_state_0\));

\Rx_Left:BUART:rx_state_3\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_2\ and not MODIN12_6 and not MODIN12_4 and \Rx_Left:BUART:rx_state_0\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_2\ and not MODIN12_6 and not MODIN12_5 and \Rx_Left:BUART:rx_state_0\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_bitclk_enable\ and \Rx_Left:BUART:rx_state_3\)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_1\ and \Rx_Left:BUART:rx_state_3\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_2\ and \Rx_Left:BUART:rx_state_3\)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_0\ and \Rx_Left:BUART:rx_state_3\));

\Rx_Left:BUART:rx_state_2\\D\ <= ((not Net_583 and not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_0\ and not \Rx_Left:BUART:rx_state_3\ and not \Rx_Left:BUART:rx_state_2\ and \Rx_Left:BUART:rx_last\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_0\ and not \Rx_Left:BUART:rx_state_2\ and \Rx_Left:BUART:rx_bitclk_enable\ and \Rx_Left:BUART:rx_state_3\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_3\ and not MODIN12_6 and not MODIN12_4 and \Rx_Left:BUART:rx_state_0\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_3\ and not MODIN12_6 and not MODIN12_5 and \Rx_Left:BUART:rx_state_0\)
	OR (not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_bitclk_enable\ and \Rx_Left:BUART:rx_state_2\)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_1\ and \Rx_Left:BUART:rx_state_2\)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_0\ and \Rx_Left:BUART:rx_state_2\));

\Rx_Left:BUART:rx_state_1\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_1\));

\Rx_Left:BUART:rx_state_0\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_3\ and not MODIN9_1 and not MODIN9_0 and \Rx_Left:BUART:rx_bitclk_enable\ and \Rx_Left:BUART:rx_state_2\)
	OR (not Net_583 and not \Rx_Left:BUART:reset_reg\ and not \Rx_Left:BUART:rx_state_1\ and not \Rx_Left:BUART:rx_state_3\ and not MODIN9_1 and \Rx_Left:BUART:rx_bitclk_enable\ and \Rx_Left:BUART:rx_state_2\)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_0\ and MODIN12_5 and MODIN12_4)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_0\ and MODIN12_6)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_0\ and \Rx_Left:BUART:rx_state_3\)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_1\ and \Rx_Left:BUART:rx_state_0\)
	OR (not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_state_0\ and \Rx_Left:BUART:rx_state_2\));

\Rx_Left:BUART:rx_last\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and Net_583));

\Rx_Left:BUART:rx_address_detected\\D\ <= ((not \Rx_Left:BUART:reset_reg\ and \Rx_Left:BUART:rx_address_detected\));

\Rx_Back:BUART:rx_counter_load\ <= ((not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_state_2\));

\Rx_Back:BUART:rx_bitclk_pre\ <= ((not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not \Rx_Back:BUART:rx_count_0\));

\Rx_Back:BUART:rx_state_stop1_reg\\D\ <= (not \Rx_Back:BUART:rx_state_2\
	OR not \Rx_Back:BUART:rx_state_3\
	OR \Rx_Back:BUART:rx_state_0\
	OR \Rx_Back:BUART:rx_state_1\);

\Rx_Back:BUART:pollcount_1\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not MODIN13_1 and Net_615 and MODIN13_0)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not MODIN13_0 and MODIN13_1)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not Net_615 and MODIN13_1));

\Rx_Back:BUART:pollcount_0\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not MODIN13_0 and Net_615)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not Net_615 and MODIN13_0));

\Rx_Back:BUART:rx_postpoll\ <= ((Net_615 and MODIN13_0)
	OR MODIN13_1);

\Rx_Back:BUART:rx_status_4\ <= ((\Rx_Back:BUART:rx_load_fifo\ and \Rx_Back:BUART:rx_fifofull\));

\Rx_Back:BUART:rx_status_5\ <= ((\Rx_Back:BUART:rx_fifonotempty\ and \Rx_Back:BUART:rx_state_stop1_reg\));

\Rx_Back:BUART:rx_stop_bit_error\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not MODIN13_1 and not MODIN13_0 and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\ and \Rx_Back:BUART:rx_state_2\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not Net_615 and not MODIN13_1 and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\ and \Rx_Back:BUART:rx_state_2\));

\Rx_Back:BUART:rx_load_fifo\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:rx_state_2\ and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_state_2\ and not MODIN16_6 and not MODIN16_4 and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_state_2\ and not MODIN16_6 and not MODIN16_5 and \Rx_Back:BUART:rx_state_0\));

\Rx_Back:BUART:rx_state_3\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_2\ and not MODIN16_6 and not MODIN16_4 and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_2\ and not MODIN16_6 and not MODIN16_5 and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_1\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_2\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_state_3\));

\Rx_Back:BUART:rx_state_2\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_state_2\ and not Net_615 and \Rx_Back:BUART:rx_last\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:rx_state_2\ and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not MODIN16_6 and not MODIN16_4 and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not MODIN16_6 and not MODIN16_5 and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_2\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_1\ and \Rx_Back:BUART:rx_state_2\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_state_2\));

\Rx_Back:BUART:rx_state_1\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_1\));

\Rx_Back:BUART:rx_state_0\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not MODIN13_1 and not MODIN13_0 and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_2\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not Net_615 and not MODIN13_1 and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_2\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and MODIN16_5 and MODIN16_4)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and MODIN16_6)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_1\ and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_state_2\));

\Rx_Back:BUART:rx_last\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and Net_615));

\Rx_Back:BUART:rx_address_detected\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_address_detected\));

Net_615 <= (Net_674_0
	OR Net_674_1
	OR Net_674_2
	OR Net_674_3);

Net_575 <= (Net_515_3
	OR Net_515_0
	OR Net_515_1
	OR Net_515_2);

\Rx_Top:BUART:rx_counter_load\ <= ((not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_0\ and not \Rx_Top:BUART:rx_state_3\ and not \Rx_Top:BUART:rx_state_2\));

\Rx_Top:BUART:rx_bitclk_pre\ <= ((not \Rx_Top:BUART:rx_count_2\ and not \Rx_Top:BUART:rx_count_1\ and not \Rx_Top:BUART:rx_count_0\));

\Rx_Top:BUART:rx_state_stop1_reg\\D\ <= (not \Rx_Top:BUART:rx_state_2\
	OR not \Rx_Top:BUART:rx_state_3\
	OR \Rx_Top:BUART:rx_state_0\
	OR \Rx_Top:BUART:rx_state_1\);

\Rx_Top:BUART:pollcount_1\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_count_2\ and not \Rx_Top:BUART:rx_count_1\ and not MODIN17_1 and Net_783 and MODIN17_0)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_count_2\ and not \Rx_Top:BUART:rx_count_1\ and not MODIN17_0 and MODIN17_1)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_count_2\ and not \Rx_Top:BUART:rx_count_1\ and not Net_783 and MODIN17_1));

\Rx_Top:BUART:pollcount_0\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_count_2\ and not \Rx_Top:BUART:rx_count_1\ and not MODIN17_0 and Net_783)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_count_2\ and not \Rx_Top:BUART:rx_count_1\ and not Net_783 and MODIN17_0));

\Rx_Top:BUART:rx_postpoll\ <= ((Net_783 and MODIN17_0)
	OR MODIN17_1);

\Rx_Top:BUART:rx_status_4\ <= ((\Rx_Top:BUART:rx_load_fifo\ and \Rx_Top:BUART:rx_fifofull\));

\Rx_Top:BUART:rx_status_5\ <= ((\Rx_Top:BUART:rx_fifonotempty\ and \Rx_Top:BUART:rx_state_stop1_reg\));

\Rx_Top:BUART:rx_stop_bit_error\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_0\ and not MODIN17_1 and not MODIN17_0 and \Rx_Top:BUART:rx_bitclk_enable\ and \Rx_Top:BUART:rx_state_3\ and \Rx_Top:BUART:rx_state_2\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_0\ and not Net_783 and not MODIN17_1 and \Rx_Top:BUART:rx_bitclk_enable\ and \Rx_Top:BUART:rx_state_3\ and \Rx_Top:BUART:rx_state_2\));

\Rx_Top:BUART:rx_load_fifo\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_0\ and not \Rx_Top:BUART:rx_state_2\ and \Rx_Top:BUART:rx_bitclk_enable\ and \Rx_Top:BUART:rx_state_3\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_3\ and not \Rx_Top:BUART:rx_state_2\ and not MODIN20_6 and not MODIN20_4 and \Rx_Top:BUART:rx_state_0\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_3\ and not \Rx_Top:BUART:rx_state_2\ and not MODIN20_6 and not MODIN20_5 and \Rx_Top:BUART:rx_state_0\));

\Rx_Top:BUART:rx_state_3\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_2\ and not MODIN20_6 and not MODIN20_4 and \Rx_Top:BUART:rx_state_0\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_2\ and not MODIN20_6 and not MODIN20_5 and \Rx_Top:BUART:rx_state_0\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_bitclk_enable\ and \Rx_Top:BUART:rx_state_3\)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_1\ and \Rx_Top:BUART:rx_state_3\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_2\ and \Rx_Top:BUART:rx_state_3\)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_0\ and \Rx_Top:BUART:rx_state_3\));

\Rx_Top:BUART:rx_state_2\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_0\ and not \Rx_Top:BUART:rx_state_3\ and not \Rx_Top:BUART:rx_state_2\ and not Net_783 and \Rx_Top:BUART:rx_last\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_0\ and not \Rx_Top:BUART:rx_state_2\ and \Rx_Top:BUART:rx_bitclk_enable\ and \Rx_Top:BUART:rx_state_3\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_3\ and not MODIN20_6 and not MODIN20_4 and \Rx_Top:BUART:rx_state_0\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_3\ and not MODIN20_6 and not MODIN20_5 and \Rx_Top:BUART:rx_state_0\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_bitclk_enable\ and \Rx_Top:BUART:rx_state_2\)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_1\ and \Rx_Top:BUART:rx_state_2\)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_0\ and \Rx_Top:BUART:rx_state_2\));

\Rx_Top:BUART:rx_state_1\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_1\));

\Rx_Top:BUART:rx_state_0\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_3\ and not MODIN17_1 and not MODIN17_0 and \Rx_Top:BUART:rx_bitclk_enable\ and \Rx_Top:BUART:rx_state_2\)
	OR (not \Rx_Top:BUART:reset_reg\ and not \Rx_Top:BUART:rx_state_1\ and not \Rx_Top:BUART:rx_state_3\ and not Net_783 and not MODIN17_1 and \Rx_Top:BUART:rx_bitclk_enable\ and \Rx_Top:BUART:rx_state_2\)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_0\ and MODIN20_5 and MODIN20_4)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_0\ and MODIN20_6)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_0\ and \Rx_Top:BUART:rx_state_3\)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_1\ and \Rx_Top:BUART:rx_state_0\)
	OR (not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_state_0\ and \Rx_Top:BUART:rx_state_2\));

\Rx_Top:BUART:rx_last\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and Net_783));

\Rx_Top:BUART:rx_address_detected\\D\ <= ((not \Rx_Top:BUART:reset_reg\ and \Rx_Top:BUART:rx_address_detected\));

Net_783 <= (Net_790_3
	OR Net_790_0
	OR Net_790_1
	OR Net_790_2);

\Rx_Bottom:BUART:rx_counter_load\ <= ((not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_0\ and not \Rx_Bottom:BUART:rx_state_3\ and not \Rx_Bottom:BUART:rx_state_2\));

\Rx_Bottom:BUART:rx_bitclk_pre\ <= ((not \Rx_Bottom:BUART:rx_count_2\ and not \Rx_Bottom:BUART:rx_count_1\ and not \Rx_Bottom:BUART:rx_count_0\));

\Rx_Bottom:BUART:rx_state_stop1_reg\\D\ <= (not \Rx_Bottom:BUART:rx_state_2\
	OR not \Rx_Bottom:BUART:rx_state_3\
	OR \Rx_Bottom:BUART:rx_state_0\
	OR \Rx_Bottom:BUART:rx_state_1\);

\Rx_Bottom:BUART:pollcount_1\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_count_2\ and not \Rx_Bottom:BUART:rx_count_1\ and not \Rx_Bottom:BUART:pollcount_1\ and Net_826 and \Rx_Bottom:BUART:pollcount_0\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_count_2\ and not \Rx_Bottom:BUART:rx_count_1\ and not \Rx_Bottom:BUART:pollcount_0\ and \Rx_Bottom:BUART:pollcount_1\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_count_2\ and not \Rx_Bottom:BUART:rx_count_1\ and not Net_826 and \Rx_Bottom:BUART:pollcount_1\));

\Rx_Bottom:BUART:pollcount_0\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_count_2\ and not \Rx_Bottom:BUART:rx_count_1\ and not \Rx_Bottom:BUART:pollcount_0\ and Net_826)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_count_2\ and not \Rx_Bottom:BUART:rx_count_1\ and not Net_826 and \Rx_Bottom:BUART:pollcount_0\));

\Rx_Bottom:BUART:rx_postpoll\ <= ((Net_826 and \Rx_Bottom:BUART:pollcount_0\)
	OR \Rx_Bottom:BUART:pollcount_1\);

\Rx_Bottom:BUART:rx_status_4\ <= ((\Rx_Bottom:BUART:rx_load_fifo\ and \Rx_Bottom:BUART:rx_fifofull\));

\Rx_Bottom:BUART:rx_status_5\ <= ((\Rx_Bottom:BUART:rx_fifonotempty\ and \Rx_Bottom:BUART:rx_state_stop1_reg\));

\Rx_Bottom:BUART:rx_stop_bit_error\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_0\ and not \Rx_Bottom:BUART:pollcount_1\ and not \Rx_Bottom:BUART:pollcount_0\ and \Rx_Bottom:BUART:rx_bitclk_enable\ and \Rx_Bottom:BUART:rx_state_3\ and \Rx_Bottom:BUART:rx_state_2\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_0\ and not \Rx_Bottom:BUART:pollcount_1\ and not Net_826 and \Rx_Bottom:BUART:rx_bitclk_enable\ and \Rx_Bottom:BUART:rx_state_3\ and \Rx_Bottom:BUART:rx_state_2\));

\Rx_Bottom:BUART:rx_load_fifo\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_0\ and not \Rx_Bottom:BUART:rx_state_2\ and \Rx_Bottom:BUART:rx_bitclk_enable\ and \Rx_Bottom:BUART:rx_state_3\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_3\ and not \Rx_Bottom:BUART:rx_state_2\ and not \Rx_Bottom:BUART:rx_count_6\ and not \Rx_Bottom:BUART:rx_count_4\ and \Rx_Bottom:BUART:rx_state_0\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_3\ and not \Rx_Bottom:BUART:rx_state_2\ and not \Rx_Bottom:BUART:rx_count_6\ and not \Rx_Bottom:BUART:rx_count_5\ and \Rx_Bottom:BUART:rx_state_0\));

\Rx_Bottom:BUART:rx_state_3\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_2\ and not \Rx_Bottom:BUART:rx_count_6\ and not \Rx_Bottom:BUART:rx_count_4\ and \Rx_Bottom:BUART:rx_state_0\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_2\ and not \Rx_Bottom:BUART:rx_count_6\ and not \Rx_Bottom:BUART:rx_count_5\ and \Rx_Bottom:BUART:rx_state_0\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_bitclk_enable\ and \Rx_Bottom:BUART:rx_state_3\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_1\ and \Rx_Bottom:BUART:rx_state_3\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_2\ and \Rx_Bottom:BUART:rx_state_3\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_0\ and \Rx_Bottom:BUART:rx_state_3\));

\Rx_Bottom:BUART:rx_state_2\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_0\ and not \Rx_Bottom:BUART:rx_state_3\ and not \Rx_Bottom:BUART:rx_state_2\ and not Net_826 and \Rx_Bottom:BUART:rx_last\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_0\ and not \Rx_Bottom:BUART:rx_state_2\ and \Rx_Bottom:BUART:rx_bitclk_enable\ and \Rx_Bottom:BUART:rx_state_3\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_3\ and not \Rx_Bottom:BUART:rx_count_6\ and not \Rx_Bottom:BUART:rx_count_4\ and \Rx_Bottom:BUART:rx_state_0\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_3\ and not \Rx_Bottom:BUART:rx_count_6\ and not \Rx_Bottom:BUART:rx_count_5\ and \Rx_Bottom:BUART:rx_state_0\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_bitclk_enable\ and \Rx_Bottom:BUART:rx_state_2\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_1\ and \Rx_Bottom:BUART:rx_state_2\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_0\ and \Rx_Bottom:BUART:rx_state_2\));

\Rx_Bottom:BUART:rx_state_1\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_1\));

\Rx_Bottom:BUART:rx_state_0\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_3\ and not \Rx_Bottom:BUART:pollcount_1\ and not \Rx_Bottom:BUART:pollcount_0\ and \Rx_Bottom:BUART:rx_bitclk_enable\ and \Rx_Bottom:BUART:rx_state_2\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and not \Rx_Bottom:BUART:rx_state_1\ and not \Rx_Bottom:BUART:rx_state_3\ and not \Rx_Bottom:BUART:pollcount_1\ and not Net_826 and \Rx_Bottom:BUART:rx_bitclk_enable\ and \Rx_Bottom:BUART:rx_state_2\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_0\ and \Rx_Bottom:BUART:rx_count_5\ and \Rx_Bottom:BUART:rx_count_4\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_0\ and \Rx_Bottom:BUART:rx_count_6\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_0\ and \Rx_Bottom:BUART:rx_state_3\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_1\ and \Rx_Bottom:BUART:rx_state_0\)
	OR (not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_state_0\ and \Rx_Bottom:BUART:rx_state_2\));

\Rx_Bottom:BUART:rx_last\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and Net_826));

\Rx_Bottom:BUART:rx_address_detected\\D\ <= ((not \Rx_Bottom:BUART:reset_reg\ and \Rx_Bottom:BUART:rx_address_detected\));

Net_826 <= (Net_833_3
	OR Net_833_0
	OR Net_833_1
	OR Net_833_2);

\Tx:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"b0162966-0060-4af5-82d1-fcb491ad7619/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"1085069444.44444",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Tx:Net_9\,
		dig_domain_out=>open);
\Tx:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Tx:Net_9\,
		enable=>one,
		clock_out=>\Tx:BUART:clock_op\);
\Tx:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Tx:BUART:reset_reg\,
		clk=>\Tx:BUART:clock_op\,
		cs_addr=>(\Tx:BUART:tx_state_1\, \Tx:BUART:tx_state_0\, \Tx:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Tx:BUART:tx_shift_out\,
		f0_bus_stat=>\Tx:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\Tx:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Tx:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Tx:BUART:reset_reg\,
		clk=>\Tx:BUART:clock_op\,
		cs_addr=>(zero, zero, \Tx:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\Tx:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\Tx:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\Tx:BUART:sc_out_7\, \Tx:BUART:sc_out_6\, \Tx:BUART:sc_out_5\, \Tx:BUART:sc_out_4\,
			\Tx:BUART:sc_out_3\, \Tx:BUART:sc_out_2\, \Tx:BUART:sc_out_1\, \Tx:BUART:sc_out_0\));
\Tx:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Tx:BUART:reset_reg\,
		clock=>\Tx:BUART:clock_op\,
		status=>(zero, zero, zero, \Tx:BUART:tx_fifo_notfull\,
			\Tx:BUART:tx_status_2\, \Tx:BUART:tx_fifo_empty\, \Tx:BUART:tx_status_0\),
		interrupt=>\Tx:BUART:tx_interrupt_out\);
\Rx_Right:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"74a98fae-66de-40bd-98d2-598d291e3e7f/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"1085069444.44444",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Rx_Right:Net_9\,
		dig_domain_out=>open);
\Rx_Right:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Rx_Right:Net_9\,
		enable=>one,
		clock_out=>\Rx_Right:BUART:clock_op\);
\Rx_Right:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Rx_Right:BUART:reset_reg\,
		clk=>\Rx_Right:BUART:clock_op\,
		cs_addr=>(\Rx_Right:BUART:rx_state_1\, \Rx_Right:BUART:rx_state_0\, \Rx_Right:BUART:rx_bitclk_enable\),
		route_si=>\Rx_Right:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\Rx_Right:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Rx_Right:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\Rx_Right:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Rx_Right:BUART:hd_shift_out\,
		f0_bus_stat=>\Rx_Right:BUART:rx_fifonotempty\,
		f0_blk_stat=>\Rx_Right:BUART:rx_fifofull\,
		f1_bus_stat=>\Rx_Right:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\Rx_Right:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Rx_Right:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\Rx_Right:BUART:clock_op\,
		reset=>\Rx_Right:BUART:reset_reg\,
		load=>\Rx_Right:BUART:rx_counter_load\,
		enable=>one,
		count=>(MODIN4_6, MODIN4_5, MODIN4_4, MODIN4_3,
			\Rx_Right:BUART:rx_count_2\, \Rx_Right:BUART:rx_count_1\, \Rx_Right:BUART:rx_count_0\),
		tc=>\Rx_Right:BUART:rx_count7_tc\);
\Rx_Right:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Rx_Right:BUART:reset_reg\,
		clock=>\Rx_Right:BUART:clock_op\,
		status=>(zero, \Rx_Right:BUART:rx_status_5\, \Rx_Right:BUART:rx_status_4\, \Rx_Right:BUART:rx_status_3\,
			\Rx_Right:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_577);
Tx_Pin:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"ed092b9b-d398-4703-be89-cebf998501f6",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>Net_2,
		fb=>(tmpFB_0__Tx_Pin_net_0),
		analog=>(open),
		io=>(tmpIO_0__Tx_Pin_net_0),
		siovref=>(tmpSIOVREF__Tx_Pin_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Tx_Pin_net_0);
isr_Rx_Left:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_582);
Rx_Left_Pins:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"7d1d936b-e851-4b43-abfd-b08e35af9ea0",
		drive_mode=>"011011011011",
		ibuf_enabled=>"1111",
		init_dr_st=>"0000",
		input_sync=>"1111",
		input_clk_en=>'0',
		input_sync_mode=>"0000",
		intr_mode=>"00000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000",
		output_sync=>"0000",
		output_clk_en=>'0',
		output_mode=>"0000",
		output_reset=>'0',
		output_clock_mode=>"0000",
		oe_sync=>"0000",
		oe_conn=>"0000",
		oe_reset=>'0',
		pin_aliases=>",,,",
		pin_mode=>"IIII",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00000000",
		width=>4,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000",
		ovt_slew_control=>"00000000",
		ovt_hyst_trim=>"0000",
		input_buffer_sel=>"00000000")
	PORT MAP(oe=>(one, one, one, one),
		y=>(zero, zero, zero, zero),
		fb=>(Net_498_3, Net_498_2, Net_498_1, Net_498_0),
		analog=>(open, open, open, open),
		io=>(tmpIO_3__Rx_Left_Pins_net_3, tmpIO_3__Rx_Left_Pins_net_2, tmpIO_3__Rx_Left_Pins_net_1, tmpIO_3__Rx_Left_Pins_net_0),
		siovref=>(tmpSIOVREF__Rx_Left_Pins_net_0),
		annotation=>(open, open, open, open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_Left_Pins_net_0);
\Rx_Front:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"3f65202d-bc80-4165-a834-94fd6b4493b0/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"1085069444.44444",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Rx_Front:Net_9\,
		dig_domain_out=>open);
\Rx_Front:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Rx_Front:Net_9\,
		enable=>one,
		clock_out=>\Rx_Front:BUART:clock_op\);
\Rx_Front:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Rx_Front:BUART:reset_reg\,
		clk=>\Rx_Front:BUART:clock_op\,
		cs_addr=>(\Rx_Front:BUART:rx_state_1\, \Rx_Front:BUART:rx_state_0\, \Rx_Front:BUART:rx_bitclk_enable\),
		route_si=>\Rx_Front:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\Rx_Front:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Rx_Front:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\Rx_Front:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Rx_Front:BUART:hd_shift_out\,
		f0_bus_stat=>\Rx_Front:BUART:rx_fifonotempty\,
		f0_blk_stat=>\Rx_Front:BUART:rx_fifofull\,
		f1_bus_stat=>\Rx_Front:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\Rx_Front:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Rx_Front:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\Rx_Front:BUART:clock_op\,
		reset=>\Rx_Front:BUART:reset_reg\,
		load=>\Rx_Front:BUART:rx_counter_load\,
		enable=>one,
		count=>(MODIN8_6, MODIN8_5, MODIN8_4, MODIN8_3,
			\Rx_Front:BUART:rx_count_2\, \Rx_Front:BUART:rx_count_1\, \Rx_Front:BUART:rx_count_0\),
		tc=>\Rx_Front:BUART:rx_count7_tc\);
\Rx_Front:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Rx_Front:BUART:reset_reg\,
		clock=>\Rx_Front:BUART:clock_op\,
		status=>(zero, \Rx_Front:BUART:rx_status_5\, \Rx_Front:BUART:rx_status_4\, \Rx_Front:BUART:rx_status_3\,
			\Rx_Front:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_592);
\Rx_Left:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"6cd281d9-0e5a-411b-b97f-ffe20e39fec5/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"1085069444.44444",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Rx_Left:Net_9\,
		dig_domain_out=>open);
\Rx_Left:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Rx_Left:Net_9\,
		enable=>one,
		clock_out=>\Rx_Left:BUART:clock_op\);
\Rx_Left:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Rx_Left:BUART:reset_reg\,
		clk=>\Rx_Left:BUART:clock_op\,
		cs_addr=>(\Rx_Left:BUART:rx_state_1\, \Rx_Left:BUART:rx_state_0\, \Rx_Left:BUART:rx_bitclk_enable\),
		route_si=>\Rx_Left:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\Rx_Left:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Rx_Left:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\Rx_Left:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Rx_Left:BUART:hd_shift_out\,
		f0_bus_stat=>\Rx_Left:BUART:rx_fifonotempty\,
		f0_blk_stat=>\Rx_Left:BUART:rx_fifofull\,
		f1_bus_stat=>\Rx_Left:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\Rx_Left:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Rx_Left:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\Rx_Left:BUART:clock_op\,
		reset=>\Rx_Left:BUART:reset_reg\,
		load=>\Rx_Left:BUART:rx_counter_load\,
		enable=>one,
		count=>(MODIN12_6, MODIN12_5, MODIN12_4, MODIN12_3,
			\Rx_Left:BUART:rx_count_2\, \Rx_Left:BUART:rx_count_1\, \Rx_Left:BUART:rx_count_0\),
		tc=>\Rx_Left:BUART:rx_count7_tc\);
\Rx_Left:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Rx_Left:BUART:reset_reg\,
		clock=>\Rx_Left:BUART:clock_op\,
		status=>(zero, \Rx_Left:BUART:rx_status_5\, \Rx_Left:BUART:rx_status_4\, \Rx_Left:BUART:rx_status_3\,
			\Rx_Left:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_582);
isr_Rx_Back:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_608);
\Rx_Back:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"11babca0-208b-437b-87d2-a95431a8cf51/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"1085069444.44444",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Rx_Back:Net_9\,
		dig_domain_out=>open);
\Rx_Back:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Rx_Back:Net_9\,
		enable=>one,
		clock_out=>\Rx_Back:BUART:clock_op\);
\Rx_Back:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Rx_Back:BUART:reset_reg\,
		clk=>\Rx_Back:BUART:clock_op\,
		cs_addr=>(\Rx_Back:BUART:rx_state_1\, \Rx_Back:BUART:rx_state_0\, \Rx_Back:BUART:rx_bitclk_enable\),
		route_si=>\Rx_Back:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\Rx_Back:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Rx_Back:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\Rx_Back:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Rx_Back:BUART:hd_shift_out\,
		f0_bus_stat=>\Rx_Back:BUART:rx_fifonotempty\,
		f0_blk_stat=>\Rx_Back:BUART:rx_fifofull\,
		f1_bus_stat=>\Rx_Back:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\Rx_Back:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Rx_Back:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\Rx_Back:BUART:clock_op\,
		reset=>\Rx_Back:BUART:reset_reg\,
		load=>\Rx_Back:BUART:rx_counter_load\,
		enable=>one,
		count=>(MODIN16_6, MODIN16_5, MODIN16_4, MODIN16_3,
			\Rx_Back:BUART:rx_count_2\, \Rx_Back:BUART:rx_count_1\, \Rx_Back:BUART:rx_count_0\),
		tc=>\Rx_Back:BUART:rx_count7_tc\);
\Rx_Back:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Rx_Back:BUART:reset_reg\,
		clock=>\Rx_Back:BUART:clock_op\,
		status=>(zero, \Rx_Back:BUART:rx_status_5\, \Rx_Back:BUART:rx_status_4\, \Rx_Back:BUART:rx_status_3\,
			\Rx_Back:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_608);
isr_Rx_Front:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_592);
Rx_Back_Pins:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"7be15419-7d31-49eb-a071-65bbed9cebc2",
		drive_mode=>"011011011011",
		ibuf_enabled=>"1111",
		init_dr_st=>"0000",
		input_sync=>"1111",
		input_clk_en=>'0',
		input_sync_mode=>"0000",
		intr_mode=>"00000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000",
		output_sync=>"0000",
		output_clk_en=>'0',
		output_mode=>"0000",
		output_reset=>'0',
		output_clock_mode=>"0000",
		oe_sync=>"0000",
		oe_conn=>"0000",
		oe_reset=>'0',
		pin_aliases=>",,,",
		pin_mode=>"IIII",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00000000",
		width=>4,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000",
		ovt_slew_control=>"00000000",
		ovt_hyst_trim=>"0000",
		input_buffer_sel=>"00000000")
	PORT MAP(oe=>(one, one, one, one),
		y=>(zero, zero, zero, zero),
		fb=>(Net_674_3, Net_674_2, Net_674_1, Net_674_0),
		analog=>(open, open, open, open),
		io=>(tmpIO_3__Rx_Back_Pins_net_3, tmpIO_3__Rx_Back_Pins_net_2, tmpIO_3__Rx_Back_Pins_net_1, tmpIO_3__Rx_Back_Pins_net_0),
		siovref=>(tmpSIOVREF__Rx_Back_Pins_net_0),
		annotation=>(open, open, open, open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_Back_Pins_net_0);
\LCD:LCDPort\:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"743d4abb-26af-45c7-b23c-52ae8bdc946b/ed092b9b-d398-4703-be89-cebf998501f6",
		drive_mode=>"110110110110110110110",
		ibuf_enabled=>"1111111",
		init_dr_st=>"0000000",
		input_sync=>"1111111",
		input_clk_en=>'0',
		input_sync_mode=>"0000000",
		intr_mode=>"00000000000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,,,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000000",
		output_sync=>"0000000",
		output_clk_en=>'0',
		output_mode=>"0000000",
		output_reset=>'0',
		output_clock_mode=>"0000000",
		oe_sync=>"0000000",
		oe_conn=>"0000000",
		oe_reset=>'0',
		pin_aliases=>",,,,,,",
		pin_mode=>"OOOOOOO",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10101010101010",
		width=>7,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000000",
		ovt_slew_control=>"00000000000000",
		ovt_hyst_trim=>"0000000",
		input_buffer_sel=>"00000000000000")
	PORT MAP(oe=>(one, one, one, one,
			one, one, one),
		y=>(zero, zero, zero, zero,
			zero, zero, zero),
		fb=>(\LCD:tmpFB_6__LCDPort_net_6\, \LCD:tmpFB_6__LCDPort_net_5\, \LCD:tmpFB_6__LCDPort_net_4\, \LCD:tmpFB_6__LCDPort_net_3\,
			\LCD:tmpFB_6__LCDPort_net_2\, \LCD:tmpFB_6__LCDPort_net_1\, \LCD:tmpFB_6__LCDPort_net_0\),
		analog=>(open, open, open, open,
			open, open, open),
		io=>(\LCD:tmpIO_6__LCDPort_net_6\, \LCD:tmpIO_6__LCDPort_net_5\, \LCD:tmpIO_6__LCDPort_net_4\, \LCD:tmpIO_6__LCDPort_net_3\,
			\LCD:tmpIO_6__LCDPort_net_2\, \LCD:tmpIO_6__LCDPort_net_1\, \LCD:tmpIO_6__LCDPort_net_0\),
		siovref=>(\LCD:tmpSIOVREF__LCDPort_net_0\),
		annotation=>(open, open, open, open,
			open, open, open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>\LCD:tmpINTERRUPT_0__LCDPort_net_0\);
Rx_Front_Pins:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"8d318d8b-cf7b-4b6b-b02c-ab1c5c49d0ba",
		drive_mode=>"011011011011",
		ibuf_enabled=>"1111",
		init_dr_st=>"0000",
		input_sync=>"1111",
		input_clk_en=>'0',
		input_sync_mode=>"0000",
		intr_mode=>"00000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000",
		output_sync=>"0000",
		output_clk_en=>'0',
		output_mode=>"0000",
		output_reset=>'0',
		output_clock_mode=>"0000",
		oe_sync=>"0000",
		oe_conn=>"0000",
		oe_reset=>'0',
		pin_aliases=>",,,",
		pin_mode=>"IIII",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00000000",
		width=>4,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000",
		ovt_slew_control=>"00000000",
		ovt_hyst_trim=>"0000",
		input_buffer_sel=>"00000000")
	PORT MAP(oe=>(one, one, one, one),
		y=>(zero, zero, zero, zero),
		fb=>(Net_719_3, Net_719_2, Net_719_1, Net_719_0),
		analog=>(open, open, open, open),
		io=>(tmpIO_3__Rx_Front_Pins_net_3, tmpIO_3__Rx_Front_Pins_net_2, tmpIO_3__Rx_Front_Pins_net_1, tmpIO_3__Rx_Front_Pins_net_0),
		siovref=>(tmpSIOVREF__Rx_Front_Pins_net_0),
		annotation=>(open, open, open, open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_Front_Pins_net_0);
Rx_Right_Pins:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"744f94ee-edaf-4355-8de2-a492f9ed352f",
		drive_mode=>"011011011011",
		ibuf_enabled=>"1111",
		init_dr_st=>"0000",
		input_sync=>"1111",
		input_clk_en=>'0',
		input_sync_mode=>"0000",
		intr_mode=>"00000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000",
		output_sync=>"0000",
		output_clk_en=>'0',
		output_mode=>"0000",
		output_reset=>'0',
		output_clock_mode=>"0000",
		oe_sync=>"0000",
		oe_conn=>"0000",
		oe_reset=>'0',
		pin_aliases=>",,,",
		pin_mode=>"IIII",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00000000",
		width=>4,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000",
		ovt_slew_control=>"00000000",
		ovt_hyst_trim=>"0000",
		input_buffer_sel=>"00000000")
	PORT MAP(oe=>(one, one, one, one),
		y=>(zero, zero, zero, zero),
		fb=>(Net_515_3, Net_515_2, Net_515_1, Net_515_0),
		analog=>(open, open, open, open),
		io=>(tmpIO_3__Rx_Right_Pins_net_3, tmpIO_3__Rx_Right_Pins_net_2, tmpIO_3__Rx_Right_Pins_net_1, tmpIO_3__Rx_Right_Pins_net_0),
		siovref=>(tmpSIOVREF__Rx_Right_Pins_net_0),
		annotation=>(open, open, open, open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_Right_Pins_net_0);
isr_Rx_Right:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_577);
LED:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"e851a3b9-efb8-48be-bbb8-b303b216c393",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(tmpFB_0__LED_net_0),
		analog=>(open),
		io=>(tmpIO_0__LED_net_0),
		siovref=>(tmpSIOVREF__LED_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__LED_net_0);
Button:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"5a4e4840-290d-452b-80db-7060444fb887",
		drive_mode=>"010",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(tmpFB_0__Button_net_0),
		analog=>(open),
		io=>(tmpIO_0__Button_net_0),
		siovref=>(tmpSIOVREF__Button_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Button_net_0);
StartupLED:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"269e269e-48cf-47c7-8850-815caf481f10",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(tmpFB_0__StartupLED_net_0),
		analog=>(open),
		io=>(tmpIO_0__StartupLED_net_0),
		siovref=>(tmpSIOVREF__StartupLED_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__StartupLED_net_0);
\Rx_Front_Register:sts:sts_reg\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00001111")
	PORT MAP(reset=>zero,
		clock=>Clock,
		status=>(zero, zero, zero, zero,
			Net_719_3, Net_719_2, Net_719_1, Net_719_0));
Clock_1:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"ba81c34f-4cbc-47d3-9db4-2a2dd7bc2d5b",
		source_clock_id=>"",
		divisor=>0,
		period=>"41666666.6666667",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Clock,
		dig_domain_out=>open);
\Rx_Back_Register:sts:sts_reg\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00001111")
	PORT MAP(reset=>zero,
		clock=>Clock,
		status=>(zero, zero, zero, zero,
			Net_674_3, Net_674_2, Net_674_1, Net_674_0));
\Rx_Top:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"746b7ca8-7d4f-4689-8dea-87196315762e/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"1085069444.44444",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Rx_Top:Net_9\,
		dig_domain_out=>open);
\Rx_Top:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Rx_Top:Net_9\,
		enable=>one,
		clock_out=>\Rx_Top:BUART:clock_op\);
\Rx_Top:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Rx_Top:BUART:reset_reg\,
		clk=>\Rx_Top:BUART:clock_op\,
		cs_addr=>(\Rx_Top:BUART:rx_state_1\, \Rx_Top:BUART:rx_state_0\, \Rx_Top:BUART:rx_bitclk_enable\),
		route_si=>\Rx_Top:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\Rx_Top:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Rx_Top:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\Rx_Top:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Rx_Top:BUART:hd_shift_out\,
		f0_bus_stat=>\Rx_Top:BUART:rx_fifonotempty\,
		f0_blk_stat=>\Rx_Top:BUART:rx_fifofull\,
		f1_bus_stat=>\Rx_Top:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\Rx_Top:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Rx_Top:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\Rx_Top:BUART:clock_op\,
		reset=>\Rx_Top:BUART:reset_reg\,
		load=>\Rx_Top:BUART:rx_counter_load\,
		enable=>one,
		count=>(MODIN20_6, MODIN20_5, MODIN20_4, MODIN20_3,
			\Rx_Top:BUART:rx_count_2\, \Rx_Top:BUART:rx_count_1\, \Rx_Top:BUART:rx_count_0\),
		tc=>\Rx_Top:BUART:rx_count7_tc\);
\Rx_Top:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Rx_Top:BUART:reset_reg\,
		clock=>\Rx_Top:BUART:clock_op\,
		status=>(zero, \Rx_Top:BUART:rx_status_5\, \Rx_Top:BUART:rx_status_4\, \Rx_Top:BUART:rx_status_3\,
			\Rx_Top:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_785);
\Rx_Left_Register:sts:sts_reg\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00001111")
	PORT MAP(reset=>zero,
		clock=>Clock,
		status=>(zero, zero, zero, zero,
			Net_498_3, Net_498_2, Net_498_1, Net_498_0));
\Rx_Right_Register:sts:sts_reg\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00001111")
	PORT MAP(reset=>zero,
		clock=>Clock,
		status=>(zero, zero, zero, zero,
			Net_515_3, Net_515_2, Net_515_1, Net_515_0));
Rx_Top_Pins:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"787190d9-1233-4f89-9f85-c10b47512766",
		drive_mode=>"011011011011",
		ibuf_enabled=>"1111",
		init_dr_st=>"0000",
		input_sync=>"1111",
		input_clk_en=>'0',
		input_sync_mode=>"0000",
		intr_mode=>"00000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000",
		output_sync=>"0000",
		output_clk_en=>'0',
		output_mode=>"0000",
		output_reset=>'0',
		output_clock_mode=>"0000",
		oe_sync=>"0000",
		oe_conn=>"0000",
		oe_reset=>'0',
		pin_aliases=>",,,",
		pin_mode=>"IIII",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00000000",
		width=>4,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000",
		ovt_slew_control=>"00000000",
		ovt_hyst_trim=>"0000",
		input_buffer_sel=>"00000000")
	PORT MAP(oe=>(one, one, one, one),
		y=>(zero, zero, zero, zero),
		fb=>(Net_790_3, Net_790_2, Net_790_1, Net_790_0),
		analog=>(open, open, open, open),
		io=>(tmpIO_3__Rx_Top_Pins_net_3, tmpIO_3__Rx_Top_Pins_net_2, tmpIO_3__Rx_Top_Pins_net_1, tmpIO_3__Rx_Top_Pins_net_0),
		siovref=>(tmpSIOVREF__Rx_Top_Pins_net_0),
		annotation=>(open, open, open, open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_Top_Pins_net_0);
isr_Rx_Top:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_785);
\Rx_Top_Register:sts:sts_reg\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00001111")
	PORT MAP(reset=>zero,
		clock=>Clock,
		status=>(zero, zero, zero, zero,
			Net_790_3, Net_790_2, Net_790_1, Net_790_0));
\Rx_Bottom:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"66b38072-50fc-42f5-8188-dd1c68a5a834/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"1085069444.44444",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Rx_Bottom:Net_9\,
		dig_domain_out=>open);
\Rx_Bottom:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Rx_Bottom:Net_9\,
		enable=>one,
		clock_out=>\Rx_Bottom:BUART:clock_op\);
\Rx_Bottom:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Rx_Bottom:BUART:reset_reg\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		cs_addr=>(\Rx_Bottom:BUART:rx_state_1\, \Rx_Bottom:BUART:rx_state_0\, \Rx_Bottom:BUART:rx_bitclk_enable\),
		route_si=>\Rx_Bottom:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\Rx_Bottom:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Rx_Bottom:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\Rx_Bottom:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Rx_Bottom:BUART:hd_shift_out\,
		f0_bus_stat=>\Rx_Bottom:BUART:rx_fifonotempty\,
		f0_blk_stat=>\Rx_Bottom:BUART:rx_fifofull\,
		f1_bus_stat=>\Rx_Bottom:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\Rx_Bottom:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Rx_Bottom:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\Rx_Bottom:BUART:clock_op\,
		reset=>\Rx_Bottom:BUART:reset_reg\,
		load=>\Rx_Bottom:BUART:rx_counter_load\,
		enable=>one,
		count=>(\Rx_Bottom:BUART:rx_count_6\, \Rx_Bottom:BUART:rx_count_5\, \Rx_Bottom:BUART:rx_count_4\, \Rx_Bottom:BUART:rx_count_3\,
			\Rx_Bottom:BUART:rx_count_2\, \Rx_Bottom:BUART:rx_count_1\, \Rx_Bottom:BUART:rx_count_0\),
		tc=>\Rx_Bottom:BUART:rx_count7_tc\);
\Rx_Bottom:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Rx_Bottom:BUART:reset_reg\,
		clock=>\Rx_Bottom:BUART:clock_op\,
		status=>(zero, \Rx_Bottom:BUART:rx_status_5\, \Rx_Bottom:BUART:rx_status_4\, \Rx_Bottom:BUART:rx_status_3\,
			\Rx_Bottom:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_828);
Rx_Bottom_Pins:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"f2df7e8e-42f5-44d1-9efc-4e6f731a871e",
		drive_mode=>"011011011011",
		ibuf_enabled=>"1111",
		init_dr_st=>"0000",
		input_sync=>"1111",
		input_clk_en=>'0',
		input_sync_mode=>"0000",
		intr_mode=>"00000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000",
		output_sync=>"0000",
		output_clk_en=>'0',
		output_mode=>"0000",
		output_reset=>'0',
		output_clock_mode=>"0000",
		oe_sync=>"0000",
		oe_conn=>"0000",
		oe_reset=>'0',
		pin_aliases=>",,,",
		pin_mode=>"IIII",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00000000",
		width=>4,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000",
		ovt_slew_control=>"00000000",
		ovt_hyst_trim=>"0000",
		input_buffer_sel=>"00000000")
	PORT MAP(oe=>(one, one, one, one),
		y=>(zero, zero, zero, zero),
		fb=>(Net_833_3, Net_833_2, Net_833_1, Net_833_0),
		analog=>(open, open, open, open),
		io=>(tmpIO_3__Rx_Bottom_Pins_net_3, tmpIO_3__Rx_Bottom_Pins_net_2, tmpIO_3__Rx_Bottom_Pins_net_1, tmpIO_3__Rx_Bottom_Pins_net_0),
		siovref=>(tmpSIOVREF__Rx_Bottom_Pins_net_0),
		annotation=>(open, open, open, open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_Bottom_Pins_net_0);
isr_Rx_Bottom:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_828);
\Rx_Bottom_Register:sts:sts_reg\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00001111")
	PORT MAP(reset=>zero,
		clock=>Clock,
		status=>(zero, zero, zero, zero,
			Net_833_3, Net_833_2, Net_833_1, Net_833_0));
\Tx:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:reset_reg\);
\Tx:BUART:txn\:cy_dff
	PORT MAP(d=>\Tx:BUART:txn\\D\,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:txn\);
\Tx:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\Tx:BUART:tx_state_1\\D\,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:tx_state_1\);
\Tx:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\Tx:BUART:tx_state_0\\D\,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:tx_state_0\);
\Tx:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\Tx:BUART:tx_state_2\\D\,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:tx_state_2\);
Net_559:cy_dff
	PORT MAP(d=>Net_559D,
		clk=>\Tx:BUART:clock_op\,
		q=>Net_559);
\Tx:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\Tx:BUART:tx_bitclk\\D\,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:tx_bitclk\);
\Tx:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\Tx:BUART:tx_ctrl_mark_last\,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:tx_ctrl_mark_last\);
\Tx:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\Tx:BUART:tx_mark\\D\,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:tx_mark\);
\Tx:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\Tx:BUART:tx_parity_bit\\D\,
		clk=>\Tx:BUART:clock_op\,
		q=>\Tx:BUART:tx_parity_bit\);
\Rx_Right:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:reset_reg\);
\Rx_Right:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_state_1\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_state_1\);
\Rx_Right:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_state_0\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_state_0\);
\Rx_Right:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_load_fifo\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_load_fifo\);
\Rx_Right:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_state_3\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_state_3\);
\Rx_Right:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_state_2\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_state_2\);
\Rx_Right:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_bitclk_pre\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_bitclk_enable\);
\Rx_Right:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_state_stop1_reg\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_state_stop1_reg\);
\Rx_Right:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:pollcount_1\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>MODIN1_1);
\Rx_Right:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:pollcount_0\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>MODIN1_0);
\Rx_Right:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_markspace_status\);
\Rx_Right:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_status_2\);
\Rx_Right:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_stop_bit_error\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_status_3\);
\Rx_Right:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_addr_match_status\);
\Rx_Right:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_markspace_pre\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_markspace_pre\);
\Rx_Right:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_parity_error_pre\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_parity_error_pre\);
\Rx_Right:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_break_status\);
\Rx_Right:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_address_detected\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_address_detected\);
\Rx_Right:BUART:rx_last\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_last\\D\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_last\);
\Rx_Right:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\Rx_Right:BUART:rx_parity_bit\,
		clk=>\Rx_Right:BUART:clock_op\,
		q=>\Rx_Right:BUART:rx_parity_bit\);
\Rx_Front:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:reset_reg\);
\Rx_Front:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_1\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_1\);
\Rx_Front:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_0\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_0\);
\Rx_Front:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_load_fifo\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_load_fifo\);
\Rx_Front:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_3\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_3\);
\Rx_Front:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_2\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_2\);
\Rx_Front:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_bitclk_pre\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_bitclk_enable\);
\Rx_Front:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_stop1_reg\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_stop1_reg\);
\Rx_Front:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:pollcount_1\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>MODIN5_1);
\Rx_Front:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:pollcount_0\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>MODIN5_0);
\Rx_Front:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_markspace_status\);
\Rx_Front:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_status_2\);
\Rx_Front:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_stop_bit_error\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_status_3\);
\Rx_Front:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_addr_match_status\);
\Rx_Front:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_markspace_pre\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_markspace_pre\);
\Rx_Front:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_parity_error_pre\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_parity_error_pre\);
\Rx_Front:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_break_status\);
\Rx_Front:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_address_detected\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_address_detected\);
\Rx_Front:BUART:rx_last\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_last\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_last\);
\Rx_Front:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_parity_bit\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_parity_bit\);
\Rx_Left:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:reset_reg\);
\Rx_Left:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_state_1\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_state_1\);
\Rx_Left:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_state_0\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_state_0\);
\Rx_Left:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_load_fifo\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_load_fifo\);
\Rx_Left:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_state_3\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_state_3\);
\Rx_Left:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_state_2\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_state_2\);
\Rx_Left:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_bitclk_pre\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_bitclk_enable\);
\Rx_Left:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_state_stop1_reg\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_state_stop1_reg\);
\Rx_Left:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:pollcount_1\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>MODIN9_1);
\Rx_Left:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:pollcount_0\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>MODIN9_0);
\Rx_Left:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_markspace_status\);
\Rx_Left:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_status_2\);
\Rx_Left:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_stop_bit_error\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_status_3\);
\Rx_Left:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_addr_match_status\);
\Rx_Left:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_markspace_pre\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_markspace_pre\);
\Rx_Left:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_parity_error_pre\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_parity_error_pre\);
\Rx_Left:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_break_status\);
\Rx_Left:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_address_detected\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_address_detected\);
\Rx_Left:BUART:rx_last\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_last\\D\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_last\);
\Rx_Left:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\Rx_Left:BUART:rx_parity_bit\,
		clk=>\Rx_Left:BUART:clock_op\,
		q=>\Rx_Left:BUART:rx_parity_bit\);
\Rx_Back:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:reset_reg\);
\Rx_Back:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_1\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_1\);
\Rx_Back:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_0\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_0\);
\Rx_Back:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_load_fifo\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_load_fifo\);
\Rx_Back:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_3\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_3\);
\Rx_Back:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_2\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_2\);
\Rx_Back:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_bitclk_pre\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_bitclk_enable\);
\Rx_Back:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_stop1_reg\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_stop1_reg\);
\Rx_Back:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:pollcount_1\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>MODIN13_1);
\Rx_Back:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:pollcount_0\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>MODIN13_0);
\Rx_Back:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_markspace_status\);
\Rx_Back:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_status_2\);
\Rx_Back:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_stop_bit_error\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_status_3\);
\Rx_Back:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_addr_match_status\);
\Rx_Back:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_markspace_pre\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_markspace_pre\);
\Rx_Back:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_parity_error_pre\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_parity_error_pre\);
\Rx_Back:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_break_status\);
\Rx_Back:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_address_detected\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_address_detected\);
\Rx_Back:BUART:rx_last\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_last\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_last\);
\Rx_Back:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_parity_bit\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_parity_bit\);
\Rx_Top:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:reset_reg\);
\Rx_Top:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_state_1\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_state_1\);
\Rx_Top:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_state_0\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_state_0\);
\Rx_Top:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_load_fifo\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_load_fifo\);
\Rx_Top:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_state_3\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_state_3\);
\Rx_Top:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_state_2\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_state_2\);
\Rx_Top:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_bitclk_pre\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_bitclk_enable\);
\Rx_Top:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_state_stop1_reg\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_state_stop1_reg\);
\Rx_Top:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:pollcount_1\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>MODIN17_1);
\Rx_Top:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:pollcount_0\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>MODIN17_0);
\Rx_Top:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_markspace_status\);
\Rx_Top:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_status_2\);
\Rx_Top:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_stop_bit_error\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_status_3\);
\Rx_Top:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_addr_match_status\);
\Rx_Top:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_markspace_pre\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_markspace_pre\);
\Rx_Top:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_parity_error_pre\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_parity_error_pre\);
\Rx_Top:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_break_status\);
\Rx_Top:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_address_detected\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_address_detected\);
\Rx_Top:BUART:rx_last\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_last\\D\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_last\);
\Rx_Top:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\Rx_Top:BUART:rx_parity_bit\,
		clk=>\Rx_Top:BUART:clock_op\,
		q=>\Rx_Top:BUART:rx_parity_bit\);
\Rx_Bottom:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:reset_reg\);
\Rx_Bottom:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_state_1\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_state_1\);
\Rx_Bottom:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_state_0\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_state_0\);
\Rx_Bottom:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_load_fifo\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_load_fifo\);
\Rx_Bottom:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_state_3\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_state_3\);
\Rx_Bottom:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_state_2\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_state_2\);
\Rx_Bottom:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_bitclk_pre\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_bitclk_enable\);
\Rx_Bottom:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_state_stop1_reg\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_state_stop1_reg\);
\Rx_Bottom:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:pollcount_1\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:pollcount_1\);
\Rx_Bottom:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:pollcount_0\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:pollcount_0\);
\Rx_Bottom:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_markspace_status\);
\Rx_Bottom:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_status_2\);
\Rx_Bottom:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_stop_bit_error\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_status_3\);
\Rx_Bottom:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_addr_match_status\);
\Rx_Bottom:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_markspace_pre\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_markspace_pre\);
\Rx_Bottom:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_parity_error_pre\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_parity_error_pre\);
\Rx_Bottom:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_break_status\);
\Rx_Bottom:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_address_detected\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_address_detected\);
\Rx_Bottom:BUART:rx_last\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_last\\D\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_last\);
\Rx_Bottom:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\Rx_Bottom:BUART:rx_parity_bit\,
		clk=>\Rx_Bottom:BUART:clock_op\,
		q=>\Rx_Bottom:BUART:rx_parity_bit\);

END R_T_L;
