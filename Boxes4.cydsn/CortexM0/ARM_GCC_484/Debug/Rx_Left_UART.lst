ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Rx_Left_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Rx_Left_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	Rx_Left_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	Rx_Left_UartInit, %function
  23              	Rx_Left_UartInit:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\Rx_Left_UART.c"
   1:.\Generated_Source\PSoC4/Rx_Left_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * File Name: Rx_Left_UART.c
   3:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
   5:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  UART mode.
   8:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
   9:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
  11:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  18:.\Generated_Source\PSoC4/Rx_Left_UART.c **** #include "Rx_Left_PVT.h"
  19:.\Generated_Source\PSoC4/Rx_Left_UART.c **** #include "Rx_Left_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  21:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  22:.\Generated_Source\PSoC4/Rx_Left_UART.c **** #if(Rx_Left_SCB_MODE_UNCONFIG_CONST_CFG)
  23:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  24:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     /***************************************
  25:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  Configuration Structure Initialization
  26:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     ***************************************/
  27:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  28:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     const Rx_Left_UART_INIT_STRUCT Rx_Left_configUart =
  29:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     {
  30:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_SUB_MODE,
  31:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_DIRECTION,
  32:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_DATA_BITS_NUM,
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 2


  33:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_PARITY_TYPE,
  34:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_STOP_BITS_NUM,
  35:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_OVS_FACTOR,
  36:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_IRDA_LOW_POWER,
  37:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_MEDIAN_FILTER_ENABLE,
  38:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_RETRY_ON_NACK,
  39:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_IRDA_POLARITY,
  40:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_DROP_ON_PARITY_ERR,
  41:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_DROP_ON_FRAME_ERR,
  42:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_WAKE_ENABLE,
  43:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         0u,
  44:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         NULL,
  45:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         0u,
  46:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         NULL,
  47:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_MP_MODE_ENABLE,
  48:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_MP_ACCEPT_ADDRESS,
  49:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_MP_RX_ADDRESS,
  50:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_MP_RX_ADDRESS_MASK,
  51:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         (uint32) Rx_Left_SCB_IRQ_INTERNAL,
  52:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_INTR_RX_MASK,
  53:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_RX_TRIGGER_LEVEL,
  54:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_INTR_TX_MASK,
  55:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_TX_TRIGGER_LEVEL,
  56:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         (uint8) Rx_Left_UART_BYTE_MODE_ENABLE,
  57:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         (uint8) Rx_Left_UART_CTS_ENABLE,
  58:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         (uint8) Rx_Left_UART_CTS_POLARITY,
  59:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         (uint8) Rx_Left_UART_RTS_POLARITY,
  60:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         (uint8) Rx_Left_UART_RTS_FIFO_LEVEL
  61:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     };
  62:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  63:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  64:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     /*******************************************************************************
  65:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Function Name: Rx_Left_UartInit
  66:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     ********************************************************************************
  67:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
  68:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Summary:
  69:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  Configures the SCB for the UART operation.
  70:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
  71:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Parameters:
  72:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  config:  Pointer to a structure that contains the following ordered list of
  73:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *           fields. These fields match the selections available in the
  74:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *           customizer.
  75:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
  76:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Return:
  77:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  None
  78:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
  79:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *******************************************************************************/
  80:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     void Rx_Left_UartInit(const Rx_Left_UART_INIT_STRUCT *config)
  81:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     {
  82:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         uint32 pinsConfig;
  83:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  84:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         if(NULL == config)
  85:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         {
  86:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
  87:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         }
  88:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         else
  89:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         {
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 3


  90:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
  91:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             pinsConfig  = config->direction;
  92:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  93:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         #if !(Rx_Left_CY_SCBIP_V0 || Rx_Left_CY_SCBIP_V1)
  94:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Add RTS and CTS pins to configure */
  95:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (Rx_Left_UART_RTS_PIN_ENABLE) : (0u);
  96:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             pinsConfig |= (0u != config->enableCts)         ? (Rx_Left_UART_CTS_PIN_ENABLE) : (0u);
  97:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         #endif /* !(Rx_Left_CY_SCBIP_V0 || Rx_Left_CY_SCBIP_V1) */
  98:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
  99:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure pins */
 100:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_SetPins(Rx_Left_SCB_MODE_UART, config->mode, pinsConfig);
 101:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 102:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Store internal configuration */
 103:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_scbMode       = (uint8) Rx_Left_SCB_MODE_UART;
 104:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_scbEnableWake = (uint8) config->enableWake;
 105:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_scbEnableIntr = (uint8) config->enableInterrupt;
 106:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 107:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Set RX direction internal variables */
 108:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_rxBuffer      =         config->rxBuffer;
 109:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_rxDataBits    = (uint8) config->dataBits;
 110:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_rxBufferSize  = (uint8) config->rxBufferSize;
 111:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 112:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Set TX direction internal variables */
 113:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_txBuffer      =         config->txBuffer;
 114:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_txDataBits    = (uint8) config->dataBits;
 115:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_txBufferSize  = (uint8) config->txBufferSize;
 116:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 117:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure UART interface */
 118:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             if(Rx_Left_UART_MODE_IRDA == config->mode)
 119:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             {
 120:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                 /* OVS settings: IrDA */
 121:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                 Rx_Left_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 122:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                 (Rx_Left_UART_GET_CTRL_OVS_IRDA_LP(config->oversamp
 123:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                 (Rx_Left_CTRL_OVS_IRDA_OVS16));
 124:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             }
 125:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             else
 126:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             {
 127:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                 /* OVS settings: UART and SmartCard */
 128:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                 Rx_Left_CTRL_REG  = Rx_Left_GET_CTRL_OVS(config->oversample);
 129:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             }
 130:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 131:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_CTRL_REG     |= Rx_Left_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 132:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                              Rx_Left_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAd
 133:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                              Rx_Left_CTRL_UART;
 134:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 135:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 136:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_UART_CTRL_REG = Rx_Left_GET_UART_CTRL_MODE(config->mode);
 137:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 138:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure RX direction */
 139:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_UART_RX_CTRL_REG = Rx_Left_GET_UART_RX_CTRL_MODE(config->stopBits)             
 140:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                         Rx_Left_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)
 141:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                         Rx_Left_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)  
 142:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                         Rx_Left_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnP
 143:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                         Rx_Left_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFr
 144:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 145:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             if(Rx_Left_UART_PARITY_NONE != config->parity)
 146:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             {
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 4


 147:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                Rx_Left_UART_RX_CTRL_REG |= Rx_Left_GET_UART_RX_CTRL_PARITY(config->parity) |
 148:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                     Rx_Left_UART_RX_CTRL_PARITY_ENABLED;
 149:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             }
 150:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 151:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_RX_CTRL_REG      = Rx_Left_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 152:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                 Rx_Left_GET_RX_CTRL_MEDIAN(config->enableMedianFilt
 153:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                 Rx_Left_GET_UART_RX_CTRL_ENABLED(config->direction)
 154:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 155:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_RX_FIFO_CTRL_REG = Rx_Left_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLeve
 156:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 157:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure MP address */
 158:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_RX_MATCH_REG     = Rx_Left_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 159:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                 Rx_Left_GET_RX_MATCH_MASK(config->multiprocAddrMask
 160:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 161:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure RX direction */
 162:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_UART_TX_CTRL_REG = Rx_Left_GET_UART_TX_CTRL_MODE(config->stopBits) |
 163:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                 Rx_Left_GET_UART_TX_CTRL_RETRY_NACK(config->enableR
 164:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 165:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             if(Rx_Left_UART_PARITY_NONE != config->parity)
 166:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             {
 167:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                Rx_Left_UART_TX_CTRL_REG |= Rx_Left_GET_UART_TX_CTRL_PARITY(config->parity) |
 168:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                     Rx_Left_UART_TX_CTRL_PARITY_ENABLED;
 169:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             }
 170:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 171:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_TX_CTRL_REG      = Rx_Left_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 172:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                                 Rx_Left_GET_UART_TX_CTRL_ENABLED(config->direction)
 173:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 174:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_TX_FIFO_CTRL_REG = Rx_Left_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLeve
 175:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 176:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         #if !(Rx_Left_CY_SCBIP_V0 || Rx_Left_CY_SCBIP_V1)
 177:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_UART_FLOW_CTRL_REG = Rx_Left_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) |
 178:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                             Rx_Left_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPol
 179:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                             Rx_Left_GET_UART_FLOW_CTRL_RTS_POLARITY(config->rtsPola
 180:.\Generated_Source\PSoC4/Rx_Left_UART.c ****                                             Rx_Left_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxF
 181:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         #endif /* !(Rx_Left_CY_SCBIP_V0 || Rx_Left_CY_SCBIP_V1) */
 182:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 183:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 184:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             CyIntDisable    (Rx_Left_ISR_NUMBER);
 185:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             CyIntSetPriority(Rx_Left_ISR_NUMBER, Rx_Left_ISR_PRIORITY);
 186:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             (void) CyIntSetVector(Rx_Left_ISR_NUMBER, &Rx_Left_SPI_UART_ISR);
 187:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 188:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure WAKE interrupt */
 189:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         #if(Rx_Left_UART_RX_WAKEUP_IRQ)
 190:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             CyIntDisable    (Rx_Left_RX_WAKE_ISR_NUMBER);
 191:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             CyIntSetPriority(Rx_Left_RX_WAKE_ISR_NUMBER, Rx_Left_RX_WAKE_ISR_PRIORITY);
 192:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             (void) CyIntSetVector(Rx_Left_RX_WAKE_ISR_NUMBER, &Rx_Left_UART_WAKEUP_ISR);
 193:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         #endif /* (Rx_Left_UART_RX_WAKEUP_IRQ) */
 194:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 195:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Configure interrupt sources */
 196:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_INTR_I2C_EC_MASK_REG = Rx_Left_NO_INTR_SOURCES;
 197:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_INTR_SPI_EC_MASK_REG = Rx_Left_NO_INTR_SOURCES;
 198:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_INTR_SLAVE_MASK_REG  = Rx_Left_NO_INTR_SOURCES;
 199:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_INTR_MASTER_MASK_REG = Rx_Left_NO_INTR_SOURCES;
 200:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_INTR_RX_MASK_REG     = config->rxInterruptMask;
 201:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_INTR_TX_MASK_REG     = config->txInterruptMask;
 202:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 203:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Clear RX buffer indexes */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 5


 204:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_rxBufferHead     = 0u;
 205:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_rxBufferTail     = 0u;
 206:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_rxBufferOverflow = 0u;
 207:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 208:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Clear TX buffer indexes */
 209:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_txBufferHead = 0u;
 210:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_txBufferTail = 0u;
 211:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         }
 212:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     }
 213:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 214:.\Generated_Source\PSoC4/Rx_Left_UART.c **** #else
 215:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 216:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     /*******************************************************************************
 217:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Function Name: Rx_Left_UartInit
 218:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     ********************************************************************************
 219:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 220:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Summary:
 221:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  Configures the SCB for the UART operation.
 222:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 223:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Parameters:
 224:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  None
 225:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 226:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Return:
 227:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  None
 228:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 229:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *******************************************************************************/
 230:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     void Rx_Left_UartInit(void)
 231:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     {
  26              		.loc 1 231 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Configure UART interface */
 233:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_CTRL_REG = Rx_Left_UART_DEFAULT_CTRL;
  34              		.loc 1 233 0
  35 0004 1D4B     		ldr	r3, .L2
  36 0006 1E4A     		ldr	r2, .L2+4
  37 0008 1A60     		str	r2, [r3]
 234:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 235:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 236:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_CTRL_REG = Rx_Left_UART_DEFAULT_UART_CTRL;
  38              		.loc 1 236 0
  39 000a 1E4B     		ldr	r3, .L2+8
  40 000c 0022     		mov	r2, #0
  41 000e 1A60     		str	r2, [r3]
 237:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 238:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Configure RX direction */
 239:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_RX_CTRL_REG = Rx_Left_UART_DEFAULT_UART_RX_CTRL;
  42              		.loc 1 239 0
  43 0010 1D4B     		ldr	r3, .L2+12
  44 0012 0122     		mov	r2, #1
  45 0014 1A60     		str	r2, [r3]
 240:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_RX_CTRL_REG      = Rx_Left_UART_DEFAULT_RX_CTRL;
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 6


  46              		.loc 1 240 0
  47 0016 1D4B     		ldr	r3, .L2+16
  48 0018 1D4A     		ldr	r2, .L2+20
  49 001a 1A60     		str	r2, [r3]
 241:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_RX_FIFO_CTRL_REG = Rx_Left_UART_DEFAULT_RX_FIFO_CTRL;
  50              		.loc 1 241 0
  51 001c 1D4B     		ldr	r3, .L2+24
  52 001e 0722     		mov	r2, #7
  53 0020 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_RX_MATCH_REG     = Rx_Left_UART_DEFAULT_RX_MATCH_REG;
  54              		.loc 1 242 0
  55 0022 1D4B     		ldr	r3, .L2+28
  56 0024 0022     		mov	r2, #0
  57 0026 1A60     		str	r2, [r3]
 243:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 244:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Configure TX direction */
 245:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_TX_CTRL_REG = Rx_Left_UART_DEFAULT_UART_TX_CTRL;
  58              		.loc 1 245 0
  59 0028 1C4B     		ldr	r3, .L2+32
  60 002a 0122     		mov	r2, #1
  61 002c 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_TX_CTRL_REG      = Rx_Left_UART_DEFAULT_TX_CTRL;
  62              		.loc 1 246 0
  63 002e 1C4B     		ldr	r3, .L2+36
  64 0030 0722     		mov	r2, #7
  65 0032 1A60     		str	r2, [r3]
 247:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_TX_FIFO_CTRL_REG = Rx_Left_UART_DEFAULT_TX_FIFO_CTRL;
  66              		.loc 1 247 0
  67 0034 1B4B     		ldr	r3, .L2+40
  68 0036 0022     		mov	r2, #0
  69 0038 1A60     		str	r2, [r3]
 248:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 249:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #if !(Rx_Left_CY_SCBIP_V0 || Rx_Left_CY_SCBIP_V1)
 250:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_UART_FLOW_CTRL_REG = Rx_Left_UART_DEFAULT_FLOW_CTRL;
 251:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #endif /* !(Rx_Left_CY_SCBIP_V0 || Rx_Left_CY_SCBIP_V1) */
 252:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 253:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 254:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #if(Rx_Left_SCB_IRQ_INTERNAL)
 255:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         CyIntDisable    (Rx_Left_ISR_NUMBER);
  70              		.loc 1 255 0
  71 003a 0A20     		mov	r0, #10
  72 003c FFF7FEFF 		bl	CyIntDisable
 256:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         CyIntSetPriority(Rx_Left_ISR_NUMBER, Rx_Left_ISR_PRIORITY);
  73              		.loc 1 256 0
  74 0040 0A20     		mov	r0, #10
  75 0042 0321     		mov	r1, #3
  76 0044 FFF7FEFF 		bl	CyIntSetPriority
 257:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         (void) CyIntSetVector(Rx_Left_ISR_NUMBER, &Rx_Left_SPI_UART_ISR);
  77              		.loc 1 257 0
  78 0048 174B     		ldr	r3, .L2+44
  79 004a 0A20     		mov	r0, #10
  80 004c 191C     		mov	r1, r3
  81 004e FFF7FEFF 		bl	CyIntSetVector
 258:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #endif /* (Rx_Left_SCB_IRQ_INTERNAL) */
 259:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 260:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Configure WAKE interrupt */
 261:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #if(Rx_Left_UART_RX_WAKEUP_IRQ)
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 7


 262:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         CyIntDisable    (Rx_Left_RX_WAKE_ISR_NUMBER);
 263:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         CyIntSetPriority(Rx_Left_RX_WAKE_ISR_NUMBER, Rx_Left_RX_WAKE_ISR_PRIORITY);
 264:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         (void) CyIntSetVector(Rx_Left_RX_WAKE_ISR_NUMBER, &Rx_Left_UART_WAKEUP_ISR);
 265:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #endif /* (Rx_Left_UART_RX_WAKEUP_IRQ) */
 266:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 267:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Configure interrupt sources */
 268:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_INTR_I2C_EC_MASK_REG = Rx_Left_UART_DEFAULT_INTR_I2C_EC_MASK;
  82              		.loc 1 268 0
  83 0052 164B     		ldr	r3, .L2+48
  84 0054 0022     		mov	r2, #0
  85 0056 1A60     		str	r2, [r3]
 269:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_INTR_SPI_EC_MASK_REG = Rx_Left_UART_DEFAULT_INTR_SPI_EC_MASK;
  86              		.loc 1 269 0
  87 0058 154B     		ldr	r3, .L2+52
  88 005a 0022     		mov	r2, #0
  89 005c 1A60     		str	r2, [r3]
 270:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_INTR_SLAVE_MASK_REG  = Rx_Left_UART_DEFAULT_INTR_SLAVE_MASK;
  90              		.loc 1 270 0
  91 005e 154B     		ldr	r3, .L2+56
  92 0060 0022     		mov	r2, #0
  93 0062 1A60     		str	r2, [r3]
 271:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_INTR_MASTER_MASK_REG = Rx_Left_UART_DEFAULT_INTR_MASTER_MASK;
  94              		.loc 1 271 0
  95 0064 144B     		ldr	r3, .L2+60
  96 0066 0022     		mov	r2, #0
  97 0068 1A60     		str	r2, [r3]
 272:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_INTR_RX_MASK_REG     = Rx_Left_UART_DEFAULT_INTR_RX_MASK;
  98              		.loc 1 272 0
  99 006a 144B     		ldr	r3, .L2+64
 100 006c 0422     		mov	r2, #4
 101 006e 1A60     		str	r2, [r3]
 273:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_INTR_TX_MASK_REG     = Rx_Left_UART_DEFAULT_INTR_TX_MASK;
 102              		.loc 1 273 0
 103 0070 134B     		ldr	r3, .L2+68
 104 0072 0022     		mov	r2, #0
 105 0074 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 275:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #if(Rx_Left_INTERNAL_RX_SW_BUFFER_CONST)
 276:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_rxBufferHead     = 0u;
 277:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_rxBufferTail     = 0u;
 278:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_rxBufferOverflow = 0u;
 279:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #endif /* (Rx_Left_INTERNAL_RX_SW_BUFFER_CONST) */
 280:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 281:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #if(Rx_Left_INTERNAL_TX_SW_BUFFER_CONST)
 282:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_txBufferHead = 0u;
 283:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_txBufferTail = 0u;
 284:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     #endif /* (Rx_Left_INTERNAL_TX_SW_BUFFER_CONST) */
 285:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     }
 106              		.loc 1 285 0
 107 0076 BD46     		mov	sp, r7
 108              		@ sp needed
 109 0078 80BD     		pop	{r7, pc}
 110              	.L3:
 111 007a C046     		.align	2
 112              	.L2:
 113 007c 00000640 		.word	1074135040
 114 0080 0B000002 		.word	33554443
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 8


 115 0084 40000640 		.word	1074135104
 116 0088 48000640 		.word	1074135112
 117 008c 00030640 		.word	1074135808
 118 0090 07000080 		.word	-2147483641
 119 0094 04030640 		.word	1074135812
 120 0098 10030640 		.word	1074135824
 121 009c 44000640 		.word	1074135108
 122 00a0 00020640 		.word	1074135552
 123 00a4 04020640 		.word	1074135556
 124 00a8 00000000 		.word	Rx_Left_SPI_UART_ISR
 125 00ac 880E0640 		.word	1074138760
 126 00b0 C80E0640 		.word	1074138824
 127 00b4 480F0640 		.word	1074138952
 128 00b8 080F0640 		.word	1074138888
 129 00bc C80F0640 		.word	1074139080
 130 00c0 880F0640 		.word	1074139016
 131              		.cfi_endproc
 132              	.LFE0:
 133              		.size	Rx_Left_UartInit, .-Rx_Left_UartInit
 134              		.section	.text.Rx_Left_UartSetRxAddress,"ax",%progbits
 135              		.align	2
 136              		.global	Rx_Left_UartSetRxAddress
 137              		.code	16
 138              		.thumb_func
 139              		.type	Rx_Left_UartSetRxAddress, %function
 140              	Rx_Left_UartSetRxAddress:
 141              	.LFB1:
 286:.\Generated_Source\PSoC4/Rx_Left_UART.c **** #endif /* (Rx_Left_SCB_MODE_UNCONFIG_CONST_CFG) */
 287:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 288:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 289:.\Generated_Source\PSoC4/Rx_Left_UART.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Function Name: Rx_Left_UartSetRxAddress
 291:.\Generated_Source\PSoC4/Rx_Left_UART.c **** ********************************************************************************
 292:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
 293:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Summary:
 294:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 295:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  Multiprocessor mode.
 296:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
 297:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Parameters:
 298:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  address: Address for hardware address detection.
 299:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
 300:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Return:
 301:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  None
 302:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
 303:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/Rx_Left_UART.c **** void Rx_Left_UartSetRxAddress(uint32 address)
 305:.\Generated_Source\PSoC4/Rx_Left_UART.c **** {
 142              		.loc 1 305 0
 143              		.cfi_startproc
 144 0000 80B5     		push	{r7, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 84B0     		sub	sp, sp, #16
 149              		.cfi_def_cfa_offset 24
 150 0004 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 9


 152 0006 7860     		str	r0, [r7, #4]
 306:.\Generated_Source\PSoC4/Rx_Left_UART.c ****      uint32 matchReg;
 307:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 308:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     matchReg = Rx_Left_RX_MATCH_REG;
 153              		.loc 1 308 0
 154 0008 094B     		ldr	r3, .L5
 155 000a 1B68     		ldr	r3, [r3]
 156 000c FB60     		str	r3, [r7, #12]
 309:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 310:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     matchReg &= ((uint32) ~Rx_Left_RX_MATCH_ADDR_MASK); /* Clear address bits */
 157              		.loc 1 310 0
 158 000e FB68     		ldr	r3, [r7, #12]
 159 0010 FF22     		mov	r2, #255
 160 0012 9343     		bic	r3, r2
 161 0014 FB60     		str	r3, [r7, #12]
 311:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     matchReg |= ((uint32)  (address & Rx_Left_RX_MATCH_ADDR_MASK)); /* Set address  */
 162              		.loc 1 311 0
 163 0016 7A68     		ldr	r2, [r7, #4]
 164 0018 FF23     		mov	r3, #255
 165 001a 1340     		and	r3, r2
 166 001c FA68     		ldr	r2, [r7, #12]
 167 001e 1343     		orr	r3, r2
 168 0020 FB60     		str	r3, [r7, #12]
 312:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 313:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     Rx_Left_RX_MATCH_REG = matchReg;
 169              		.loc 1 313 0
 170 0022 034B     		ldr	r3, .L5
 171 0024 FA68     		ldr	r2, [r7, #12]
 172 0026 1A60     		str	r2, [r3]
 314:.\Generated_Source\PSoC4/Rx_Left_UART.c **** }
 173              		.loc 1 314 0
 174 0028 BD46     		mov	sp, r7
 175 002a 04B0     		add	sp, sp, #16
 176              		@ sp needed
 177 002c 80BD     		pop	{r7, pc}
 178              	.L6:
 179 002e C046     		.align	2
 180              	.L5:
 181 0030 10030640 		.word	1074135824
 182              		.cfi_endproc
 183              	.LFE1:
 184              		.size	Rx_Left_UartSetRxAddress, .-Rx_Left_UartSetRxAddress
 185              		.section	.text.Rx_Left_UartSetRxAddressMask,"ax",%progbits
 186              		.align	2
 187              		.global	Rx_Left_UartSetRxAddressMask
 188              		.code	16
 189              		.thumb_func
 190              		.type	Rx_Left_UartSetRxAddressMask, %function
 191              	Rx_Left_UartSetRxAddressMask:
 192              	.LFB2:
 315:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 316:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 317:.\Generated_Source\PSoC4/Rx_Left_UART.c **** /*******************************************************************************
 318:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Function Name: Rx_Left_UartSetRxAddressMask
 319:.\Generated_Source\PSoC4/Rx_Left_UART.c **** ********************************************************************************
 320:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
 321:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Summary:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 10


 322:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 323:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
 324:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Parameters:
 325:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  addressMask: Address mask.
 326:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *   0 - address bit does not care while comparison.
 327:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *   1 - address bit is significant while comparison.
 328:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
 329:.\Generated_Source\PSoC4/Rx_Left_UART.c **** * Return:
 330:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *  None
 331:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *
 332:.\Generated_Source\PSoC4/Rx_Left_UART.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC4/Rx_Left_UART.c **** void Rx_Left_UartSetRxAddressMask(uint32 addressMask)
 334:.\Generated_Source\PSoC4/Rx_Left_UART.c **** {
 193              		.loc 1 334 0
 194              		.cfi_startproc
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 84B0     		sub	sp, sp, #16
 200              		.cfi_def_cfa_offset 24
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 335:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     uint32 matchReg;
 336:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 337:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     matchReg = Rx_Left_RX_MATCH_REG;
 204              		.loc 1 337 0
 205 0008 084B     		ldr	r3, .L8
 206 000a 1B68     		ldr	r3, [r3]
 207 000c FB60     		str	r3, [r7, #12]
 338:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 339:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     matchReg &= ((uint32) ~Rx_Left_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 208              		.loc 1 339 0
 209 000e FA68     		ldr	r2, [r7, #12]
 210 0010 074B     		ldr	r3, .L8+4
 211 0012 1340     		and	r3, r2
 212 0014 FB60     		str	r3, [r7, #12]
 340:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     matchReg |= ((uint32) (addressMask << Rx_Left_RX_MATCH_MASK_POS));
 213              		.loc 1 340 0
 214 0016 7B68     		ldr	r3, [r7, #4]
 215 0018 1B04     		lsl	r3, r3, #16
 216 001a FA68     		ldr	r2, [r7, #12]
 217 001c 1343     		orr	r3, r2
 218 001e FB60     		str	r3, [r7, #12]
 341:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 342:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     Rx_Left_RX_MATCH_REG = matchReg;
 219              		.loc 1 342 0
 220 0020 024B     		ldr	r3, .L8
 221 0022 FA68     		ldr	r2, [r7, #12]
 222 0024 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/Rx_Left_UART.c **** }
 223              		.loc 1 343 0
 224 0026 BD46     		mov	sp, r7
 225 0028 04B0     		add	sp, sp, #16
 226              		@ sp needed
 227 002a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 11


 228              	.L9:
 229              		.align	2
 230              	.L8:
 231 002c 10030640 		.word	1074135824
 232 0030 FFFF00FF 		.word	-16711681
 233              		.cfi_endproc
 234              	.LFE2:
 235              		.size	Rx_Left_UartSetRxAddressMask, .-Rx_Left_UartSetRxAddressMask
 236              		.section	.text.Rx_Left_UartGetChar,"ax",%progbits
 237              		.align	2
 238              		.global	Rx_Left_UartGetChar
 239              		.code	16
 240              		.thumb_func
 241              		.type	Rx_Left_UartGetChar, %function
 242              	Rx_Left_UartGetChar:
 243              	.LFB3:
 344:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 345:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 346:.\Generated_Source\PSoC4/Rx_Left_UART.c **** #if(Rx_Left_UART_RX_DIRECTION)
 347:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     /*******************************************************************************
 348:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Function Name: Rx_Left_UartGetChar
 349:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     ********************************************************************************
 350:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 351:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Summary:
 352:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  Retrieves the next data element from the receive buffer.
 353:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  This function is designed for ASCII characters and returns a char
 354:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  where 1 to 255 are valid characters and 0 indicates an error occurred or
 355:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  no data present.
 356:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  - The RX software buffer is disabled: returns the data element
 357:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *    retrieved from the RX FIFO.
 358:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *    Undefined data will be returned if the RX FIFO is empty.
 359:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  - The RX software buffer is enabled: returns the data element from
 360:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *    the software receive buffer.
 361:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 362:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Parameters:
 363:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  None
 364:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 365:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Return:
 366:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  The next data element from the receive buffer.
 367:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  ASCII character values from 1 to 255 are valid.
 368:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  A returned zero signifies an error condition or no data available.
 369:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 370:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Side Effects:
 371:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 372:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  and software buffer usage.
 373:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  RX software buffer is enabled: The internal software buffer overflow
 374:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  does not treat as an error condition.
 375:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 376:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 377:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *******************************************************************************/
 378:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     uint32 Rx_Left_UartGetChar(void)
 379:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     {
 244              		.loc 1 379 0
 245              		.cfi_startproc
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 12


 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 380:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         uint32 rxData = 0u;
 254              		.loc 1 380 0
 255 0006 0023     		mov	r3, #0
 256 0008 7B60     		str	r3, [r7, #4]
 381:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 382:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Reads data only if there is data to read */
 383:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         if(0u != Rx_Left_SpiUartGetRxBufferSize())
 257              		.loc 1 383 0
 258 000a FFF7FEFF 		bl	Rx_Left_SpiUartGetRxBufferSize
 259 000e 031C     		mov	r3, r0
 260 0010 002B     		cmp	r3, #0
 261 0012 03D0     		beq	.L11
 384:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         {
 385:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             rxData = Rx_Left_SpiUartReadRxData();
 262              		.loc 1 385 0
 263 0014 FFF7FEFF 		bl	Rx_Left_SpiUartReadRxData
 264 0018 031C     		mov	r3, r0
 265 001a 7B60     		str	r3, [r7, #4]
 266              	.L11:
 386:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         }
 387:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 388:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         if(Rx_Left_CHECK_INTR_RX(Rx_Left_INTR_RX_ERR))
 267              		.loc 1 388 0
 268 001c 084B     		ldr	r3, .L14
 269 001e 1A68     		ldr	r2, [r3]
 270 0020 D823     		mov	r3, #216
 271 0022 9B00     		lsl	r3, r3, #2
 272 0024 1340     		and	r3, r2
 273 0026 05D0     		beq	.L12
 389:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         {
 390:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 274              		.loc 1 390 0
 275 0028 0023     		mov	r3, #0
 276 002a 7B60     		str	r3, [r7, #4]
 391:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_ClearRxInterruptSource(Rx_Left_INTR_RX_ERR);
 277              		.loc 1 391 0
 278 002c 044B     		ldr	r3, .L14
 279 002e D822     		mov	r2, #216
 280 0030 9200     		lsl	r2, r2, #2
 281 0032 1A60     		str	r2, [r3]
 282              	.L12:
 392:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         }
 393:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 394:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         return(rxData);
 283              		.loc 1 394 0
 284 0034 7B68     		ldr	r3, [r7, #4]
 395:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     }
 285              		.loc 1 395 0
 286 0036 181C     		mov	r0, r3
 287 0038 BD46     		mov	sp, r7
 288 003a 02B0     		add	sp, sp, #8
 289              		@ sp needed
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 13


 290 003c 80BD     		pop	{r7, pc}
 291              	.L15:
 292 003e C046     		.align	2
 293              	.L14:
 294 0040 C00F0640 		.word	1074139072
 295              		.cfi_endproc
 296              	.LFE3:
 297              		.size	Rx_Left_UartGetChar, .-Rx_Left_UartGetChar
 298              		.section	.text.Rx_Left_UartGetByte,"ax",%progbits
 299              		.align	2
 300              		.global	Rx_Left_UartGetByte
 301              		.code	16
 302              		.thumb_func
 303              		.type	Rx_Left_UartGetByte, %function
 304              	Rx_Left_UartGetByte:
 305              	.LFB4:
 396:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 397:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 398:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     /*******************************************************************************
 399:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Function Name: Rx_Left_UartGetByte
 400:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     ********************************************************************************
 401:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 402:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Summary:
 403:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 404:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  received byte and error condition.
 405:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 406:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 407:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *     empty.
 408:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 409:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *     software receive buffer.
 410:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 411:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Parameters:
 412:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  None
 413:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 414:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Return:
 415:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  Bits 7-0 contain the next data element from the receive buffer and
 416:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  other bits contain the error condition.
 417:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 418:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     * Side Effects:
 419:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 420:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  and software buffer usage.
 421:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  RX software buffer is disabled: The internal software buffer overflow
 422:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  is not returned as status by this function.
 423:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 424:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *
 425:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     *******************************************************************************/
 426:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     uint32 Rx_Left_UartGetByte(void)
 427:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     {
 306              		.loc 1 427 0
 307              		.cfi_startproc
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 84B0     		sub	sp, sp, #16
 313              		.cfi_def_cfa_offset 24
 314 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 14


 315              		.cfi_def_cfa_register 7
 428:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         uint32 rxData;
 429:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         uint32 tmpStatus;
 430:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         uint32 intSourceMask;
 431:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 432:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         intSourceMask = Rx_Left_SpiUartDisableIntRx();
 316              		.loc 1 432 0
 317 0006 FFF7FEFF 		bl	Rx_Left_SpiUartDisableIntRx
 318 000a 031C     		mov	r3, r0
 319 000c BB60     		str	r3, [r7, #8]
 433:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 434:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         if(0u != Rx_Left_SpiUartGetRxBufferSize())
 320              		.loc 1 434 0
 321 000e FFF7FEFF 		bl	Rx_Left_SpiUartGetRxBufferSize
 322 0012 031C     		mov	r3, r0
 323 0014 002B     		cmp	r3, #0
 324 0016 07D0     		beq	.L17
 435:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         {
 436:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 437:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             * buffer.
 438:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             */
 439:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_SpiUartEnableIntRx(intSourceMask);
 325              		.loc 1 439 0
 326 0018 104B     		ldr	r3, .L20
 327 001a BA68     		ldr	r2, [r7, #8]
 328 001c 1A60     		str	r2, [r3]
 440:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 441:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Get received byte */
 442:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             rxData = Rx_Left_SpiUartReadRxData();
 329              		.loc 1 442 0
 330 001e FFF7FEFF 		bl	Rx_Left_SpiUartReadRxData
 331 0022 031C     		mov	r3, r0
 332 0024 FB60     		str	r3, [r7, #12]
 333 0026 05E0     		b	.L18
 334              	.L17:
 443:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         }
 444:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         else
 445:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         {
 446:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the case
 447:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             * of empty. Otherwise the first received byte will be read.
 448:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             */
 449:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             rxData = Rx_Left_RX_FIFO_RD_REG;
 335              		.loc 1 449 0
 336 0028 0D4B     		ldr	r3, .L20+4
 337 002a 1B68     		ldr	r3, [r3]
 338 002c FB60     		str	r3, [r7, #12]
 450:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 451:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             /* Enables interrupt to receive more bytes.
 452:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             * The RX_NOT_EMPTY interrupt is cleared by the interrupt routine
 453:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             * in case the byte was received and read by code above.
 454:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             */
 455:.\Generated_Source\PSoC4/Rx_Left_UART.c ****             Rx_Left_SpiUartEnableIntRx(intSourceMask);
 339              		.loc 1 455 0
 340 002e 0B4B     		ldr	r3, .L20
 341 0030 BA68     		ldr	r2, [r7, #8]
 342 0032 1A60     		str	r2, [r3]
 343              	.L18:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 15


 456:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         }
 457:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 458:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Get and clear RX error mask */
 459:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         tmpStatus = (Rx_Left_GetRxInterruptSource() & Rx_Left_INTR_RX_ERR);
 344              		.loc 1 459 0
 345 0034 0B4B     		ldr	r3, .L20+8
 346 0036 1A68     		ldr	r2, [r3]
 347 0038 D823     		mov	r3, #216
 348 003a 9B00     		lsl	r3, r3, #2
 349 003c 1340     		and	r3, r2
 350 003e 7B60     		str	r3, [r7, #4]
 460:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         Rx_Left_ClearRxInterruptSource(Rx_Left_INTR_RX_ERR);
 351              		.loc 1 460 0
 352 0040 084B     		ldr	r3, .L20+8
 353 0042 D822     		mov	r2, #216
 354 0044 9200     		lsl	r2, r2, #2
 355 0046 1A60     		str	r2, [r3]
 461:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 462:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         /* Puts together data and error status:
 463:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 464:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         */
 465:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 356              		.loc 1 465 0
 357 0048 7B68     		ldr	r3, [r7, #4]
 358 004a 1B02     		lsl	r3, r3, #8
 359 004c FA68     		ldr	r2, [r7, #12]
 360 004e 1343     		orr	r3, r2
 361 0050 FB60     		str	r3, [r7, #12]
 466:.\Generated_Source\PSoC4/Rx_Left_UART.c **** 
 467:.\Generated_Source\PSoC4/Rx_Left_UART.c ****         return(rxData);
 362              		.loc 1 467 0
 363 0052 FB68     		ldr	r3, [r7, #12]
 468:.\Generated_Source\PSoC4/Rx_Left_UART.c ****     }
 364              		.loc 1 468 0
 365 0054 181C     		mov	r0, r3
 366 0056 BD46     		mov	sp, r7
 367 0058 04B0     		add	sp, sp, #16
 368              		@ sp needed
 369 005a 80BD     		pop	{r7, pc}
 370              	.L21:
 371              		.align	2
 372              	.L20:
 373 005c C80F0640 		.word	1074139080
 374 0060 40030640 		.word	1074135872
 375 0064 C00F0640 		.word	1074139072
 376              		.cfi_endproc
 377              	.LFE4:
 378              		.size	Rx_Left_UartGetByte, .-Rx_Left_UartGetByte
 379              		.text
 380              	.Letext0:
 381              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 382              		.section	.debug_info,"",%progbits
 383              	.Ldebug_info0:
 384 0000 94010000 		.4byte	0x194
 385 0004 0400     		.2byte	0x4
 386 0006 00000000 		.4byte	.Ldebug_abbrev0
 387 000a 04       		.byte	0x4
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 16


 388 000b 01       		.uleb128 0x1
 389 000c 45000000 		.4byte	.LASF25
 390 0010 01       		.byte	0x1
 391 0011 7A010000 		.4byte	.LASF26
 392 0015 01020000 		.4byte	.LASF27
 393 0019 00000000 		.4byte	.Ldebug_ranges0+0
 394 001d 00000000 		.4byte	0
 395 0021 00000000 		.4byte	.Ldebug_line0
 396 0025 02       		.uleb128 0x2
 397 0026 01       		.byte	0x1
 398 0027 06       		.byte	0x6
 399 0028 F5010000 		.4byte	.LASF0
 400 002c 02       		.uleb128 0x2
 401 002d 01       		.byte	0x1
 402 002e 08       		.byte	0x8
 403 002f C1000000 		.4byte	.LASF1
 404 0033 02       		.uleb128 0x2
 405 0034 02       		.byte	0x2
 406 0035 05       		.byte	0x5
 407 0036 BE010000 		.4byte	.LASF2
 408 003a 02       		.uleb128 0x2
 409 003b 02       		.byte	0x2
 410 003c 07       		.byte	0x7
 411 003d 06000000 		.4byte	.LASF3
 412 0041 02       		.uleb128 0x2
 413 0042 04       		.byte	0x4
 414 0043 05       		.byte	0x5
 415 0044 D9010000 		.4byte	.LASF4
 416 0048 02       		.uleb128 0x2
 417 0049 04       		.byte	0x4
 418 004a 07       		.byte	0x7
 419 004b CF000000 		.4byte	.LASF5
 420 004f 02       		.uleb128 0x2
 421 0050 08       		.byte	0x8
 422 0051 05       		.byte	0x5
 423 0052 AB010000 		.4byte	.LASF6
 424 0056 02       		.uleb128 0x2
 425 0057 08       		.byte	0x8
 426 0058 07       		.byte	0x7
 427 0059 4F010000 		.4byte	.LASF7
 428 005d 03       		.uleb128 0x3
 429 005e 04       		.byte	0x4
 430 005f 05       		.byte	0x5
 431 0060 696E7400 		.ascii	"int\000"
 432 0064 02       		.uleb128 0x2
 433 0065 04       		.byte	0x4
 434 0066 07       		.byte	0x7
 435 0067 19000000 		.4byte	.LASF8
 436 006b 04       		.uleb128 0x4
 437 006c E1000000 		.4byte	.LASF9
 438 0070 02       		.byte	0x2
 439 0071 A1       		.byte	0xa1
 440 0072 2C000000 		.4byte	0x2c
 441 0076 04       		.uleb128 0x4
 442 0077 1E010000 		.4byte	.LASF10
 443 007b 02       		.byte	0x2
 444 007c A3       		.byte	0xa3
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 17


 445 007d 48000000 		.4byte	0x48
 446 0081 02       		.uleb128 0x2
 447 0082 04       		.byte	0x4
 448 0083 04       		.byte	0x4
 449 0084 3F000000 		.4byte	.LASF11
 450 0088 02       		.uleb128 0x2
 451 0089 08       		.byte	0x8
 452 008a 04       		.byte	0x4
 453 008b 17010000 		.4byte	.LASF12
 454 008f 02       		.uleb128 0x2
 455 0090 01       		.byte	0x1
 456 0091 08       		.byte	0x8
 457 0092 B9010000 		.4byte	.LASF13
 458 0096 05       		.uleb128 0x5
 459 0097 00000000 		.4byte	.LASF14
 460 009b 02       		.byte	0x2
 461 009c 4D01     		.2byte	0x14d
 462 009e A2000000 		.4byte	0xa2
 463 00a2 06       		.uleb128 0x6
 464 00a3 76000000 		.4byte	0x76
 465 00a7 02       		.uleb128 0x2
 466 00a8 04       		.byte	0x4
 467 00a9 07       		.byte	0x7
 468 00aa A2010000 		.4byte	.LASF15
 469 00ae 07       		.uleb128 0x7
 470 00af C8010000 		.4byte	.LASF28
 471 00b3 01       		.byte	0x1
 472 00b4 E6       		.byte	0xe6
 473 00b5 00000000 		.4byte	.LFB0
 474 00b9 C4000000 		.4byte	.LFE0-.LFB0
 475 00bd 01       		.uleb128 0x1
 476 00be 9C       		.byte	0x9c
 477 00bf 08       		.uleb128 0x8
 478 00c0 26000000 		.4byte	.LASF16
 479 00c4 01       		.byte	0x1
 480 00c5 3001     		.2byte	0x130
 481 00c7 00000000 		.4byte	.LFB1
 482 00cb 34000000 		.4byte	.LFE1-.LFB1
 483 00cf 01       		.uleb128 0x1
 484 00d0 9C       		.byte	0x9c
 485 00d1 F4000000 		.4byte	0xf4
 486 00d5 09       		.uleb128 0x9
 487 00d6 47010000 		.4byte	.LASF18
 488 00da 01       		.byte	0x1
 489 00db 3001     		.2byte	0x130
 490 00dd 76000000 		.4byte	0x76
 491 00e1 02       		.uleb128 0x2
 492 00e2 91       		.byte	0x91
 493 00e3 6C       		.sleb128 -20
 494 00e4 0A       		.uleb128 0xa
 495 00e5 EC010000 		.4byte	.LASF20
 496 00e9 01       		.byte	0x1
 497 00ea 3201     		.2byte	0x132
 498 00ec 76000000 		.4byte	0x76
 499 00f0 02       		.uleb128 0x2
 500 00f1 91       		.byte	0x91
 501 00f2 74       		.sleb128 -12
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 18


 502 00f3 00       		.byte	0
 503 00f4 08       		.uleb128 0x8
 504 00f5 FA000000 		.4byte	.LASF17
 505 00f9 01       		.byte	0x1
 506 00fa 4D01     		.2byte	0x14d
 507 00fc 00000000 		.4byte	.LFB2
 508 0100 34000000 		.4byte	.LFE2-.LFB2
 509 0104 01       		.uleb128 0x1
 510 0105 9C       		.byte	0x9c
 511 0106 29010000 		.4byte	0x129
 512 010a 09       		.uleb128 0x9
 513 010b EE000000 		.4byte	.LASF19
 514 010f 01       		.byte	0x1
 515 0110 4D01     		.2byte	0x14d
 516 0112 76000000 		.4byte	0x76
 517 0116 02       		.uleb128 0x2
 518 0117 91       		.byte	0x91
 519 0118 6C       		.sleb128 -20
 520 0119 0A       		.uleb128 0xa
 521 011a EC010000 		.4byte	.LASF20
 522 011e 01       		.byte	0x1
 523 011f 4F01     		.2byte	0x14f
 524 0121 76000000 		.4byte	0x76
 525 0125 02       		.uleb128 0x2
 526 0126 91       		.byte	0x91
 527 0127 74       		.sleb128 -12
 528 0128 00       		.byte	0
 529 0129 0B       		.uleb128 0xb
 530 012a 25010000 		.4byte	.LASF29
 531 012e 01       		.byte	0x1
 532 012f 7A01     		.2byte	0x17a
 533 0131 76000000 		.4byte	0x76
 534 0135 00000000 		.4byte	.LFB3
 535 0139 44000000 		.4byte	.LFE3-.LFB3
 536 013d 01       		.uleb128 0x1
 537 013e 9C       		.byte	0x9c
 538 013f 53010000 		.4byte	0x153
 539 0143 0A       		.uleb128 0xa
 540 0144 E7000000 		.4byte	.LASF21
 541 0148 01       		.byte	0x1
 542 0149 7C01     		.2byte	0x17c
 543 014b 76000000 		.4byte	0x76
 544 014f 02       		.uleb128 0x2
 545 0150 91       		.byte	0x91
 546 0151 74       		.sleb128 -12
 547 0152 00       		.byte	0
 548 0153 0C       		.uleb128 0xc
 549 0154 66010000 		.4byte	.LASF22
 550 0158 01       		.byte	0x1
 551 0159 AA01     		.2byte	0x1aa
 552 015b 76000000 		.4byte	0x76
 553 015f 00000000 		.4byte	.LFB4
 554 0163 68000000 		.4byte	.LFE4-.LFB4
 555 0167 01       		.uleb128 0x1
 556 0168 9C       		.byte	0x9c
 557 0169 0A       		.uleb128 0xa
 558 016a E7000000 		.4byte	.LASF21
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 19


 559 016e 01       		.byte	0x1
 560 016f AC01     		.2byte	0x1ac
 561 0171 76000000 		.4byte	0x76
 562 0175 02       		.uleb128 0x2
 563 0176 91       		.byte	0x91
 564 0177 74       		.sleb128 -12
 565 0178 0A       		.uleb128 0xa
 566 0179 E2010000 		.4byte	.LASF23
 567 017d 01       		.byte	0x1
 568 017e AD01     		.2byte	0x1ad
 569 0180 76000000 		.4byte	0x76
 570 0184 02       		.uleb128 0x2
 571 0185 91       		.byte	0x91
 572 0186 6C       		.sleb128 -20
 573 0187 0A       		.uleb128 0xa
 574 0188 39010000 		.4byte	.LASF24
 575 018c 01       		.byte	0x1
 576 018d AE01     		.2byte	0x1ae
 577 018f 76000000 		.4byte	0x76
 578 0193 02       		.uleb128 0x2
 579 0194 91       		.byte	0x91
 580 0195 70       		.sleb128 -16
 581 0196 00       		.byte	0
 582 0197 00       		.byte	0
 583              		.section	.debug_abbrev,"",%progbits
 584              	.Ldebug_abbrev0:
 585 0000 01       		.uleb128 0x1
 586 0001 11       		.uleb128 0x11
 587 0002 01       		.byte	0x1
 588 0003 25       		.uleb128 0x25
 589 0004 0E       		.uleb128 0xe
 590 0005 13       		.uleb128 0x13
 591 0006 0B       		.uleb128 0xb
 592 0007 03       		.uleb128 0x3
 593 0008 0E       		.uleb128 0xe
 594 0009 1B       		.uleb128 0x1b
 595 000a 0E       		.uleb128 0xe
 596 000b 55       		.uleb128 0x55
 597 000c 17       		.uleb128 0x17
 598 000d 11       		.uleb128 0x11
 599 000e 01       		.uleb128 0x1
 600 000f 10       		.uleb128 0x10
 601 0010 17       		.uleb128 0x17
 602 0011 00       		.byte	0
 603 0012 00       		.byte	0
 604 0013 02       		.uleb128 0x2
 605 0014 24       		.uleb128 0x24
 606 0015 00       		.byte	0
 607 0016 0B       		.uleb128 0xb
 608 0017 0B       		.uleb128 0xb
 609 0018 3E       		.uleb128 0x3e
 610 0019 0B       		.uleb128 0xb
 611 001a 03       		.uleb128 0x3
 612 001b 0E       		.uleb128 0xe
 613 001c 00       		.byte	0
 614 001d 00       		.byte	0
 615 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 20


 616 001f 24       		.uleb128 0x24
 617 0020 00       		.byte	0
 618 0021 0B       		.uleb128 0xb
 619 0022 0B       		.uleb128 0xb
 620 0023 3E       		.uleb128 0x3e
 621 0024 0B       		.uleb128 0xb
 622 0025 03       		.uleb128 0x3
 623 0026 08       		.uleb128 0x8
 624 0027 00       		.byte	0
 625 0028 00       		.byte	0
 626 0029 04       		.uleb128 0x4
 627 002a 16       		.uleb128 0x16
 628 002b 00       		.byte	0
 629 002c 03       		.uleb128 0x3
 630 002d 0E       		.uleb128 0xe
 631 002e 3A       		.uleb128 0x3a
 632 002f 0B       		.uleb128 0xb
 633 0030 3B       		.uleb128 0x3b
 634 0031 0B       		.uleb128 0xb
 635 0032 49       		.uleb128 0x49
 636 0033 13       		.uleb128 0x13
 637 0034 00       		.byte	0
 638 0035 00       		.byte	0
 639 0036 05       		.uleb128 0x5
 640 0037 16       		.uleb128 0x16
 641 0038 00       		.byte	0
 642 0039 03       		.uleb128 0x3
 643 003a 0E       		.uleb128 0xe
 644 003b 3A       		.uleb128 0x3a
 645 003c 0B       		.uleb128 0xb
 646 003d 3B       		.uleb128 0x3b
 647 003e 05       		.uleb128 0x5
 648 003f 49       		.uleb128 0x49
 649 0040 13       		.uleb128 0x13
 650 0041 00       		.byte	0
 651 0042 00       		.byte	0
 652 0043 06       		.uleb128 0x6
 653 0044 35       		.uleb128 0x35
 654 0045 00       		.byte	0
 655 0046 49       		.uleb128 0x49
 656 0047 13       		.uleb128 0x13
 657 0048 00       		.byte	0
 658 0049 00       		.byte	0
 659 004a 07       		.uleb128 0x7
 660 004b 2E       		.uleb128 0x2e
 661 004c 00       		.byte	0
 662 004d 3F       		.uleb128 0x3f
 663 004e 19       		.uleb128 0x19
 664 004f 03       		.uleb128 0x3
 665 0050 0E       		.uleb128 0xe
 666 0051 3A       		.uleb128 0x3a
 667 0052 0B       		.uleb128 0xb
 668 0053 3B       		.uleb128 0x3b
 669 0054 0B       		.uleb128 0xb
 670 0055 27       		.uleb128 0x27
 671 0056 19       		.uleb128 0x19
 672 0057 11       		.uleb128 0x11
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 21


 673 0058 01       		.uleb128 0x1
 674 0059 12       		.uleb128 0x12
 675 005a 06       		.uleb128 0x6
 676 005b 40       		.uleb128 0x40
 677 005c 18       		.uleb128 0x18
 678 005d 9642     		.uleb128 0x2116
 679 005f 19       		.uleb128 0x19
 680 0060 00       		.byte	0
 681 0061 00       		.byte	0
 682 0062 08       		.uleb128 0x8
 683 0063 2E       		.uleb128 0x2e
 684 0064 01       		.byte	0x1
 685 0065 3F       		.uleb128 0x3f
 686 0066 19       		.uleb128 0x19
 687 0067 03       		.uleb128 0x3
 688 0068 0E       		.uleb128 0xe
 689 0069 3A       		.uleb128 0x3a
 690 006a 0B       		.uleb128 0xb
 691 006b 3B       		.uleb128 0x3b
 692 006c 05       		.uleb128 0x5
 693 006d 27       		.uleb128 0x27
 694 006e 19       		.uleb128 0x19
 695 006f 11       		.uleb128 0x11
 696 0070 01       		.uleb128 0x1
 697 0071 12       		.uleb128 0x12
 698 0072 06       		.uleb128 0x6
 699 0073 40       		.uleb128 0x40
 700 0074 18       		.uleb128 0x18
 701 0075 9742     		.uleb128 0x2117
 702 0077 19       		.uleb128 0x19
 703 0078 01       		.uleb128 0x1
 704 0079 13       		.uleb128 0x13
 705 007a 00       		.byte	0
 706 007b 00       		.byte	0
 707 007c 09       		.uleb128 0x9
 708 007d 05       		.uleb128 0x5
 709 007e 00       		.byte	0
 710 007f 03       		.uleb128 0x3
 711 0080 0E       		.uleb128 0xe
 712 0081 3A       		.uleb128 0x3a
 713 0082 0B       		.uleb128 0xb
 714 0083 3B       		.uleb128 0x3b
 715 0084 05       		.uleb128 0x5
 716 0085 49       		.uleb128 0x49
 717 0086 13       		.uleb128 0x13
 718 0087 02       		.uleb128 0x2
 719 0088 18       		.uleb128 0x18
 720 0089 00       		.byte	0
 721 008a 00       		.byte	0
 722 008b 0A       		.uleb128 0xa
 723 008c 34       		.uleb128 0x34
 724 008d 00       		.byte	0
 725 008e 03       		.uleb128 0x3
 726 008f 0E       		.uleb128 0xe
 727 0090 3A       		.uleb128 0x3a
 728 0091 0B       		.uleb128 0xb
 729 0092 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 22


 730 0093 05       		.uleb128 0x5
 731 0094 49       		.uleb128 0x49
 732 0095 13       		.uleb128 0x13
 733 0096 02       		.uleb128 0x2
 734 0097 18       		.uleb128 0x18
 735 0098 00       		.byte	0
 736 0099 00       		.byte	0
 737 009a 0B       		.uleb128 0xb
 738 009b 2E       		.uleb128 0x2e
 739 009c 01       		.byte	0x1
 740 009d 3F       		.uleb128 0x3f
 741 009e 19       		.uleb128 0x19
 742 009f 03       		.uleb128 0x3
 743 00a0 0E       		.uleb128 0xe
 744 00a1 3A       		.uleb128 0x3a
 745 00a2 0B       		.uleb128 0xb
 746 00a3 3B       		.uleb128 0x3b
 747 00a4 05       		.uleb128 0x5
 748 00a5 27       		.uleb128 0x27
 749 00a6 19       		.uleb128 0x19
 750 00a7 49       		.uleb128 0x49
 751 00a8 13       		.uleb128 0x13
 752 00a9 11       		.uleb128 0x11
 753 00aa 01       		.uleb128 0x1
 754 00ab 12       		.uleb128 0x12
 755 00ac 06       		.uleb128 0x6
 756 00ad 40       		.uleb128 0x40
 757 00ae 18       		.uleb128 0x18
 758 00af 9642     		.uleb128 0x2116
 759 00b1 19       		.uleb128 0x19
 760 00b2 01       		.uleb128 0x1
 761 00b3 13       		.uleb128 0x13
 762 00b4 00       		.byte	0
 763 00b5 00       		.byte	0
 764 00b6 0C       		.uleb128 0xc
 765 00b7 2E       		.uleb128 0x2e
 766 00b8 01       		.byte	0x1
 767 00b9 3F       		.uleb128 0x3f
 768 00ba 19       		.uleb128 0x19
 769 00bb 03       		.uleb128 0x3
 770 00bc 0E       		.uleb128 0xe
 771 00bd 3A       		.uleb128 0x3a
 772 00be 0B       		.uleb128 0xb
 773 00bf 3B       		.uleb128 0x3b
 774 00c0 05       		.uleb128 0x5
 775 00c1 27       		.uleb128 0x27
 776 00c2 19       		.uleb128 0x19
 777 00c3 49       		.uleb128 0x49
 778 00c4 13       		.uleb128 0x13
 779 00c5 11       		.uleb128 0x11
 780 00c6 01       		.uleb128 0x1
 781 00c7 12       		.uleb128 0x12
 782 00c8 06       		.uleb128 0x6
 783 00c9 40       		.uleb128 0x40
 784 00ca 18       		.uleb128 0x18
 785 00cb 9642     		.uleb128 0x2116
 786 00cd 19       		.uleb128 0x19
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 23


 787 00ce 00       		.byte	0
 788 00cf 00       		.byte	0
 789 00d0 00       		.byte	0
 790              		.section	.debug_aranges,"",%progbits
 791 0000 3C000000 		.4byte	0x3c
 792 0004 0200     		.2byte	0x2
 793 0006 00000000 		.4byte	.Ldebug_info0
 794 000a 04       		.byte	0x4
 795 000b 00       		.byte	0
 796 000c 0000     		.2byte	0
 797 000e 0000     		.2byte	0
 798 0010 00000000 		.4byte	.LFB0
 799 0014 C4000000 		.4byte	.LFE0-.LFB0
 800 0018 00000000 		.4byte	.LFB1
 801 001c 34000000 		.4byte	.LFE1-.LFB1
 802 0020 00000000 		.4byte	.LFB2
 803 0024 34000000 		.4byte	.LFE2-.LFB2
 804 0028 00000000 		.4byte	.LFB3
 805 002c 44000000 		.4byte	.LFE3-.LFB3
 806 0030 00000000 		.4byte	.LFB4
 807 0034 68000000 		.4byte	.LFE4-.LFB4
 808 0038 00000000 		.4byte	0
 809 003c 00000000 		.4byte	0
 810              		.section	.debug_ranges,"",%progbits
 811              	.Ldebug_ranges0:
 812 0000 00000000 		.4byte	.LFB0
 813 0004 C4000000 		.4byte	.LFE0
 814 0008 00000000 		.4byte	.LFB1
 815 000c 34000000 		.4byte	.LFE1
 816 0010 00000000 		.4byte	.LFB2
 817 0014 34000000 		.4byte	.LFE2
 818 0018 00000000 		.4byte	.LFB3
 819 001c 44000000 		.4byte	.LFE3
 820 0020 00000000 		.4byte	.LFB4
 821 0024 68000000 		.4byte	.LFE4
 822 0028 00000000 		.4byte	0
 823 002c 00000000 		.4byte	0
 824              		.section	.debug_line,"",%progbits
 825              	.Ldebug_line0:
 826 0000 D5000000 		.section	.debug_str,"MS",%progbits,1
 826      02004B00 
 826      00000201 
 826      FB0E0D00 
 826      01010101 
 827              	.LASF14:
 828 0000 72656733 		.ascii	"reg32\000"
 828      3200
 829              	.LASF3:
 830 0006 73686F72 		.ascii	"short unsigned int\000"
 830      7420756E 
 830      7369676E 
 830      65642069 
 830      6E7400
 831              	.LASF8:
 832 0019 756E7369 		.ascii	"unsigned int\000"
 832      676E6564 
 832      20696E74 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 24


 832      00
 833              	.LASF16:
 834 0026 52785F4C 		.ascii	"Rx_Left_UartSetRxAddress\000"
 834      6566745F 
 834      55617274 
 834      53657452 
 834      78416464 
 835              	.LASF11:
 836 003f 666C6F61 		.ascii	"float\000"
 836      7400
 837              	.LASF25:
 838 0045 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 838      4320342E 
 838      382E3420 
 838      32303134 
 838      30353236 
 839 0078 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 839      20726576 
 839      6973696F 
 839      6E203231 
 839      31333538 
 840 00ab 30202D66 		.ascii	"0 -ffunction-sections\000"
 840      66756E63 
 840      74696F6E 
 840      2D736563 
 840      74696F6E 
 841              	.LASF1:
 842 00c1 756E7369 		.ascii	"unsigned char\000"
 842      676E6564 
 842      20636861 
 842      7200
 843              	.LASF5:
 844 00cf 6C6F6E67 		.ascii	"long unsigned int\000"
 844      20756E73 
 844      69676E65 
 844      6420696E 
 844      7400
 845              	.LASF9:
 846 00e1 75696E74 		.ascii	"uint8\000"
 846      3800
 847              	.LASF21:
 848 00e7 72784461 		.ascii	"rxData\000"
 848      746100
 849              	.LASF19:
 850 00ee 61646472 		.ascii	"addressMask\000"
 850      6573734D 
 850      61736B00 
 851              	.LASF17:
 852 00fa 52785F4C 		.ascii	"Rx_Left_UartSetRxAddressMask\000"
 852      6566745F 
 852      55617274 
 852      53657452 
 852      78416464 
 853              	.LASF12:
 854 0117 646F7562 		.ascii	"double\000"
 854      6C6500
 855              	.LASF10:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 25


 856 011e 75696E74 		.ascii	"uint32\000"
 856      333200
 857              	.LASF29:
 858 0125 52785F4C 		.ascii	"Rx_Left_UartGetChar\000"
 858      6566745F 
 858      55617274 
 858      47657443 
 858      68617200 
 859              	.LASF24:
 860 0139 696E7453 		.ascii	"intSourceMask\000"
 860      6F757263 
 860      654D6173 
 860      6B00
 861              	.LASF18:
 862 0147 61646472 		.ascii	"address\000"
 862      65737300 
 863              	.LASF7:
 864 014f 6C6F6E67 		.ascii	"long long unsigned int\000"
 864      206C6F6E 
 864      6720756E 
 864      7369676E 
 864      65642069 
 865              	.LASF22:
 866 0166 52785F4C 		.ascii	"Rx_Left_UartGetByte\000"
 866      6566745F 
 866      55617274 
 866      47657442 
 866      79746500 
 867              	.LASF26:
 868 017a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Rx_Left_UART.c\000"
 868      6E657261 
 868      7465645F 
 868      536F7572 
 868      63655C50 
 869              	.LASF15:
 870 01a2 73697A65 		.ascii	"sizetype\000"
 870      74797065 
 870      00
 871              	.LASF6:
 872 01ab 6C6F6E67 		.ascii	"long long int\000"
 872      206C6F6E 
 872      6720696E 
 872      7400
 873              	.LASF13:
 874 01b9 63686172 		.ascii	"char\000"
 874      00
 875              	.LASF2:
 876 01be 73686F72 		.ascii	"short int\000"
 876      7420696E 
 876      7400
 877              	.LASF28:
 878 01c8 52785F4C 		.ascii	"Rx_Left_UartInit\000"
 878      6566745F 
 878      55617274 
 878      496E6974 
 878      00
 879              	.LASF4:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccN8SI5D.s 			page 26


 880 01d9 6C6F6E67 		.ascii	"long int\000"
 880      20696E74 
 880      00
 881              	.LASF23:
 882 01e2 746D7053 		.ascii	"tmpStatus\000"
 882      74617475 
 882      7300
 883              	.LASF20:
 884 01ec 6D617463 		.ascii	"matchReg\000"
 884      68526567 
 884      00
 885              	.LASF0:
 886 01f5 7369676E 		.ascii	"signed char\000"
 886      65642063 
 886      68617200 
 887              	.LASF27:
 888 0201 433A5C55 		.ascii	"C:\\Users\\Matthew Arbesfeld\\Documents\\PSoC Creat"
 888      73657273 
 888      5C4D6174 
 888      74686577 
 888      20417262 
 889 0230 6F725C42 		.ascii	"or\\BoxesUART\\Boxes4.cydsn\000"
 889      6F786573 
 889      55415254 
 889      5C426F78 
 889      6573342E 
 890              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
