--
--	Conversion of Boxes4.v to vh2:
--
--	Cypress Semiconductor - WARP Version 6.3 IR 41
--	Sat Apr 25 22:24:59 2015
--

USE cypress.cypress.all;
USE cypress.rtlpkg.all;
ENTITY top_RTL IS
ATTRIBUTE part_name of top_RTL:TYPE IS "cpsoc3";
END top_RTL;
--------------------------------------------------------
ARCHITECTURE R_T_L OF top_RTL IS
SIGNAL tmpOE__LED_net_0 : bit;
SIGNAL zero : bit;
SIGNAL tmpFB_0__LED_net_0 : bit;
SIGNAL tmpIO_0__LED_net_0 : bit;
TERMINAL tmpSIOVREF__LED_net_0 : bit;
SIGNAL one : bit;
SIGNAL tmpINTERRUPT_0__LED_net_0 : bit;
SIGNAL tmpOE__Button_net_0 : bit;
SIGNAL tmpFB_0__Button_net_0 : bit;
SIGNAL tmpIO_0__Button_net_0 : bit;
TERMINAL tmpSIOVREF__Button_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Button_net_0 : bit;
SIGNAL tmpOE__RGBLed_net_2 : bit;
SIGNAL tmpOE__RGBLed_net_1 : bit;
SIGNAL tmpOE__RGBLed_net_0 : bit;
SIGNAL tmpFB_2__RGBLed_net_2 : bit;
SIGNAL tmpFB_2__RGBLed_net_1 : bit;
SIGNAL tmpFB_2__RGBLed_net_0 : bit;
SIGNAL tmpIO_2__RGBLed_net_2 : bit;
SIGNAL tmpIO_2__RGBLed_net_1 : bit;
SIGNAL tmpIO_2__RGBLed_net_0 : bit;
TERMINAL tmpSIOVREF__RGBLed_net_0 : bit;
SIGNAL tmpINTERRUPT_0__RGBLed_net_0 : bit;
SIGNAL \Rx_Front:Net_9\ : bit;
SIGNAL \Rx_Front:Net_61\ : bit;
SIGNAL \Rx_Front:BUART:clock_op\ : bit;
SIGNAL \Rx_Front:BUART:reset_reg\ : bit;
SIGNAL \Rx_Front:BUART:tx_hd_send_break\ : bit;
SIGNAL \Rx_Front:BUART:HalfDuplexSend\ : bit;
SIGNAL \Rx_Front:BUART:FinalParityType_1\ : bit;
SIGNAL \Rx_Front:BUART:FinalParityType_0\ : bit;
SIGNAL \Rx_Front:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Rx_Front:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Rx_Front:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Rx_Front:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Rx_Front:BUART:reset_sr\ : bit;
SIGNAL \Rx_Front:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_536 : bit;
SIGNAL \Rx_Front:BUART:txn\ : bit;
SIGNAL Net_541 : bit;
SIGNAL Net_177 : bit;
SIGNAL \Rx_Front:BUART:rx_interrupt_out\ : bit;
SIGNAL \Rx_Front:BUART:rx_addressmatch\ : bit;
SIGNAL \Rx_Front:BUART:rx_addressmatch1\ : bit;
SIGNAL \Rx_Front:BUART:rx_addressmatch2\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_1\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_0\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk_enable\ : bit;
SIGNAL \Rx_Front:BUART:rx_postpoll\ : bit;
SIGNAL \Rx_Front:BUART:rx_load_fifo\ : bit;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:hd_shift_out\ : bit;
SIGNAL \Rx_Front:BUART:rx_fifonotempty\ : bit;
SIGNAL \Rx_Front:BUART:rx_fifofull\ : bit;
SIGNAL \Rx_Front:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \Rx_Front:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:rx_counter_load\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_3\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_2\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk_pre\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_2\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_1\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_0\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_6\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_5\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_4\ : bit;
SIGNAL \Rx_Front:BUART:rx_count_3\ : bit;
SIGNAL \Rx_Front:BUART:rx_count7_tc\ : bit;
SIGNAL \Rx_Front:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \Rx_Front:BUART:rx_poll_bit1\ : bit;
SIGNAL \Rx_Front:BUART:rx_poll_bit2\ : bit;
SIGNAL \Rx_Front:BUART:pollingrange\ : bit;
SIGNAL \Rx_Front:BUART:pollcount_1\ : bit;
SIGNAL Net_33 : bit;
ATTRIBUTE soft of Net_33:SIGNAL IS '1';
SIGNAL add_vv_vv_MODGEN_1_1 : bit;
SIGNAL \Rx_Front:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_1_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_2 : bit;
SIGNAL cmp_vv_vv_MODGEN_3 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:a_1\ : bit;
SIGNAL MODIN1_1 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:a_0\ : bit;
SIGNAL MODIN1_0 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:b_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:b_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:s_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:s_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:newa_1\ : bit;
SIGNAL MODIN2_1 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:newa_0\ : bit;
SIGNAL MODIN2_0 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_2:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\ : bit;
SIGNAL MODIN3_1 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\ : bit;
SIGNAL MODIN3_0 : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_0\ : bit;
SIGNAL \Rx_Front:BUART:rx_markspace_status\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_1\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_2\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_error_status\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_3\ : bit;
SIGNAL \Rx_Front:BUART:rx_stop_bit_error\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_4\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_5\ : bit;
SIGNAL \Rx_Front:BUART:rx_status_6\ : bit;
SIGNAL \Rx_Front:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_537 : bit;
SIGNAL \Rx_Front:BUART:rx_markspace_pre\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_error_pre\ : bit;
SIGNAL \Rx_Front:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_4 : bit;
SIGNAL \Rx_Front:BUART:rx_address_detected\ : bit;
SIGNAL \Rx_Front:BUART:rx_last\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_5 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newa_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newa_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newa_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newa_3\ : bit;
SIGNAL MODIN4_6 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newa_2\ : bit;
SIGNAL MODIN4_5 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newa_1\ : bit;
SIGNAL MODIN4_4 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newa_0\ : bit;
SIGNAL MODIN4_3 : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newb_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newb_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newb_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newb_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newb_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:dataa_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:dataa_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:dataa_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:dataa_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:dataa_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:datab_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:datab_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:datab_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:datab_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:datab_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:lta_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:gta_6\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:lta_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:gta_5\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:lta_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:gta_4\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:lta_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:gta_3\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:lta_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:gta_2\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_4:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:newa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:newb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:dataa_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:datab_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:xeq\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:xneq\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:xlt\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:xlte\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:xgt\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:g1:a0:xgte\ : bit;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:lt\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_5:lt\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:eq\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_5:eq\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:gt\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_5:gt\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:gte\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_5:gte\:SIGNAL IS 2;
SIGNAL \Rx_Front:BUART:sRX:MODULE_5:lte\ : bit;
ATTRIBUTE port_state_att of \Rx_Front:BUART:sRX:MODULE_5:lte\:SIGNAL IS 2;
SIGNAL \Rx_Right:Net_847\ : bit;
SIGNAL \Rx_Right:Net_459\ : bit;
SIGNAL \Rx_Right:Net_652\ : bit;
SIGNAL \Rx_Right:Net_452\ : bit;
SIGNAL \Rx_Right:Net_676\ : bit;
SIGNAL \Rx_Right:Net_245\ : bit;
SIGNAL \Rx_Right:Net_416\ : bit;
SIGNAL \Rx_Right:Net_654\ : bit;
SIGNAL \Rx_Right:Net_379\ : bit;
SIGNAL \Rx_Right:Net_682\ : bit;
SIGNAL \Rx_Right:uncfg_rx_irq\ : bit;
SIGNAL \Rx_Right:SCBclock\ : bit;
SIGNAL \Rx_Right:Net_653\ : bit;
SIGNAL \Rx_Right:Net_909\ : bit;
SIGNAL \Rx_Right:Net_663\ : bit;
SIGNAL \Rx_Right:tmpOE__tx_net_0\ : bit;
SIGNAL \Rx_Right:Net_656\ : bit;
SIGNAL \Rx_Right:tmpFB_0__tx_net_0\ : bit;
SIGNAL \Rx_Right:tmpIO_0__tx_net_0\ : bit;
TERMINAL \Rx_Right:tmpSIOVREF__tx_net_0\ : bit;
SIGNAL \Rx_Right:tmpINTERRUPT_0__tx_net_0\ : bit;
SIGNAL \Rx_Right:Net_754\ : bit;
SIGNAL \Rx_Right:Net_767\ : bit;
SIGNAL Net_561 : bit;
SIGNAL \Rx_Right:tmpOE__rx_net_0\ : bit;
SIGNAL \Rx_Right:tmpIO_0__rx_net_0\ : bit;
TERMINAL \Rx_Right:tmpSIOVREF__rx_net_0\ : bit;
SIGNAL \Rx_Right:tmpINTERRUPT_0__rx_net_0\ : bit;
SIGNAL \Rx_Right:Net_739\ : bit;
SIGNAL \Rx_Right:Net_747\ : bit;
SIGNAL \Rx_Right:Net_751\ : bit;
SIGNAL \Rx_Right:Net_660\ : bit;
SIGNAL \Rx_Right:ss_3\ : bit;
SIGNAL \Rx_Right:ss_2\ : bit;
SIGNAL \Rx_Right:ss_1\ : bit;
SIGNAL \Rx_Right:ss_0\ : bit;
SIGNAL \Rx_Right:Net_687\ : bit;
SIGNAL \Rx_Right:Net_703\ : bit;
SIGNAL \Rx_Right:Net_580\ : bit;
SIGNAL \Rx_Right:Net_581\ : bit;
SIGNAL \Rx_Right:Net_823\ : bit;
SIGNAL \Rx_Right:Net_824\ : bit;
SIGNAL \Rx_Right:Net_547\ : bit;
SIGNAL \Rx_Right:Net_896\ : bit;
SIGNAL \Rx_Right:Net_891\ : bit;
SIGNAL \Rx_Right:Net_932\ : bit;
SIGNAL \Rx_Right:Net_474\ : bit;
SIGNAL \Rx_Right:Net_903\ : bit;
SIGNAL \Rx_Right:Net_899\ : bit;
SIGNAL \Rx_Right:Net_915\ : bit;
SIGNAL \Rx_Right:Net_927\ : bit;
SIGNAL Net_158 : bit;
ATTRIBUTE soft of Net_158:SIGNAL IS '1';
SIGNAL Net_394 : bit;
SIGNAL Net_393 : bit;
SIGNAL Net_533 : bit;
SIGNAL Net_395 : bit;
SIGNAL Net_373 : bit;
SIGNAL Net_364 : bit;
SIGNAL Net_372 : bit;
SIGNAL Net_374 : bit;
SIGNAL \Rx_Left:Net_847\ : bit;
SIGNAL \Rx_Left:Net_459\ : bit;
SIGNAL \Rx_Left:Net_652\ : bit;
SIGNAL \Rx_Left:Net_452\ : bit;
SIGNAL \Rx_Left:Net_676\ : bit;
SIGNAL \Rx_Left:Net_245\ : bit;
SIGNAL \Rx_Left:Net_416\ : bit;
SIGNAL \Rx_Left:Net_654\ : bit;
SIGNAL \Rx_Left:Net_379\ : bit;
SIGNAL \Rx_Left:Net_682\ : bit;
SIGNAL \Rx_Left:uncfg_rx_irq\ : bit;
SIGNAL \Rx_Left:SCBclock\ : bit;
SIGNAL \Rx_Left:Net_653\ : bit;
SIGNAL \Rx_Left:Net_909\ : bit;
SIGNAL \Rx_Left:Net_663\ : bit;
SIGNAL \Rx_Left:Net_754\ : bit;
SIGNAL \Rx_Left:Net_767\ : bit;
SIGNAL Net_563 : bit;
SIGNAL \Rx_Left:tmpOE__rx_net_0\ : bit;
SIGNAL \Rx_Left:tmpIO_0__rx_net_0\ : bit;
TERMINAL \Rx_Left:tmpSIOVREF__rx_net_0\ : bit;
SIGNAL \Rx_Left:tmpINTERRUPT_0__rx_net_0\ : bit;
SIGNAL \Rx_Left:Net_739\ : bit;
SIGNAL \Rx_Left:Net_747\ : bit;
SIGNAL \Rx_Left:Net_656\ : bit;
SIGNAL \Rx_Left:Net_751\ : bit;
SIGNAL \Rx_Left:Net_660\ : bit;
SIGNAL \Rx_Left:ss_3\ : bit;
SIGNAL \Rx_Left:ss_2\ : bit;
SIGNAL \Rx_Left:ss_1\ : bit;
SIGNAL \Rx_Left:ss_0\ : bit;
SIGNAL \Rx_Left:Net_687\ : bit;
SIGNAL \Rx_Left:Net_703\ : bit;
SIGNAL \Rx_Left:Net_580\ : bit;
SIGNAL \Rx_Left:Net_581\ : bit;
SIGNAL \Rx_Left:Net_823\ : bit;
SIGNAL \Rx_Left:Net_824\ : bit;
SIGNAL \Rx_Left:Net_547\ : bit;
SIGNAL \Rx_Left:Net_896\ : bit;
SIGNAL \Rx_Left:Net_891\ : bit;
SIGNAL \Rx_Left:Net_932\ : bit;
SIGNAL \Rx_Left:Net_474\ : bit;
SIGNAL \Rx_Left:Net_903\ : bit;
SIGNAL \Rx_Left:Net_899\ : bit;
SIGNAL \Rx_Left:Net_915\ : bit;
SIGNAL \Rx_Left:Net_927\ : bit;
SIGNAL tmpOE__Rx_Front_Pins_net_3 : bit;
SIGNAL tmpOE__Rx_Front_Pins_net_2 : bit;
SIGNAL tmpOE__Rx_Front_Pins_net_1 : bit;
SIGNAL tmpOE__Rx_Front_Pins_net_0 : bit;
SIGNAL tmpIO_3__Rx_Front_Pins_net_3 : bit;
SIGNAL tmpIO_3__Rx_Front_Pins_net_2 : bit;
SIGNAL tmpIO_3__Rx_Front_Pins_net_1 : bit;
SIGNAL tmpIO_3__Rx_Front_Pins_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_Front_Pins_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_Front_Pins_net_0 : bit;
SIGNAL \Rx_Back:Net_9\ : bit;
SIGNAL \Rx_Back:Net_61\ : bit;
SIGNAL \Rx_Back:BUART:clock_op\ : bit;
SIGNAL \Rx_Back:BUART:reset_reg\ : bit;
SIGNAL \Rx_Back:BUART:tx_hd_send_break\ : bit;
SIGNAL \Rx_Back:BUART:HalfDuplexSend\ : bit;
SIGNAL \Rx_Back:BUART:FinalParityType_1\ : bit;
SIGNAL \Rx_Back:BUART:FinalParityType_0\ : bit;
SIGNAL \Rx_Back:BUART:FinalAddrMode_2\ : bit;
SIGNAL \Rx_Back:BUART:FinalAddrMode_1\ : bit;
SIGNAL \Rx_Back:BUART:FinalAddrMode_0\ : bit;
SIGNAL \Rx_Back:BUART:tx_ctrl_mark\ : bit;
SIGNAL \Rx_Back:BUART:reset_sr\ : bit;
SIGNAL \Rx_Back:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_511 : bit;
SIGNAL \Rx_Back:BUART:txn\ : bit;
SIGNAL Net_516 : bit;
SIGNAL Net_179 : bit;
SIGNAL \Rx_Back:BUART:rx_interrupt_out\ : bit;
SIGNAL \Rx_Back:BUART:rx_addressmatch\ : bit;
SIGNAL \Rx_Back:BUART:rx_addressmatch1\ : bit;
SIGNAL \Rx_Back:BUART:rx_addressmatch2\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_1\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_0\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk_enable\ : bit;
SIGNAL \Rx_Back:BUART:rx_postpoll\ : bit;
SIGNAL \Rx_Back:BUART:rx_load_fifo\ : bit;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:hd_shift_out\ : bit;
SIGNAL \Rx_Back:BUART:rx_fifonotempty\ : bit;
SIGNAL \Rx_Back:BUART:rx_fifofull\ : bit;
SIGNAL \Rx_Back:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \Rx_Back:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:rx_counter_load\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_3\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_2\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk_pre\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_2\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_1\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_0\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_6\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_5\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_4\ : bit;
SIGNAL \Rx_Back:BUART:rx_count_3\ : bit;
SIGNAL \Rx_Back:BUART:rx_count7_tc\ : bit;
SIGNAL \Rx_Back:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \Rx_Back:BUART:rx_poll_bit1\ : bit;
SIGNAL \Rx_Back:BUART:rx_poll_bit2\ : bit;
SIGNAL \Rx_Back:BUART:pollingrange\ : bit;
SIGNAL \Rx_Back:BUART:pollcount_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:add_vv_vv_MODGEN_6_1\ : bit;
SIGNAL \Rx_Back:BUART:pollcount_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:add_vv_vv_MODGEN_6_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_7\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_8\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:a_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODIN5_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:a_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODIN5_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:b_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:b_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:s_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:s_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:newa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODIN6_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:newa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODIN6_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_7:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:newa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODIN7_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:newa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODIN7_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_0\ : bit;
SIGNAL \Rx_Back:BUART:rx_markspace_status\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_1\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_2\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_error_status\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_3\ : bit;
SIGNAL \Rx_Back:BUART:rx_stop_bit_error\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_4\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_5\ : bit;
SIGNAL \Rx_Back:BUART:rx_status_6\ : bit;
SIGNAL \Rx_Back:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_512 : bit;
SIGNAL \Rx_Back:BUART:rx_markspace_pre\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_error_pre\ : bit;
SIGNAL \Rx_Back:BUART:rx_break_status\ : bit;
SIGNAL \Rx_Back:BUART:sRX:cmp_vv_vv_MODGEN_9\ : bit;
SIGNAL \Rx_Back:BUART:rx_address_detected\ : bit;
SIGNAL \Rx_Back:BUART:rx_last\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_bit\ : bit;
SIGNAL \Rx_Back:BUART:sRX:cmp_vv_vv_MODGEN_10\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newa_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newa_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newa_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newa_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODIN8_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newa_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODIN8_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODIN8_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODIN8_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newb_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newb_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newb_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newb_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newb_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newb_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:newb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:dataa_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:dataa_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:dataa_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:dataa_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:dataa_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:dataa_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:dataa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:datab_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:datab_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:datab_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:datab_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:datab_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:datab_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:datab_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:lta_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:gta_6\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:lta_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:gta_5\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:lta_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:gta_4\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:lta_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:gta_3\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:lta_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:gta_2\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:lta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:gta_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:lta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_9:g2:a0:gta_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:newa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:newb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:dataa_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:datab_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:xeq\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:xneq\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:xlt\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:xlte\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:xgt\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:g1:a0:xgte\ : bit;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:lt\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_10:lt\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:eq\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_10:eq\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:gt\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_10:gt\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:gte\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_10:gte\:SIGNAL IS 2;
SIGNAL \Rx_Back:BUART:sRX:MODULE_10:lte\ : bit;
ATTRIBUTE port_state_att of \Rx_Back:BUART:sRX:MODULE_10:lte\:SIGNAL IS 2;
SIGNAL tmpOE__Rx_Back_Pins_net_3 : bit;
SIGNAL tmpOE__Rx_Back_Pins_net_2 : bit;
SIGNAL tmpOE__Rx_Back_Pins_net_1 : bit;
SIGNAL tmpOE__Rx_Back_Pins_net_0 : bit;
SIGNAL tmpIO_3__Rx_Back_Pins_net_3 : bit;
SIGNAL tmpIO_3__Rx_Back_Pins_net_2 : bit;
SIGNAL tmpIO_3__Rx_Back_Pins_net_1 : bit;
SIGNAL tmpIO_3__Rx_Back_Pins_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_Back_Pins_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_Back_Pins_net_0 : bit;
SIGNAL \Rx_Front:BUART:reset_reg\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_1\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_0\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_3\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_2\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_bitclk\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \Rx_Front:BUART:pollcount_1\\D\ : bit;
SIGNAL \Rx_Front:BUART:pollcount_0\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_break_status\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_address_detected\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_last\\D\ : bit;
SIGNAL \Rx_Front:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Rx_Back:BUART:reset_reg\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_1\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_0\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_3\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_2\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_bitclk\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \Rx_Back:BUART:pollcount_1\\D\ : bit;
SIGNAL \Rx_Back:BUART:pollcount_0\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_break_status\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_address_detected\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_last\\D\ : bit;
SIGNAL \Rx_Back:BUART:rx_parity_bit\\D\ : bit;
BEGIN

zero <=  ('0') ;

tmpOE__LED_net_0 <=  ('1') ;

\Rx_Front:BUART:rx_counter_load\ <= ((not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not \Rx_Front:BUART:rx_state_3\ and not \Rx_Front:BUART:rx_state_2\));

\Rx_Front:BUART:rx_bitclk_pre\ <= ((not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not \Rx_Front:BUART:rx_count_0\));

\Rx_Front:BUART:rx_state_stop1_reg\\D\ <= (not \Rx_Front:BUART:rx_state_2\
	OR not \Rx_Front:BUART:rx_state_3\
	OR \Rx_Front:BUART:rx_state_0\
	OR \Rx_Front:BUART:rx_state_1\);

\Rx_Front:BUART:pollcount_1\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not MODIN1_1 and Net_33 and MODIN1_0)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not MODIN1_0 and MODIN1_1)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not Net_33 and MODIN1_1));

\Rx_Front:BUART:pollcount_0\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not MODIN1_0 and Net_33)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_count_2\ and not \Rx_Front:BUART:rx_count_1\ and not Net_33 and MODIN1_0));

\Rx_Front:BUART:rx_postpoll\ <= ((Net_33 and MODIN1_0)
	OR MODIN1_1);

\Rx_Front:BUART:rx_status_4\ <= ((\Rx_Front:BUART:rx_load_fifo\ and \Rx_Front:BUART:rx_fifofull\));

\Rx_Front:BUART:rx_status_5\ <= ((\Rx_Front:BUART:rx_fifonotempty\ and \Rx_Front:BUART:rx_state_stop1_reg\));

\Rx_Front:BUART:rx_stop_bit_error\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not MODIN1_1 and not MODIN1_0 and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not Net_33 and not MODIN1_1 and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\ and \Rx_Front:BUART:rx_state_2\));

\Rx_Front:BUART:rx_load_fifo\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not \Rx_Front:BUART:rx_state_2\ and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not \Rx_Front:BUART:rx_state_2\ and not MODIN4_6 and not MODIN4_4 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not \Rx_Front:BUART:rx_state_2\ and not MODIN4_6 and not MODIN4_5 and \Rx_Front:BUART:rx_state_0\));

\Rx_Front:BUART:rx_state_3\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_2\ and not MODIN4_6 and not MODIN4_4 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_2\ and not MODIN4_6 and not MODIN4_5 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_1\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_2\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and \Rx_Front:BUART:rx_state_3\));

\Rx_Front:BUART:rx_state_2\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not \Rx_Front:BUART:rx_state_3\ and not \Rx_Front:BUART:rx_state_2\ and not Net_33 and \Rx_Front:BUART:rx_last\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_0\ and not \Rx_Front:BUART:rx_state_2\ and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not MODIN4_6 and not MODIN4_4 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not MODIN4_6 and not MODIN4_5 and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_1\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and \Rx_Front:BUART:rx_state_2\));

\Rx_Front:BUART:rx_state_1\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_1\));

\Rx_Front:BUART:rx_state_0\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not MODIN1_1 and not MODIN1_0 and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and not \Rx_Front:BUART:rx_state_1\ and not \Rx_Front:BUART:rx_state_3\ and not Net_33 and not MODIN1_1 and \Rx_Front:BUART:rx_bitclk_enable\ and \Rx_Front:BUART:rx_state_2\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and MODIN4_5 and MODIN4_4)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and MODIN4_6)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and \Rx_Front:BUART:rx_state_3\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_1\ and \Rx_Front:BUART:rx_state_0\)
	OR (not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_state_0\ and \Rx_Front:BUART:rx_state_2\));

\Rx_Front:BUART:rx_last\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and Net_33));

\Rx_Front:BUART:rx_address_detected\\D\ <= ((not \Rx_Front:BUART:reset_reg\ and \Rx_Front:BUART:rx_address_detected\));

Net_158 <= (Net_395
	OR Net_533
	OR Net_393
	OR Net_394);

Net_33 <= (Net_374
	OR Net_372
	OR Net_364
	OR Net_373);

\Rx_Back:BUART:rx_counter_load\ <= ((not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_state_2\));

\Rx_Back:BUART:rx_bitclk_pre\ <= ((not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not \Rx_Back:BUART:rx_count_0\));

\Rx_Back:BUART:rx_state_stop1_reg\\D\ <= (not \Rx_Back:BUART:rx_state_2\
	OR not \Rx_Back:BUART:rx_state_3\
	OR \Rx_Back:BUART:rx_state_0\
	OR \Rx_Back:BUART:rx_state_1\);

\Rx_Back:BUART:pollcount_1\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not \Rx_Back:BUART:pollcount_1\ and Net_158 and \Rx_Back:BUART:pollcount_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not \Rx_Back:BUART:pollcount_0\ and \Rx_Back:BUART:pollcount_1\)
	OR (not Net_158 and not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and \Rx_Back:BUART:pollcount_1\));

\Rx_Back:BUART:pollcount_0\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and not \Rx_Back:BUART:pollcount_0\ and Net_158)
	OR (not Net_158 and not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_count_2\ and not \Rx_Back:BUART:rx_count_1\ and \Rx_Back:BUART:pollcount_0\));

\Rx_Back:BUART:rx_postpoll\ <= ((Net_158 and \Rx_Back:BUART:pollcount_0\)
	OR \Rx_Back:BUART:pollcount_1\);

\Rx_Back:BUART:rx_status_4\ <= ((\Rx_Back:BUART:rx_load_fifo\ and \Rx_Back:BUART:rx_fifofull\));

\Rx_Back:BUART:rx_status_5\ <= ((\Rx_Back:BUART:rx_fifonotempty\ and \Rx_Back:BUART:rx_state_stop1_reg\));

\Rx_Back:BUART:rx_stop_bit_error\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:pollcount_1\ and not \Rx_Back:BUART:pollcount_0\ and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\ and \Rx_Back:BUART:rx_state_2\)
	OR (not Net_158 and not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:pollcount_1\ and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\ and \Rx_Back:BUART:rx_state_2\));

\Rx_Back:BUART:rx_load_fifo\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:rx_state_2\ and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_state_2\ and not \Rx_Back:BUART:rx_count_6\ and not \Rx_Back:BUART:rx_count_4\ and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_state_2\ and not \Rx_Back:BUART:rx_count_6\ and not \Rx_Back:BUART:rx_count_5\ and \Rx_Back:BUART:rx_state_0\));

\Rx_Back:BUART:rx_state_3\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_2\ and not \Rx_Back:BUART:rx_count_6\ and not \Rx_Back:BUART:rx_count_4\ and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_2\ and not \Rx_Back:BUART:rx_count_6\ and not \Rx_Back:BUART:rx_count_5\ and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_1\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_2\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_state_3\));

\Rx_Back:BUART:rx_state_2\\D\ <= ((not Net_158 and not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_state_2\ and \Rx_Back:BUART:rx_last\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_0\ and not \Rx_Back:BUART:rx_state_2\ and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_count_6\ and not \Rx_Back:BUART:rx_count_4\ and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:rx_count_6\ and not \Rx_Back:BUART:rx_count_5\ and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_2\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_1\ and \Rx_Back:BUART:rx_state_2\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_state_2\));

\Rx_Back:BUART:rx_state_1\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_1\));

\Rx_Back:BUART:rx_state_0\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:pollcount_1\ and not \Rx_Back:BUART:pollcount_0\ and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_2\)
	OR (not Net_158 and not \Rx_Back:BUART:reset_reg\ and not \Rx_Back:BUART:rx_state_1\ and not \Rx_Back:BUART:rx_state_3\ and not \Rx_Back:BUART:pollcount_1\ and \Rx_Back:BUART:rx_bitclk_enable\ and \Rx_Back:BUART:rx_state_2\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_count_5\ and \Rx_Back:BUART:rx_count_4\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_count_6\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_state_3\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_1\ and \Rx_Back:BUART:rx_state_0\)
	OR (not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_state_0\ and \Rx_Back:BUART:rx_state_2\));

\Rx_Back:BUART:rx_last\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and Net_158));

\Rx_Back:BUART:rx_address_detected\\D\ <= ((not \Rx_Back:BUART:reset_reg\ and \Rx_Back:BUART:rx_address_detected\));

LED:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"e851a3b9-efb8-48be-bbb8-b303b216c393",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LED_net_0),
		y=>(zero),
		fb=>(tmpFB_0__LED_net_0),
		analog=>(open),
		io=>(tmpIO_0__LED_net_0),
		siovref=>(tmpSIOVREF__LED_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LED_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LED_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__LED_net_0);
Button:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"8d318d8b-cf7b-4b6b-b02c-ab1c5c49d0ba",
		drive_mode=>"010",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LED_net_0),
		y=>(zero),
		fb=>(tmpFB_0__Button_net_0),
		analog=>(open),
		io=>(tmpIO_0__Button_net_0),
		siovref=>(tmpSIOVREF__Button_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LED_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LED_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Button_net_0);
RGBLed:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"24da1031-1fbb-4e16-95f1-5c52a62cce1f",
		drive_mode=>"110110110",
		ibuf_enabled=>"111",
		init_dr_st=>"111",
		input_sync=>"111",
		input_clk_en=>'0',
		input_sync_mode=>"000",
		intr_mode=>"000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"000",
		output_sync=>"000",
		output_clk_en=>'0',
		output_mode=>"000",
		output_reset=>'0',
		output_clock_mode=>"000",
		oe_sync=>"000",
		oe_conn=>"000",
		oe_reset=>'0',
		pin_aliases=>"R,G,B",
		pin_mode=>"OOO",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"111",
		sio_ibuf=>"00000000",
		sio_info=>"000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"101010",
		width=>3,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"000",
		ovt_slew_control=>"000000",
		ovt_hyst_trim=>"000",
		input_buffer_sel=>"000000")
	PORT MAP(oe=>(tmpOE__LED_net_0, tmpOE__LED_net_0, tmpOE__LED_net_0),
		y=>(zero, zero, zero),
		fb=>(tmpFB_2__RGBLed_net_2, tmpFB_2__RGBLed_net_1, tmpFB_2__RGBLed_net_0),
		analog=>(open, open, open),
		io=>(tmpIO_2__RGBLed_net_2, tmpIO_2__RGBLed_net_1, tmpIO_2__RGBLed_net_0),
		siovref=>(tmpSIOVREF__RGBLed_net_0),
		annotation=>(open, open, open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LED_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LED_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__RGBLed_net_0);
\Rx_Front:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"32100968-8238-4408-8821-a5772456f54e/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"3255208333.33333",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Rx_Front:Net_9\,
		dig_domain_out=>open);
\Rx_Front:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Rx_Front:Net_9\,
		enable=>tmpOE__LED_net_0,
		clock_out=>\Rx_Front:BUART:clock_op\);
\Rx_Front:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Rx_Front:BUART:reset_reg\,
		clk=>\Rx_Front:BUART:clock_op\,
		cs_addr=>(\Rx_Front:BUART:rx_state_1\, \Rx_Front:BUART:rx_state_0\, \Rx_Front:BUART:rx_bitclk_enable\),
		route_si=>\Rx_Front:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\Rx_Front:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Rx_Front:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\Rx_Front:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Rx_Front:BUART:hd_shift_out\,
		f0_bus_stat=>\Rx_Front:BUART:rx_fifonotempty\,
		f0_blk_stat=>\Rx_Front:BUART:rx_fifofull\,
		f1_bus_stat=>\Rx_Front:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\Rx_Front:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Rx_Front:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\Rx_Front:BUART:clock_op\,
		reset=>\Rx_Front:BUART:reset_reg\,
		load=>\Rx_Front:BUART:rx_counter_load\,
		enable=>tmpOE__LED_net_0,
		count=>(MODIN4_6, MODIN4_5, MODIN4_4, MODIN4_3,
			\Rx_Front:BUART:rx_count_2\, \Rx_Front:BUART:rx_count_1\, \Rx_Front:BUART:rx_count_0\),
		tc=>\Rx_Front:BUART:rx_count7_tc\);
\Rx_Front:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Rx_Front:BUART:reset_reg\,
		clock=>\Rx_Front:BUART:clock_op\,
		status=>(zero, \Rx_Front:BUART:rx_status_5\, \Rx_Front:BUART:rx_status_4\, \Rx_Front:BUART:rx_status_3\,
			\Rx_Front:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_177);
\Rx_Right:SCBCLK\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"43ec2fa1-bf22-4b71-9477-b6ca7b97f0b0/81fcee8a-3b8b-4be1-9a5f-a5e2e619a938",
		source_clock_id=>"",
		divisor=>0,
		period=>"2170138888.88889",
		is_direct=>'0',
		is_digital=>'0')
	PORT MAP(clock_out=>\Rx_Right:Net_847\,
		dig_domain_out=>open);
\Rx_Right:tx\:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"43ec2fa1-bf22-4b71-9477-b6ca7b97f0b0/23b8206d-1c77-4e61-be4a-b4037d5de5fc",
		drive_mode=>"110",
		ibuf_enabled=>"0",
		init_dr_st=>"1",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"B",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LED_net_0),
		y=>\Rx_Right:Net_656\,
		fb=>(\Rx_Right:tmpFB_0__tx_net_0\),
		analog=>(open),
		io=>(\Rx_Right:tmpIO_0__tx_net_0\),
		siovref=>(\Rx_Right:tmpSIOVREF__tx_net_0\),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LED_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LED_net_0,
		out_reset=>zero,
		interrupt=>\Rx_Right:tmpINTERRUPT_0__tx_net_0\);
\Rx_Right:SCB_IRQ\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_561);
\Rx_Right:rx\:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"43ec2fa1-bf22-4b71-9477-b6ca7b97f0b0/78e33e5d-45ea-4b75-88d5-73274e8a7ce4",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LED_net_0),
		y=>(zero),
		fb=>\Rx_Right:Net_654\,
		analog=>(open),
		io=>(\Rx_Right:tmpIO_0__rx_net_0\),
		siovref=>(\Rx_Right:tmpSIOVREF__rx_net_0\),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LED_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LED_net_0,
		out_reset=>zero,
		interrupt=>\Rx_Right:tmpINTERRUPT_0__rx_net_0\);
\Rx_Right:SCB\:cy_m0s8_scb_v2_0
	GENERIC MAP(cy_registers=>"",
		scb_mode=>2)
	PORT MAP(clock=>\Rx_Right:Net_847\,
		interrupt=>Net_561,
		rx=>\Rx_Right:Net_654\,
		tx=>\Rx_Right:Net_656\,
		cts=>zero,
		rts=>\Rx_Right:Net_751\,
		mosi_m=>\Rx_Right:Net_660\,
		miso_m=>zero,
		select_m=>(\Rx_Right:ss_3\, \Rx_Right:ss_2\, \Rx_Right:ss_1\, \Rx_Right:ss_0\),
		sclk_m=>\Rx_Right:Net_687\,
		mosi_s=>zero,
		miso_s=>\Rx_Right:Net_703\,
		select_s=>zero,
		sclk_s=>zero,
		scl=>\Rx_Right:Net_580\,
		sda=>\Rx_Right:Net_581\,
		tx_req=>\Rx_Right:Net_823\,
		rx_req=>\Rx_Right:Net_824\);
isr_Rx_Front:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_177);
\Rx_Left:SCBCLK\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"18c4e789-d56d-44af-b8ce-40c70cf9a2e5/81fcee8a-3b8b-4be1-9a5f-a5e2e619a938",
		source_clock_id=>"",
		divisor=>0,
		period=>"2170138888.88889",
		is_direct=>'0',
		is_digital=>'0')
	PORT MAP(clock_out=>\Rx_Left:Net_847\,
		dig_domain_out=>open);
\Rx_Left:SCB_IRQ\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_563);
\Rx_Left:rx\:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"18c4e789-d56d-44af-b8ce-40c70cf9a2e5/78e33e5d-45ea-4b75-88d5-73274e8a7ce4",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__LED_net_0),
		y=>(zero),
		fb=>\Rx_Left:Net_654\,
		analog=>(open),
		io=>(\Rx_Left:tmpIO_0__rx_net_0\),
		siovref=>(\Rx_Left:tmpSIOVREF__rx_net_0\),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LED_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LED_net_0,
		out_reset=>zero,
		interrupt=>\Rx_Left:tmpINTERRUPT_0__rx_net_0\);
\Rx_Left:SCB\:cy_m0s8_scb_v2_0
	GENERIC MAP(cy_registers=>"",
		scb_mode=>2)
	PORT MAP(clock=>\Rx_Left:Net_847\,
		interrupt=>Net_563,
		rx=>\Rx_Left:Net_654\,
		tx=>\Rx_Left:Net_656\,
		cts=>zero,
		rts=>\Rx_Left:Net_751\,
		mosi_m=>\Rx_Left:Net_660\,
		miso_m=>zero,
		select_m=>(\Rx_Left:ss_3\, \Rx_Left:ss_2\, \Rx_Left:ss_1\, \Rx_Left:ss_0\),
		sclk_m=>\Rx_Left:Net_687\,
		mosi_s=>zero,
		miso_s=>\Rx_Left:Net_703\,
		select_s=>zero,
		sclk_s=>zero,
		scl=>\Rx_Left:Net_580\,
		sda=>\Rx_Left:Net_581\,
		tx_req=>\Rx_Left:Net_823\,
		rx_req=>\Rx_Left:Net_824\);
Rx_Front_Pins:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"16364229-d4a3-4ae2-a407-88a84d8f2a26",
		drive_mode=>"011011011011",
		ibuf_enabled=>"1111",
		init_dr_st=>"0000",
		input_sync=>"1111",
		input_clk_en=>'0',
		input_sync_mode=>"0000",
		intr_mode=>"00000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000",
		output_sync=>"0000",
		output_clk_en=>'0',
		output_mode=>"0000",
		output_reset=>'0',
		output_clock_mode=>"0000",
		oe_sync=>"0000",
		oe_conn=>"0000",
		oe_reset=>'0',
		pin_aliases=>",,,",
		pin_mode=>"IIII",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00000000",
		width=>4,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000",
		ovt_slew_control=>"00000000",
		ovt_hyst_trim=>"0000",
		input_buffer_sel=>"00000000")
	PORT MAP(oe=>(tmpOE__LED_net_0, tmpOE__LED_net_0, tmpOE__LED_net_0, tmpOE__LED_net_0),
		y=>(zero, zero, zero, zero),
		fb=>(Net_374, Net_373, Net_364, Net_372),
		analog=>(open, open, open, open),
		io=>(tmpIO_3__Rx_Front_Pins_net_3, tmpIO_3__Rx_Front_Pins_net_2, tmpIO_3__Rx_Front_Pins_net_1, tmpIO_3__Rx_Front_Pins_net_0),
		siovref=>(tmpSIOVREF__Rx_Front_Pins_net_0),
		annotation=>(open, open, open, open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LED_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LED_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_Front_Pins_net_0);
\Rx_Back:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"2929b63b-ec41-4de7-aa31-e4979d054c15/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"3255208333.33333",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\Rx_Back:Net_9\,
		dig_domain_out=>open);
\Rx_Back:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\Rx_Back:Net_9\,
		enable=>tmpOE__LED_net_0,
		clock_out=>\Rx_Back:BUART:clock_op\);
\Rx_Back:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\Rx_Back:BUART:reset_reg\,
		clk=>\Rx_Back:BUART:clock_op\,
		cs_addr=>(\Rx_Back:BUART:rx_state_1\, \Rx_Back:BUART:rx_state_0\, \Rx_Back:BUART:rx_bitclk_enable\),
		route_si=>\Rx_Back:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\Rx_Back:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Rx_Back:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\Rx_Back:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\Rx_Back:BUART:hd_shift_out\,
		f0_bus_stat=>\Rx_Back:BUART:rx_fifonotempty\,
		f0_blk_stat=>\Rx_Back:BUART:rx_fifofull\,
		f1_bus_stat=>\Rx_Back:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\Rx_Back:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Rx_Back:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\Rx_Back:BUART:clock_op\,
		reset=>\Rx_Back:BUART:reset_reg\,
		load=>\Rx_Back:BUART:rx_counter_load\,
		enable=>tmpOE__LED_net_0,
		count=>(\Rx_Back:BUART:rx_count_6\, \Rx_Back:BUART:rx_count_5\, \Rx_Back:BUART:rx_count_4\, \Rx_Back:BUART:rx_count_3\,
			\Rx_Back:BUART:rx_count_2\, \Rx_Back:BUART:rx_count_1\, \Rx_Back:BUART:rx_count_0\),
		tc=>\Rx_Back:BUART:rx_count7_tc\);
\Rx_Back:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Rx_Back:BUART:reset_reg\,
		clock=>\Rx_Back:BUART:clock_op\,
		status=>(zero, \Rx_Back:BUART:rx_status_5\, \Rx_Back:BUART:rx_status_4\, \Rx_Back:BUART:rx_status_3\,
			\Rx_Back:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_179);
Rx_Back_Pins:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"0b40146a-1b01-4b78-9629-e69da0054771",
		drive_mode=>"011011011011",
		ibuf_enabled=>"1111",
		init_dr_st=>"0000",
		input_sync=>"1111",
		input_clk_en=>'0',
		input_sync_mode=>"0000",
		intr_mode=>"00000000",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>",,,",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0000",
		output_sync=>"0000",
		output_clk_en=>'0',
		output_mode=>"0000",
		output_reset=>'0',
		output_clock_mode=>"0000",
		oe_sync=>"0000",
		oe_conn=>"0000",
		oe_reset=>'0',
		pin_aliases=>",,,",
		pin_mode=>"IIII",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"",
		sio_hyst=>"1111",
		sio_ibuf=>"00000000",
		sio_info=>"00000000",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		slew_rate=>"0000",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00000000",
		width=>4,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0000",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0000",
		ovt_slew_control=>"00000000",
		ovt_hyst_trim=>"0000",
		input_buffer_sel=>"00000000")
	PORT MAP(oe=>(tmpOE__LED_net_0, tmpOE__LED_net_0, tmpOE__LED_net_0, tmpOE__LED_net_0),
		y=>(zero, zero, zero, zero),
		fb=>(Net_395, Net_394, Net_393, Net_533),
		analog=>(open, open, open, open),
		io=>(tmpIO_3__Rx_Back_Pins_net_3, tmpIO_3__Rx_Back_Pins_net_2, tmpIO_3__Rx_Back_Pins_net_1, tmpIO_3__Rx_Back_Pins_net_0),
		siovref=>(tmpSIOVREF__Rx_Back_Pins_net_0),
		annotation=>(open, open, open, open),
		in_clock=>zero,
		in_clock_en=>tmpOE__LED_net_0,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>tmpOE__LED_net_0,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_Back_Pins_net_0);
isr_Rx_Back:cy_isr_v1_0
	GENERIC MAP(int_type=>"10")
	PORT MAP(int_signal=>Net_179);
\Rx_Front:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:reset_reg\);
\Rx_Front:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_1\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_1\);
\Rx_Front:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_0\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_0\);
\Rx_Front:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_load_fifo\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_load_fifo\);
\Rx_Front:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_3\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_3\);
\Rx_Front:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_2\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_2\);
\Rx_Front:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_bitclk_pre\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_bitclk_enable\);
\Rx_Front:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_state_stop1_reg\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_state_stop1_reg\);
\Rx_Front:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:pollcount_1\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>MODIN1_1);
\Rx_Front:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:pollcount_0\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>MODIN1_0);
\Rx_Front:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_markspace_status\);
\Rx_Front:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_status_2\);
\Rx_Front:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_stop_bit_error\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_status_3\);
\Rx_Front:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_addr_match_status\);
\Rx_Front:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_markspace_pre\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_markspace_pre\);
\Rx_Front:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_parity_error_pre\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_parity_error_pre\);
\Rx_Front:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_break_status\);
\Rx_Front:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_address_detected\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_address_detected\);
\Rx_Front:BUART:rx_last\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_last\\D\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_last\);
\Rx_Front:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\Rx_Front:BUART:rx_parity_bit\,
		clk=>\Rx_Front:BUART:clock_op\,
		q=>\Rx_Front:BUART:rx_parity_bit\);
\Rx_Back:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:reset_reg\);
\Rx_Back:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_1\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_1\);
\Rx_Back:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_0\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_0\);
\Rx_Back:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_load_fifo\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_load_fifo\);
\Rx_Back:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_3\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_3\);
\Rx_Back:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_2\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_2\);
\Rx_Back:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_bitclk_pre\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_bitclk_enable\);
\Rx_Back:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_state_stop1_reg\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_state_stop1_reg\);
\Rx_Back:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:pollcount_1\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:pollcount_1\);
\Rx_Back:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:pollcount_0\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:pollcount_0\);
\Rx_Back:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_markspace_status\);
\Rx_Back:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_status_2\);
\Rx_Back:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_stop_bit_error\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_status_3\);
\Rx_Back:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_addr_match_status\);
\Rx_Back:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_markspace_pre\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_markspace_pre\);
\Rx_Back:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_parity_error_pre\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_parity_error_pre\);
\Rx_Back:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_break_status\);
\Rx_Back:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_address_detected\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_address_detected\);
\Rx_Back:BUART:rx_last\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_last\\D\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_last\);
\Rx_Back:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\Rx_Back:BUART:rx_parity_bit\,
		clk=>\Rx_Back:BUART:clock_op\,
		q=>\Rx_Back:BUART:rx_parity_bit\);

END R_T_L;
