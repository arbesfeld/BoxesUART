ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_1_initVar
  19              		.bss
  20              		.type	UART_1_initVar, %object
  21              		.size	UART_1_initVar, 1
  22              	UART_1_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.UART_1_Start,"ax",%progbits
  25              		.align	2
  26              		.global	UART_1_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	UART_1_Start, %function
  30              	UART_1_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\UART_1.c"
   1:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC5/UART_1.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/UART_1.c **** *
   5:.\Generated_Source\PSoC5/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_1.c **** *
   8:.\Generated_Source\PSoC5/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_1.c **** *
  10:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_1.c **** 
  17:.\Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:.\Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART_1.c **** 
  22:.\Generated_Source\PSoC5/UART_1.c **** 
  23:.\Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART_1.c **** ***************************************/
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 2


  26:.\Generated_Source\PSoC5/UART_1.c **** 
  27:.\Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART_1.c **** 
  29:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART_1.c **** 
  35:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART_1.c **** 
  48:.\Generated_Source\PSoC5/UART_1.c **** 
  49:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART_1.c **** *
  53:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:.\Generated_Source\PSoC5/UART_1.c **** *
  59:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_1.c **** *
  62:.\Generated_Source\PSoC5/UART_1.c **** * Return:
  63:.\Generated_Source\PSoC5/UART_1.c **** *  None.
  64:.\Generated_Source\PSoC5/UART_1.c **** *
  65:.\Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:.\Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:.\Generated_Source\PSoC5/UART_1.c **** *
  72:.\Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART_1.c **** *  No.
  74:.\Generated_Source\PSoC5/UART_1.c **** *
  75:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:.\Generated_Source\PSoC5/UART_1.c **** {
  33              		.loc 1 77 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 3


  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  43              		.loc 1 79 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/UART_1.c ****     {
  81:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  48              		.loc 1 81 0
  49 000c FFF7FEFF 		bl	UART_1_Init
  82:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  50              		.loc 1 82 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
  54              	.L2:
  83:.\Generated_Source\PSoC5/UART_1.c ****     }
  84:.\Generated_Source\PSoC5/UART_1.c **** 
  85:.\Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  55              		.loc 1 85 0
  56 0016 FFF7FEFF 		bl	UART_1_Enable
  86:.\Generated_Source\PSoC5/UART_1.c **** }
  57              		.loc 1 86 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	UART_1_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	UART_1_Start, .-UART_1_Start
  66              		.section	.text.UART_1_Init,"ax",%progbits
  67              		.align	2
  68              		.global	UART_1_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	UART_1_Init, %function
  72              	UART_1_Init:
  73              	.LFB1:
  87:.\Generated_Source\PSoC5/UART_1.c **** 
  88:.\Generated_Source\PSoC5/UART_1.c **** 
  89:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART_1.c **** *
  93:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:.\Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART_1.c **** *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 4


  99:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 101:.\Generated_Source\PSoC5/UART_1.c **** *
 102:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 103:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 104:.\Generated_Source\PSoC5/UART_1.c **** *
 105:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:.\Generated_Source\PSoC5/UART_1.c **** {
  74              		.loc 1 107 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 7, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART_1.c **** 
 110:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:.\Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART_1.c **** 
 117:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART_1.c **** 
 123:.\Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  84              		.loc 1 124 0
  85 0004 044B     		ldr	r3, .L6
  86 0006 7222     		movs	r2, #114
  87 0008 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  88              		.loc 1 126 0
  89 000a 044B     		ldr	r3, .L6+4
  90 000c 2022     		movs	r2, #32
  91 000e 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART_1.c **** 
 129:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:.\Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_1.c **** 
 136:.\Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 5


 138:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
 139:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART_1.c ****         #else
 142:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART_1.c **** 
 146:.\Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART_1.c ****         #else
 150:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART_1.c **** 
 153:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART_1.c **** 
 155:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART_1.c **** }
  92              		.loc 1 160 0
  93 0010 BD46     		mov	sp, r7
  94              		@ sp needed
  95 0012 5DF8047B 		ldr	r7, [sp], #4
  96 0016 7047     		bx	lr
  97              	.L7:
  98              		.align	2
  99              	.L6:
 100 0018 85640040 		.word	1073767557
 101 001c 82640040 		.word	1073767554
 102              		.cfi_endproc
 103              	.LFE1:
 104              		.size	UART_1_Init, .-UART_1_Init
 105              		.section	.text.UART_1_Enable,"ax",%progbits
 106              		.align	2
 107              		.global	UART_1_Enable
 108              		.thumb
 109              		.thumb_func
 110              		.type	UART_1_Enable, %function
 111              	UART_1_Enable:
 112              	.LFB2:
 161:.\Generated_Source\PSoC5/UART_1.c **** 
 162:.\Generated_Source\PSoC5/UART_1.c **** 
 163:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART_1.c **** *
 167:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:.\Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART_1.c **** 
 173:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 6


 174:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 175:.\Generated_Source\PSoC5/UART_1.c **** *
 176:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 177:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 178:.\Generated_Source\PSoC5/UART_1.c **** *
 179:.\Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART_1.c **** *
 182:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:.\Generated_Source\PSoC5/UART_1.c **** {
 113              		.loc 1 184 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 82B0     		sub	sp, sp, #8
 122              		.cfi_def_cfa_offset 16
 123 0004 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 125              		.loc 1 186 0
 126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 127 000a 0346     		mov	r3, r0
 128 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/UART_1.c **** 
 188:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 129              		.loc 1 190 0
 130 000e 0C4B     		ldr	r3, .L9
 131 0010 0B4A     		ldr	r2, .L9
 132 0012 1278     		ldrb	r2, [r2]
 133 0014 D2B2     		uxtb	r2, r2
 134 0016 42F02002 		orr	r2, r2, #32
 135 001a D2B2     		uxtb	r2, r2
 136 001c 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC5/UART_1.c **** 
 192:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 137              		.loc 1 193 0
 138 001e 094B     		ldr	r3, .L9+4
 139 0020 084A     		ldr	r2, .L9+4
 140 0022 1278     		ldrb	r2, [r2]
 141 0024 D2B2     		uxtb	r2, r2
 142 0026 42F01002 		orr	r2, r2, #16
 143 002a D2B2     		uxtb	r2, r2
 144 002c 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC5/UART_1.c **** 
 195:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART_1.c **** 
 198:.\Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 7


 199:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART_1.c **** 
 204:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART_1.c **** 
 210:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 212:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART_1.c **** 
 218:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 145              		.loc 1 219 0
 146 002e FFF7FEFF 		bl	UART_1_IntClock_Start
 220:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART_1.c **** 
 222:.\Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 147              		.loc 1 222 0
 148 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 149 0034 1846     		mov	r0, r3
 150 0036 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/UART_1.c **** }
 151              		.loc 1 223 0
 152 003a 0837     		adds	r7, r7, #8
 153 003c BD46     		mov	sp, r7
 154              		@ sp needed
 155 003e 80BD     		pop	{r7, pc}
 156              	.L10:
 157              		.align	2
 158              	.L9:
 159 0040 95640040 		.word	1073767573
 160 0044 92640040 		.word	1073767570
 161              		.cfi_endproc
 162              	.LFE2:
 163              		.size	UART_1_Enable, .-UART_1_Enable
 164              		.section	.text.UART_1_Stop,"ax",%progbits
 165              		.align	2
 166              		.global	UART_1_Stop
 167              		.thumb
 168              		.thumb_func
 169              		.type	UART_1_Stop, %function
 170              	UART_1_Stop:
 171              	.LFB3:
 224:.\Generated_Source\PSoC5/UART_1.c **** 
 225:.\Generated_Source\PSoC5/UART_1.c **** 
 226:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 8


 229:.\Generated_Source\PSoC5/UART_1.c **** *
 230:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART_1.c **** *
 233:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 235:.\Generated_Source\PSoC5/UART_1.c **** *
 236:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 237:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 238:.\Generated_Source\PSoC5/UART_1.c **** *
 239:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:.\Generated_Source\PSoC5/UART_1.c **** {
 172              		.loc 1 241 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 82B0     		sub	sp, sp, #8
 181              		.cfi_def_cfa_offset 16
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 184              		.loc 1 243 0
 185 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 186 000a 0346     		mov	r3, r0
 187 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/UART_1.c **** 
 245:.\Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 188              		.loc 1 247 0
 189 000e 0C4B     		ldr	r3, .L12
 190 0010 0B4A     		ldr	r2, .L12
 191 0012 1278     		ldrb	r2, [r2]
 192 0014 D2B2     		uxtb	r2, r2
 193 0016 22F02002 		bic	r2, r2, #32
 194 001a D2B2     		uxtb	r2, r2
 195 001c 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART_1.c **** 
 250:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART_1.c **** 
 256:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 196              		.loc 1 257 0
 197 001e FFF7FEFF 		bl	UART_1_IntClock_Stop
 258:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 9


 260:.\Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 198              		.loc 1 262 0
 199 0022 084B     		ldr	r3, .L12+4
 200 0024 074A     		ldr	r2, .L12+4
 201 0026 1278     		ldrb	r2, [r2]
 202 0028 D2B2     		uxtb	r2, r2
 203 002a 22F01002 		bic	r2, r2, #16
 204 002e D2B2     		uxtb	r2, r2
 205 0030 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/UART_1.c **** 
 264:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART_1.c **** 
 269:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 271:.\Generated_Source\PSoC5/UART_1.c **** 
 272:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART_1.c **** 
 277:.\Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 206              		.loc 1 277 0
 207 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 208 0034 1846     		mov	r0, r3
 209 0036 FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/UART_1.c **** }
 210              		.loc 1 278 0
 211 003a 0837     		adds	r7, r7, #8
 212 003c BD46     		mov	sp, r7
 213              		@ sp needed
 214 003e 80BD     		pop	{r7, pc}
 215              	.L13:
 216              		.align	2
 217              	.L12:
 218 0040 95640040 		.word	1073767573
 219 0044 92640040 		.word	1073767570
 220              		.cfi_endproc
 221              	.LFE3:
 222              		.size	UART_1_Stop, .-UART_1_Stop
 223              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 224              		.align	2
 225              		.global	UART_1_ReadControlRegister
 226              		.thumb
 227              		.thumb_func
 228              		.type	UART_1_ReadControlRegister, %function
 229              	UART_1_ReadControlRegister:
 230              	.LFB4:
 279:.\Generated_Source\PSoC5/UART_1.c **** 
 280:.\Generated_Source\PSoC5/UART_1.c **** 
 281:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 10


 284:.\Generated_Source\PSoC5/UART_1.c **** *
 285:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART_1.c **** *
 288:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 290:.\Generated_Source\PSoC5/UART_1.c **** *
 291:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 292:.\Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART_1.c **** *
 294:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART_1.c **** {
 231              		.loc 1 296 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236 0000 80B4     		push	{r7}
 237              		.cfi_def_cfa_offset 4
 238              		.cfi_offset 7, -4
 239 0002 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART_1.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART_1.c ****     #else
 300:.\Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 241              		.loc 1 300 0
 242 0004 034B     		ldr	r3, .L16
 243 0006 1B78     		ldrb	r3, [r3]
 244 0008 DBB2     		uxtb	r3, r3
 301:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART_1.c **** }
 245              		.loc 1 302 0
 246 000a 1846     		mov	r0, r3
 247 000c BD46     		mov	sp, r7
 248              		@ sp needed
 249 000e 5DF8047B 		ldr	r7, [sp], #4
 250 0012 7047     		bx	lr
 251              	.L17:
 252              		.align	2
 253              	.L16:
 254 0014 74640040 		.word	1073767540
 255              		.cfi_endproc
 256              	.LFE4:
 257              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 258              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 259              		.align	2
 260              		.global	UART_1_WriteControlRegister
 261              		.thumb
 262              		.thumb_func
 263              		.type	UART_1_WriteControlRegister, %function
 264              	UART_1_WriteControlRegister:
 265              	.LFB5:
 303:.\Generated_Source\PSoC5/UART_1.c **** 
 304:.\Generated_Source\PSoC5/UART_1.c **** 
 305:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 11


 306:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART_1.c **** *
 309:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART_1.c **** *
 312:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART_1.c **** *
 315:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 316:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 317:.\Generated_Source\PSoC5/UART_1.c **** *
 318:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART_1.c **** {
 266              		.loc 1 320 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271 0000 80B4     		push	{r7}
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 83B0     		sub	sp, sp, #12
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              		.cfi_def_cfa_register 7
 278 0006 0346     		mov	r3, r0
 279 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART_1.c ****         {
 324:.\Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART_1.c ****         }
 326:.\Generated_Source\PSoC5/UART_1.c ****     #else
 327:.\Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 280              		.loc 1 327 0
 281 000a 044B     		ldr	r3, .L19
 282 000c FA79     		ldrb	r2, [r7, #7]
 283 000e 1A70     		strb	r2, [r3]
 328:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART_1.c **** }
 284              		.loc 1 329 0
 285 0010 0C37     		adds	r7, r7, #12
 286 0012 BD46     		mov	sp, r7
 287              		@ sp needed
 288 0014 5DF8047B 		ldr	r7, [sp], #4
 289 0018 7047     		bx	lr
 290              	.L20:
 291 001a 00BF     		.align	2
 292              	.L19:
 293 001c 74640040 		.word	1073767540
 294              		.cfi_endproc
 295              	.LFE5:
 296              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 297              		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 298              		.align	2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 12


 299              		.global	UART_1_SetRxInterruptMode
 300              		.thumb
 301              		.thumb_func
 302              		.type	UART_1_SetRxInterruptMode, %function
 303              	UART_1_SetRxInterruptMode:
 304              	.LFB6:
 330:.\Generated_Source\PSoC5/UART_1.c **** 
 331:.\Generated_Source\PSoC5/UART_1.c **** 
 332:.\Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART_1.c ****     *
 337:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART_1.c ****     *
 340:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART_1.c ****     *
 352:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART_1.c ****     *
 355:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART_1.c ****     *
 358:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART_1.c ****     {
 305              		.loc 1 360 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 8
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B4     		push	{r7}
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 83B0     		sub	sp, sp, #12
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              		.cfi_def_cfa_register 7
 317 0006 0346     		mov	r3, r0
 318 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 319              		.loc 1 361 0
 320 000a 044B     		ldr	r3, .L22
 321 000c FA79     		ldrb	r2, [r7, #7]
 322 000e 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC5/UART_1.c ****     }
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 13


 323              		.loc 1 362 0
 324 0010 0C37     		adds	r7, r7, #12
 325 0012 BD46     		mov	sp, r7
 326              		@ sp needed
 327 0014 5DF8047B 		ldr	r7, [sp], #4
 328 0018 7047     		bx	lr
 329              	.L23:
 330 001a 00BF     		.align	2
 331              	.L22:
 332 001c 82640040 		.word	1073767554
 333              		.cfi_endproc
 334              	.LFE6:
 335              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 336              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 337              		.align	2
 338              		.global	UART_1_ReadRxData
 339              		.thumb
 340              		.thumb_func
 341              		.type	UART_1_ReadRxData, %function
 342              	UART_1_ReadRxData:
 343              	.LFB7:
 363:.\Generated_Source\PSoC5/UART_1.c **** 
 364:.\Generated_Source\PSoC5/UART_1.c **** 
 365:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART_1.c ****     *
 369:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART_1.c ****     *
 373:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_1.c ****     *
 376:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART_1.c ****     *
 379:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART_1.c ****     *
 388:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART_1.c ****     *
 391:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART_1.c ****     {
 344              		.loc 1 393 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 14


 349 0000 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0002 83B0     		sub	sp, sp, #12
 353              		.cfi_def_cfa_offset 16
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART_1.c **** 
 396:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART_1.c **** 
 398:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART_1.c **** 
 401:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART_1.c **** 
 404:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART_1.c **** 
 407:.\Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART_1.c ****         {
 409:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART_1.c **** 
 412:.\Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART_1.c ****             {
 414:.\Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART_1.c ****             }
 416:.\Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART_1.c **** 
 419:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART_1.c ****             {
 421:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART_1.c ****                             */
 430:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART_1.c ****                         }
 432:.\Generated_Source\PSoC5/UART_1.c ****                     #else
 433:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART_1.c ****             }
 437:.\Generated_Source\PSoC5/UART_1.c ****         }
 438:.\Generated_Source\PSoC5/UART_1.c ****         else
 439:.\Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART_1.c ****         }
 442:.\Generated_Source\PSoC5/UART_1.c **** 
 443:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 15


 444:.\Generated_Source\PSoC5/UART_1.c **** 
 445:.\Generated_Source\PSoC5/UART_1.c ****     #else
 446:.\Generated_Source\PSoC5/UART_1.c **** 
 447:.\Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 356              		.loc 1 448 0
 357 0006 054B     		ldr	r3, .L26
 358 0008 1B78     		ldrb	r3, [r3]
 359 000a FB71     		strb	r3, [r7, #7]
 449:.\Generated_Source\PSoC5/UART_1.c **** 
 450:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART_1.c **** 
 452:.\Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 360              		.loc 1 452 0
 361 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/UART_1.c ****     }
 362              		.loc 1 453 0
 363 000e 1846     		mov	r0, r3
 364 0010 0C37     		adds	r7, r7, #12
 365 0012 BD46     		mov	sp, r7
 366              		@ sp needed
 367 0014 5DF8047B 		ldr	r7, [sp], #4
 368 0018 7047     		bx	lr
 369              	.L27:
 370 001a 00BF     		.align	2
 371              	.L26:
 372 001c 42640040 		.word	1073767490
 373              		.cfi_endproc
 374              	.LFE7:
 375              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 376              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 377              		.align	2
 378              		.global	UART_1_ReadRxStatus
 379              		.thumb
 380              		.thumb_func
 381              		.type	UART_1_ReadRxStatus, %function
 382              	UART_1_ReadRxStatus:
 383              	.LFB8:
 454:.\Generated_Source\PSoC5/UART_1.c **** 
 455:.\Generated_Source\PSoC5/UART_1.c **** 
 456:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART_1.c ****     *
 460:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART_1.c ****     *
 464:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART_1.c ****     *
 467:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART_1.c ****     *
 470:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 16


 473:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART_1.c ****     *
 476:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART_1.c ****     *
 484:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART_1.c ****     {
 384              		.loc 1 486 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART_1.c **** 
 489:.\Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 396              		.loc 1 489 0
 397 0006 064B     		ldr	r3, .L30
 398 0008 1B78     		ldrb	r3, [r3]
 399 000a DBB2     		uxtb	r3, r3
 400 000c 03F07F03 		and	r3, r3, #127
 401 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/UART_1.c **** 
 491:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART_1.c ****         {
 494:.\Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART_1.c ****         }
 497:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART_1.c **** 
 499:.\Generated_Source\PSoC5/UART_1.c ****         return(status);
 402              		.loc 1 499 0
 403 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/UART_1.c ****     }
 404              		.loc 1 500 0
 405 0014 1846     		mov	r0, r3
 406 0016 0C37     		adds	r7, r7, #12
 407 0018 BD46     		mov	sp, r7
 408              		@ sp needed
 409 001a 5DF8047B 		ldr	r7, [sp], #4
 410 001e 7047     		bx	lr
 411              	.L31:
 412              		.align	2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 17


 413              	.L30:
 414 0020 62640040 		.word	1073767522
 415              		.cfi_endproc
 416              	.LFE8:
 417              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 418              		.section	.text.UART_1_GetChar,"ax",%progbits
 419              		.align	2
 420              		.global	UART_1_GetChar
 421              		.thumb
 422              		.thumb_func
 423              		.type	UART_1_GetChar, %function
 424              	UART_1_GetChar:
 425              	.LFB9:
 501:.\Generated_Source\PSoC5/UART_1.c **** 
 502:.\Generated_Source\PSoC5/UART_1.c **** 
 503:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART_1.c ****     *
 507:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:.\Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART_1.c ****     *
 512:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART_1.c ****     *
 515:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART_1.c ****     *
 519:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART_1.c ****     *
 528:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART_1.c ****     *
 531:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART_1.c ****     {
 426              		.loc 1 533 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431 0000 80B4     		push	{r7}
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 83B0     		sub	sp, sp, #12
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 18


 437              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 438              		.loc 1 534 0
 439 0006 0023     		movs	r3, #0
 440 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART_1.c **** 
 537:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART_1.c **** 
 541:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART_1.c **** 
 544:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART_1.c **** 
 547:.\Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/UART_1.c ****         {
 549:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART_1.c ****             {
 553:.\Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART_1.c ****             }
 555:.\Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART_1.c **** 
 558:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART_1.c ****             {
 560:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART_1.c ****                             */
 569:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART_1.c ****                         }
 571:.\Generated_Source\PSoC5/UART_1.c ****                     #else
 572:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART_1.c ****             }
 576:.\Generated_Source\PSoC5/UART_1.c **** 
 577:.\Generated_Source\PSoC5/UART_1.c ****         }
 578:.\Generated_Source\PSoC5/UART_1.c ****         else
 579:.\Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:.\Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART_1.c ****                 {
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 19


 587:.\Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART_1.c ****                 }
 589:.\Generated_Source\PSoC5/UART_1.c ****             }
 590:.\Generated_Source\PSoC5/UART_1.c ****         }
 591:.\Generated_Source\PSoC5/UART_1.c **** 
 592:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:.\Generated_Source\PSoC5/UART_1.c **** 
 594:.\Generated_Source\PSoC5/UART_1.c ****     #else
 595:.\Generated_Source\PSoC5/UART_1.c **** 
 596:.\Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 441              		.loc 1 596 0
 442 000a 0C4B     		ldr	r3, .L35
 443 000c 1B78     		ldrb	r3, [r3]
 444 000e BB71     		strb	r3, [r7, #6]
 597:.\Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 445              		.loc 1 597 0
 446 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 447 0012 03F02003 		and	r3, r3, #32
 448 0016 002B     		cmp	r3, #0
 449 0018 09D0     		beq	.L33
 598:.\Generated_Source\PSoC5/UART_1.c ****         {
 599:.\Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 450              		.loc 1 600 0
 451 001a 094B     		ldr	r3, .L35+4
 452 001c 1B78     		ldrb	r3, [r3]
 453 001e FB71     		strb	r3, [r7, #7]
 601:.\Generated_Source\PSoC5/UART_1.c **** 
 602:.\Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 454              		.loc 1 604 0
 455 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 456 0022 03F01E03 		and	r3, r3, #30
 603:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 457              		.loc 1 603 0
 458 0026 002B     		cmp	r3, #0
 459 0028 01D0     		beq	.L33
 605:.\Generated_Source\PSoC5/UART_1.c ****             {
 606:.\Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 460              		.loc 1 606 0
 461 002a 0023     		movs	r3, #0
 462 002c FB71     		strb	r3, [r7, #7]
 463              	.L33:
 607:.\Generated_Source\PSoC5/UART_1.c ****             }
 608:.\Generated_Source\PSoC5/UART_1.c ****         }
 609:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART_1.c **** 
 611:.\Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 464              		.loc 1 611 0
 465 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/UART_1.c ****     }
 466              		.loc 1 612 0
 467 0030 1846     		mov	r0, r3
 468 0032 0C37     		adds	r7, r7, #12
 469 0034 BD46     		mov	sp, r7
 470              		@ sp needed
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 20


 471 0036 5DF8047B 		ldr	r7, [sp], #4
 472 003a 7047     		bx	lr
 473              	.L36:
 474              		.align	2
 475              	.L35:
 476 003c 62640040 		.word	1073767522
 477 0040 42640040 		.word	1073767490
 478              		.cfi_endproc
 479              	.LFE9:
 480              		.size	UART_1_GetChar, .-UART_1_GetChar
 481              		.section	.text.UART_1_GetByte,"ax",%progbits
 482              		.align	2
 483              		.global	UART_1_GetByte
 484              		.thumb
 485              		.thumb_func
 486              		.type	UART_1_GetByte, %function
 487              	UART_1_GetByte:
 488              	.LFB10:
 613:.\Generated_Source\PSoC5/UART_1.c **** 
 614:.\Generated_Source\PSoC5/UART_1.c **** 
 615:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART_1.c ****     *
 619:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART_1.c ****     *
 623:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART_1.c ****     *
 626:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART_1.c ****     *
 630:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART_1.c ****     *
 633:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART_1.c ****     {
 489              		.loc 1 635 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 98B5     		push	{r3, r4, r7, lr}
 494              		.cfi_def_cfa_offset 16
 495              		.cfi_offset 3, -16
 496              		.cfi_offset 4, -12
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/UART_1.c ****         
 637:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 21


 640:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART_1.c ****     #else
 646:.\Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 501              		.loc 1 646 0
 502 0004 FFF7FEFF 		bl	UART_1_ReadRxStatus
 503 0008 0346     		mov	r3, r0
 504 000a 1B02     		lsls	r3, r3, #8
 505 000c 9CB2     		uxth	r4, r3
 506 000e FFF7FEFF 		bl	UART_1_ReadRxData
 507 0012 0346     		mov	r3, r0
 508 0014 2246     		mov	r2, r4	@ movhi
 509 0016 1343     		orrs	r3, r3, r2
 510 0018 9BB2     		uxth	r3, r3
 511 001a 9BB2     		uxth	r3, r3
 647:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART_1.c ****         
 649:.\Generated_Source\PSoC5/UART_1.c ****     }
 512              		.loc 1 649 0
 513 001c 1846     		mov	r0, r3
 514 001e 98BD     		pop	{r3, r4, r7, pc}
 515              		.cfi_endproc
 516              	.LFE10:
 517              		.size	UART_1_GetByte, .-UART_1_GetByte
 518              		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 519              		.align	2
 520              		.global	UART_1_GetRxBufferSize
 521              		.thumb
 522              		.thumb_func
 523              		.type	UART_1_GetRxBufferSize, %function
 524              	UART_1_GetRxBufferSize:
 525              	.LFB11:
 650:.\Generated_Source\PSoC5/UART_1.c **** 
 651:.\Generated_Source\PSoC5/UART_1.c **** 
 652:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART_1.c ****     *
 656:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART_1.c ****     *
 664:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART_1.c ****     *
 667:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART_1.c ****     *
 671:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 22


 672:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART_1.c ****     *
 676:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART_1.c ****     *
 679:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART_1.c ****     *
 682:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART_1.c ****                                                             
 685:.\Generated_Source\PSoC5/UART_1.c ****     {
 526              		.loc 1 685 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 8
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531 0000 80B4     		push	{r7}
 532              		.cfi_def_cfa_offset 4
 533              		.cfi_offset 7, -4
 534 0002 83B0     		sub	sp, sp, #12
 535              		.cfi_def_cfa_offset 16
 536 0004 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART_1.c **** 
 688:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART_1.c **** 
 690:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART_1.c **** 
 693:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART_1.c ****         {
 695:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART_1.c ****             {
 697:.\Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART_1.c ****             }
 699:.\Generated_Source\PSoC5/UART_1.c ****             else
 700:.\Generated_Source\PSoC5/UART_1.c ****             {
 701:.\Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART_1.c ****             }
 703:.\Generated_Source\PSoC5/UART_1.c ****         }
 704:.\Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART_1.c ****         {
 706:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:.\Generated_Source\PSoC5/UART_1.c ****         }
 708:.\Generated_Source\PSoC5/UART_1.c ****         else
 709:.\Generated_Source\PSoC5/UART_1.c ****         {
 710:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART_1.c ****         }
 712:.\Generated_Source\PSoC5/UART_1.c **** 
 713:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART_1.c **** 
 715:.\Generated_Source\PSoC5/UART_1.c ****     #else
 716:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 23


 717:.\Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 538              		.loc 1 718 0
 539 0006 094B     		ldr	r3, .L43
 540 0008 1B78     		ldrb	r3, [r3]
 541 000a DBB2     		uxtb	r3, r3
 542 000c 03F02003 		and	r3, r3, #32
 543 0010 002B     		cmp	r3, #0
 544 0012 01D0     		beq	.L40
 545              		.loc 1 718 0 is_stmt 0 discriminator 1
 546 0014 0123     		movs	r3, #1
 547 0016 00E0     		b	.L41
 548              	.L40:
 549              		.loc 1 718 0 discriminator 2
 550 0018 0023     		movs	r3, #0
 551              	.L41:
 552              		.loc 1 718 0 discriminator 3
 553 001a FB71     		strb	r3, [r7, #7]
 719:.\Generated_Source\PSoC5/UART_1.c **** 
 720:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART_1.c **** 
 722:.\Generated_Source\PSoC5/UART_1.c ****         return(size);
 554              		.loc 1 722 0 is_stmt 1 discriminator 3
 555 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:.\Generated_Source\PSoC5/UART_1.c ****     }
 556              		.loc 1 723 0 discriminator 3
 557 001e 1846     		mov	r0, r3
 558 0020 0C37     		adds	r7, r7, #12
 559 0022 BD46     		mov	sp, r7
 560              		@ sp needed
 561 0024 5DF8047B 		ldr	r7, [sp], #4
 562 0028 7047     		bx	lr
 563              	.L44:
 564 002a 00BF     		.align	2
 565              	.L43:
 566 002c 62640040 		.word	1073767522
 567              		.cfi_endproc
 568              	.LFE11:
 569              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 570              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 571              		.align	2
 572              		.global	UART_1_ClearRxBuffer
 573              		.thumb
 574              		.thumb_func
 575              		.type	UART_1_ClearRxBuffer, %function
 576              	UART_1_ClearRxBuffer:
 577              	.LFB12:
 724:.\Generated_Source\PSoC5/UART_1.c **** 
 725:.\Generated_Source\PSoC5/UART_1.c **** 
 726:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART_1.c ****     *
 730:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART_1.c ****     *
 733:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 24


 734:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART_1.c ****     *
 736:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART_1.c ****     *
 739:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART_1.c ****     *
 745:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART_1.c ****     *
 748:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART_1.c ****     *
 753:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART_1.c ****     *
 756:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART_1.c ****     {
 578              		.loc 1 758 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 8
 581              		@ frame_needed = 1, uses_anonymous_args = 0
 582 0000 80B5     		push	{r7, lr}
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 7, -8
 585              		.cfi_offset 14, -4
 586 0002 82B0     		sub	sp, sp, #8
 587              		.cfi_def_cfa_offset 16
 588 0004 00AF     		add	r7, sp, #0
 589              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART_1.c **** 
 761:.\Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 590              		.loc 1 762 0
 591 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 592 000a 0346     		mov	r3, r0
 593 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 594              		.loc 1 763 0
 595 000e 0B4B     		ldr	r3, .L46
 596 0010 0A4A     		ldr	r2, .L46
 597 0012 1278     		ldrb	r2, [r2]
 598 0014 D2B2     		uxtb	r2, r2
 599 0016 42F00102 		orr	r2, r2, #1
 600 001a D2B2     		uxtb	r2, r2
 601 001c 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 602              		.loc 1 764 0
 603 001e 074B     		ldr	r3, .L46
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 25


 604 0020 064A     		ldr	r2, .L46
 605 0022 1278     		ldrb	r2, [r2]
 606 0024 D2B2     		uxtb	r2, r2
 607 0026 22F00102 		bic	r2, r2, #1
 608 002a D2B2     		uxtb	r2, r2
 609 002c 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 610              		.loc 1 765 0
 611 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612 0030 1846     		mov	r0, r3
 613 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/UART_1.c **** 
 767:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART_1.c **** 
 769:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:.\Generated_Source\PSoC5/UART_1.c **** 
 772:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/UART_1.c **** 
 777:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART_1.c **** 
 779:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART_1.c **** 
 781:.\Generated_Source\PSoC5/UART_1.c ****     }
 614              		.loc 1 781 0
 615 0036 0837     		adds	r7, r7, #8
 616 0038 BD46     		mov	sp, r7
 617              		@ sp needed
 618 003a 80BD     		pop	{r7, pc}
 619              	.L47:
 620              		.align	2
 621              	.L46:
 622 003c 92640040 		.word	1073767570
 623              		.cfi_endproc
 624              	.LFE12:
 625              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 626              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 627              		.align	2
 628              		.global	UART_1_SetRxAddressMode
 629              		.thumb
 630              		.thumb_func
 631              		.type	UART_1_SetRxAddressMode, %function
 632              	UART_1_SetRxAddressMode:
 633              	.LFB13:
 782:.\Generated_Source\PSoC5/UART_1.c **** 
 783:.\Generated_Source\PSoC5/UART_1.c **** 
 784:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART_1.c ****     *
 788:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 26


 792:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART_1.c ****     *
 804:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART_1.c ****     *
 807:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART_1.c ****     *
 812:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART_1.c ****                                                         
 815:.\Generated_Source\PSoC5/UART_1.c ****     {
 634              		.loc 1 815 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639 0000 80B4     		push	{r7}
 640              		.cfi_def_cfa_offset 4
 641              		.cfi_offset 7, -4
 642 0002 83B0     		sub	sp, sp, #12
 643              		.cfi_def_cfa_offset 16
 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 646 0006 0346     		mov	r3, r0
 647 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART_1.c ****                 {
 820:.\Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART_1.c ****                 }
 822:.\Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART_1.c **** 
 828:.\Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 27


 835:.\Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART_1.c ****             {
 837:.\Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART_1.c ****             }
 839:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART_1.c ****     }
 648              		.loc 1 840 0
 649 000a 0C37     		adds	r7, r7, #12
 650 000c BD46     		mov	sp, r7
 651              		@ sp needed
 652 000e 5DF8047B 		ldr	r7, [sp], #4
 653 0012 7047     		bx	lr
 654              		.cfi_endproc
 655              	.LFE13:
 656              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 657              		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 658              		.align	2
 659              		.global	UART_1_SetRxAddress1
 660              		.thumb
 661              		.thumb_func
 662              		.type	UART_1_SetRxAddress1, %function
 663              	UART_1_SetRxAddress1:
 664              	.LFB14:
 841:.\Generated_Source\PSoC5/UART_1.c **** 
 842:.\Generated_Source\PSoC5/UART_1.c **** 
 843:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART_1.c ****     *
 847:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART_1.c ****     *
 850:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART_1.c ****     *
 853:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART_1.c ****     *
 856:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART_1.c ****     {
 665              		.loc 1 858 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 8
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670 0000 80B4     		push	{r7}
 671              		.cfi_def_cfa_offset 4
 672              		.cfi_offset 7, -4
 673 0002 83B0     		sub	sp, sp, #12
 674              		.cfi_def_cfa_offset 16
 675 0004 00AF     		add	r7, sp, #0
 676              		.cfi_def_cfa_register 7
 677 0006 0346     		mov	r3, r0
 678 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 679              		.loc 1 859 0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 28


 680 000a 044B     		ldr	r3, .L50
 681 000c FA79     		ldrb	r2, [r7, #7]
 682 000e 1A70     		strb	r2, [r3]
 860:.\Generated_Source\PSoC5/UART_1.c ****     }
 683              		.loc 1 860 0
 684 0010 0C37     		adds	r7, r7, #12
 685 0012 BD46     		mov	sp, r7
 686              		@ sp needed
 687 0014 5DF8047B 		ldr	r7, [sp], #4
 688 0018 7047     		bx	lr
 689              	.L51:
 690 001a 00BF     		.align	2
 691              	.L50:
 692 001c 22640040 		.word	1073767458
 693              		.cfi_endproc
 694              	.LFE14:
 695              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 696              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 697              		.align	2
 698              		.global	UART_1_SetRxAddress2
 699              		.thumb
 700              		.thumb_func
 701              		.type	UART_1_SetRxAddress2, %function
 702              	UART_1_SetRxAddress2:
 703              	.LFB15:
 861:.\Generated_Source\PSoC5/UART_1.c **** 
 862:.\Generated_Source\PSoC5/UART_1.c **** 
 863:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART_1.c ****     *
 867:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART_1.c ****     *
 870:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART_1.c ****     *
 873:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART_1.c ****     *
 876:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART_1.c ****     {
 704              		.loc 1 878 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 8
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709 0000 80B4     		push	{r7}
 710              		.cfi_def_cfa_offset 4
 711              		.cfi_offset 7, -4
 712 0002 83B0     		sub	sp, sp, #12
 713              		.cfi_def_cfa_offset 16
 714 0004 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
 716 0006 0346     		mov	r3, r0
 717 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 29


 879:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 718              		.loc 1 879 0
 719 000a 044B     		ldr	r3, .L53
 720 000c FA79     		ldrb	r2, [r7, #7]
 721 000e 1A70     		strb	r2, [r3]
 880:.\Generated_Source\PSoC5/UART_1.c ****     }
 722              		.loc 1 880 0
 723 0010 0C37     		adds	r7, r7, #12
 724 0012 BD46     		mov	sp, r7
 725              		@ sp needed
 726 0014 5DF8047B 		ldr	r7, [sp], #4
 727 0018 7047     		bx	lr
 728              	.L54:
 729 001a 00BF     		.align	2
 730              	.L53:
 731 001c 32640040 		.word	1073767474
 732              		.cfi_endproc
 733              	.LFE15:
 734              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 735              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 736              		.align	2
 737              		.global	UART_1_SetTxInterruptMode
 738              		.thumb
 739              		.thumb_func
 740              		.type	UART_1_SetTxInterruptMode, %function
 741              	UART_1_SetTxInterruptMode:
 742              	.LFB16:
 881:.\Generated_Source\PSoC5/UART_1.c **** 
 882:.\Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART_1.c **** 
 884:.\Generated_Source\PSoC5/UART_1.c **** 
 885:.\Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART_1.c ****     *
 890:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART_1.c ****     *
 894:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART_1.c ****     *
 901:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART_1.c ****     *
 904:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART_1.c ****     *
 907:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART_1.c ****     {
 743              		.loc 1 909 0
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 30


 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 8
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748 0000 80B4     		push	{r7}
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 7, -4
 751 0002 83B0     		sub	sp, sp, #12
 752              		.cfi_def_cfa_offset 16
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 755 0006 0346     		mov	r3, r0
 756 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 757              		.loc 1 910 0
 758 000a 044B     		ldr	r3, .L56
 759 000c FA79     		ldrb	r2, [r7, #7]
 760 000e 1A70     		strb	r2, [r3]
 911:.\Generated_Source\PSoC5/UART_1.c ****     }
 761              		.loc 1 911 0
 762 0010 0C37     		adds	r7, r7, #12
 763 0012 BD46     		mov	sp, r7
 764              		@ sp needed
 765 0014 5DF8047B 		ldr	r7, [sp], #4
 766 0018 7047     		bx	lr
 767              	.L57:
 768 001a 00BF     		.align	2
 769              	.L56:
 770 001c 82640040 		.word	1073767554
 771              		.cfi_endproc
 772              	.LFE16:
 773              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 774              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 775              		.align	2
 776              		.global	UART_1_WriteTxData
 777              		.thumb
 778              		.thumb_func
 779              		.type	UART_1_WriteTxData, %function
 780              	UART_1_WriteTxData:
 781              	.LFB17:
 912:.\Generated_Source\PSoC5/UART_1.c **** 
 913:.\Generated_Source\PSoC5/UART_1.c **** 
 914:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART_1.c ****     *
 918:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART_1.c ****     *
 923:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART_1.c ****     *
 926:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART_1.c ****     * None.
 928:.\Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 31


 929:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART_1.c ****     *
 938:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART_1.c ****     *
 941:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART_1.c ****     {
 782              		.loc 1 943 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 8
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787 0000 80B4     		push	{r7}
 788              		.cfi_def_cfa_offset 4
 789              		.cfi_offset 7, -4
 790 0002 83B0     		sub	sp, sp, #12
 791              		.cfi_def_cfa_offset 16
 792 0004 00AF     		add	r7, sp, #0
 793              		.cfi_def_cfa_register 7
 794 0006 0346     		mov	r3, r0
 795 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 796              		.loc 1 945 0
 797 000a 064B     		ldr	r3, .L60
 798 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 799 000e 002B     		cmp	r3, #0
 800 0010 02D0     		beq	.L58
 946:.\Generated_Source\PSoC5/UART_1.c ****         {
 947:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART_1.c **** 
 949:.\Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART_1.c **** 
 952:.\Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART_1.c ****             {
 955:.\Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART_1.c ****             }
 958:.\Generated_Source\PSoC5/UART_1.c ****             else
 959:.\Generated_Source\PSoC5/UART_1.c ****             {
 960:.\Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART_1.c ****                 {
 962:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART_1.c ****                 }
 964:.\Generated_Source\PSoC5/UART_1.c **** 
 965:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 32


 967:.\Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART_1.c ****             }
 970:.\Generated_Source\PSoC5/UART_1.c **** 
 971:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART_1.c **** 
 973:.\Generated_Source\PSoC5/UART_1.c ****         #else
 974:.\Generated_Source\PSoC5/UART_1.c **** 
 975:.\Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 801              		.loc 1 976 0
 802 0012 054B     		ldr	r3, .L60+4
 803 0014 FA79     		ldrb	r2, [r7, #7]
 804 0016 1A70     		strb	r2, [r3]
 805              	.L58:
 977:.\Generated_Source\PSoC5/UART_1.c **** 
 978:.\Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART_1.c ****         }
 980:.\Generated_Source\PSoC5/UART_1.c ****     }
 806              		.loc 1 980 0
 807 0018 0C37     		adds	r7, r7, #12
 808 001a BD46     		mov	sp, r7
 809              		@ sp needed
 810 001c 5DF8047B 		ldr	r7, [sp], #4
 811 0020 7047     		bx	lr
 812              	.L61:
 813 0022 00BF     		.align	2
 814              	.L60:
 815 0024 00000000 		.word	UART_1_initVar
 816 0028 52640040 		.word	1073767506
 817              		.cfi_endproc
 818              	.LFE17:
 819              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 820              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 821              		.align	2
 822              		.global	UART_1_ReadTxStatus
 823              		.thumb
 824              		.thumb_func
 825              		.type	UART_1_ReadTxStatus, %function
 826              	UART_1_ReadTxStatus:
 827              	.LFB18:
 981:.\Generated_Source\PSoC5/UART_1.c **** 
 982:.\Generated_Source\PSoC5/UART_1.c **** 
 983:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART_1.c ****     *
 987:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART_1.c ****     *
 990:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART_1.c ****     *
 993:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART_1.c ****     *
 996:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 33


 997:.\Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART_1.c ****     *
1002:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART_1.c ****     {
 828              		.loc 1 1004 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              		.cfi_def_cfa_offset 4
 835              		.cfi_offset 7, -4
 836 0002 00AF     		add	r7, sp, #0
 837              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 838              		.loc 1 1005 0
 839 0004 034B     		ldr	r3, .L64
 840 0006 1B78     		ldrb	r3, [r3]
 841 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/UART_1.c ****     }
 842              		.loc 1 1006 0
 843 000a 1846     		mov	r0, r3
 844 000c BD46     		mov	sp, r7
 845              		@ sp needed
 846 000e 5DF8047B 		ldr	r7, [sp], #4
 847 0012 7047     		bx	lr
 848              	.L65:
 849              		.align	2
 850              	.L64:
 851 0014 62640040 		.word	1073767522
 852              		.cfi_endproc
 853              	.LFE18:
 854              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 855              		.section	.text.UART_1_PutChar,"ax",%progbits
 856              		.align	2
 857              		.global	UART_1_PutChar
 858              		.thumb
 859              		.thumb_func
 860              		.type	UART_1_PutChar, %function
 861              	UART_1_PutChar:
 862              	.LFB19:
1007:.\Generated_Source\PSoC5/UART_1.c **** 
1008:.\Generated_Source\PSoC5/UART_1.c **** 
1009:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART_1.c ****     *
1013:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART_1.c ****     *
1018:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 34


1019:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART_1.c ****     *
1021:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART_1.c ****     *
1024:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART_1.c ****     *
1034:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART_1.c ****     *
1037:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART_1.c ****     *
1040:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART_1.c ****     {
 863              		.loc 1 1042 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 8
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 868 0000 80B4     		push	{r7}
 869              		.cfi_def_cfa_offset 4
 870              		.cfi_offset 7, -4
 871 0002 83B0     		sub	sp, sp, #12
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
 875 0006 0346     		mov	r3, r0
 876 0008 FB71     		strb	r3, [r7, #7]
1043:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART_1.c ****         */
1048:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART_1.c **** 
1051:.\Generated_Source\PSoC5/UART_1.c ****         do
1052:.\Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART_1.c **** 
1054:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > 255) */
1058:.\Generated_Source\PSoC5/UART_1.c **** 
1059:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 35


1062:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > 255) */
1066:.\Generated_Source\PSoC5/UART_1.c ****         }
1067:.\Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART_1.c **** 
1071:.\Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART_1.c ****         {
1074:.\Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART_1.c ****         }
1077:.\Generated_Source\PSoC5/UART_1.c ****         else
1078:.\Generated_Source\PSoC5/UART_1.c ****         {
1079:.\Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART_1.c ****             {
1081:.\Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART_1.c ****             }
1083:.\Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/UART_1.c **** 
1087:.\Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > 255) */
1091:.\Generated_Source\PSoC5/UART_1.c **** 
1092:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART_1.c **** 
1094:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > 255) */
1097:.\Generated_Source\PSoC5/UART_1.c **** 
1098:.\Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/UART_1.c ****             {
1100:.\Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART_1.c ****             }
1103:.\Generated_Source\PSoC5/UART_1.c ****         }
1104:.\Generated_Source\PSoC5/UART_1.c **** 
1105:.\Generated_Source\PSoC5/UART_1.c ****     #else
1106:.\Generated_Source\PSoC5/UART_1.c **** 
1107:.\Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 877              		.loc 1 1107 0
 878 000a 00BF     		nop
 879              	.L67:
 880              		.loc 1 1107 0 is_stmt 0 discriminator 1
 881 000c 074B     		ldr	r3, .L68
 882 000e 1B78     		ldrb	r3, [r3]
 883 0010 DBB2     		uxtb	r3, r3
 884 0012 03F02003 		and	r3, r3, #32
 885 0016 002B     		cmp	r3, #0
 886 0018 F8D1     		bne	.L67
1108:.\Generated_Source\PSoC5/UART_1.c ****         {
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 36


1109:.\Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART_1.c ****         }
1111:.\Generated_Source\PSoC5/UART_1.c **** 
1112:.\Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 887              		.loc 1 1113 0 is_stmt 1
 888 001a 054B     		ldr	r3, .L68+4
 889 001c FA79     		ldrb	r2, [r7, #7]
 890 001e 1A70     		strb	r2, [r3]
1114:.\Generated_Source\PSoC5/UART_1.c **** 
1115:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End (UART_1_TX_INTERRUPT_ENABLED) */
1116:.\Generated_Source\PSoC5/UART_1.c ****     }
 891              		.loc 1 1116 0
 892 0020 0C37     		adds	r7, r7, #12
 893 0022 BD46     		mov	sp, r7
 894              		@ sp needed
 895 0024 5DF8047B 		ldr	r7, [sp], #4
 896 0028 7047     		bx	lr
 897              	.L69:
 898 002a 00BF     		.align	2
 899              	.L68:
 900 002c 62640040 		.word	1073767522
 901 0030 52640040 		.word	1073767506
 902              		.cfi_endproc
 903              	.LFE19:
 904              		.size	UART_1_PutChar, .-UART_1_PutChar
 905              		.section	.text.UART_1_PutString,"ax",%progbits
 906              		.align	2
 907              		.global	UART_1_PutString
 908              		.thumb
 909              		.thumb_func
 910              		.type	UART_1_PutString, %function
 911              	UART_1_PutString:
 912              	.LFB20:
1117:.\Generated_Source\PSoC5/UART_1.c **** 
1118:.\Generated_Source\PSoC5/UART_1.c **** 
1119:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART_1.c ****     *
1123:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART_1.c ****     *
1126:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART_1.c ****     *
1129:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART_1.c ****     *
1132:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART_1.c ****     *
1136:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART_1.c ****     *
1139:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 37


1140:.\Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART_1.c ****     *
1144:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART_1.c ****     {
 913              		.loc 1 1146 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 16
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 84B0     		sub	sp, sp, #16
 922              		.cfi_def_cfa_offset 24
 923 0004 00AF     		add	r7, sp, #0
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 926              		.loc 1 1147 0
 927 0008 0023     		movs	r3, #0
 928 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/UART_1.c **** 
1149:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 929              		.loc 1 1150 0
 930 000c 0B4B     		ldr	r3, .L74
 931 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 932 0010 002B     		cmp	r3, #0
 933 0012 10D0     		beq	.L70
1151:.\Generated_Source\PSoC5/UART_1.c ****         {
1152:.\Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 934              		.loc 1 1153 0
 935 0014 09E0     		b	.L72
 936              	.L73:
1154:.\Generated_Source\PSoC5/UART_1.c ****             {
1155:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 937              		.loc 1 1155 0
 938 0016 FB89     		ldrh	r3, [r7, #14]
 939 0018 7A68     		ldr	r2, [r7, #4]
 940 001a 1344     		add	r3, r3, r2
 941 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 001e 1846     		mov	r0, r3
 943 0020 FFF7FEFF 		bl	UART_1_PutChar
1156:.\Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 944              		.loc 1 1156 0
 945 0024 FB89     		ldrh	r3, [r7, #14]
 946 0026 0133     		adds	r3, r3, #1
 947 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 948              	.L72:
1153:.\Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 949              		.loc 1 1153 0 discriminator 1
 950 002a FB89     		ldrh	r3, [r7, #14]
 951 002c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 38


 952 002e 1344     		add	r3, r3, r2
 953 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 954 0032 002B     		cmp	r3, #0
 955 0034 EFD1     		bne	.L73
 956              	.L70:
1157:.\Generated_Source\PSoC5/UART_1.c ****             }
1158:.\Generated_Source\PSoC5/UART_1.c ****         }
1159:.\Generated_Source\PSoC5/UART_1.c ****     }
 957              		.loc 1 1159 0
 958 0036 1037     		adds	r7, r7, #16
 959 0038 BD46     		mov	sp, r7
 960              		@ sp needed
 961 003a 80BD     		pop	{r7, pc}
 962              	.L75:
 963              		.align	2
 964              	.L74:
 965 003c 00000000 		.word	UART_1_initVar
 966              		.cfi_endproc
 967              	.LFE20:
 968              		.size	UART_1_PutString, .-UART_1_PutString
 969              		.section	.text.UART_1_PutArray,"ax",%progbits
 970              		.align	2
 971              		.global	UART_1_PutArray
 972              		.thumb
 973              		.thumb_func
 974              		.type	UART_1_PutArray, %function
 975              	UART_1_PutArray:
 976              	.LFB21:
1160:.\Generated_Source\PSoC5/UART_1.c **** 
1161:.\Generated_Source\PSoC5/UART_1.c **** 
1162:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART_1.c ****     *
1166:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART_1.c ****     *
1170:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART_1.c ****     *
1175:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART_1.c ****     *
1178:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART_1.c ****     *
1182:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART_1.c ****     *
1185:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 39


1189:.\Generated_Source\PSoC5/UART_1.c ****     *
1190:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART_1.c ****     {
 977              		.loc 1 1193 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 16
 980              		@ frame_needed = 1, uses_anonymous_args = 0
 981 0000 80B5     		push	{r7, lr}
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 7, -8
 984              		.cfi_offset 14, -4
 985 0002 84B0     		sub	sp, sp, #16
 986              		.cfi_def_cfa_offset 24
 987 0004 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 989 0006 7860     		str	r0, [r7, #4]
 990 0008 0B46     		mov	r3, r1
 991 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
 992              		.loc 1 1194 0
 993 000c 0023     		movs	r3, #0
 994 000e FB73     		strb	r3, [r7, #15]
1195:.\Generated_Source\PSoC5/UART_1.c **** 
1196:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 995              		.loc 1 1197 0
 996 0010 0A4B     		ldr	r3, .L80
 997 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 998 0014 002B     		cmp	r3, #0
 999 0016 0ED0     		beq	.L76
1198:.\Generated_Source\PSoC5/UART_1.c ****         {
1199:.\Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
 1000              		.loc 1 1199 0
 1001 0018 09E0     		b	.L78
 1002              	.L79:
1200:.\Generated_Source\PSoC5/UART_1.c ****             {
1201:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 1003              		.loc 1 1201 0
 1004 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1005 001c 7A68     		ldr	r2, [r7, #4]
 1006 001e 1344     		add	r3, r3, r2
 1007 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 0022 1846     		mov	r0, r3
 1009 0024 FFF7FEFF 		bl	UART_1_PutChar
1202:.\Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 1010              		.loc 1 1202 0
 1011 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1012 002a 0133     		adds	r3, r3, #1
 1013 002c FB73     		strb	r3, [r7, #15]
 1014              	.L78:
1199:.\Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
 1015              		.loc 1 1199 0 discriminator 1
 1016 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1017 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1018 0032 9A42     		cmp	r2, r3
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 40


 1019 0034 F1D3     		bcc	.L79
 1020              	.L76:
1203:.\Generated_Source\PSoC5/UART_1.c ****             }
1204:.\Generated_Source\PSoC5/UART_1.c ****         }
1205:.\Generated_Source\PSoC5/UART_1.c ****     }
 1021              		.loc 1 1205 0
 1022 0036 1037     		adds	r7, r7, #16
 1023 0038 BD46     		mov	sp, r7
 1024              		@ sp needed
 1025 003a 80BD     		pop	{r7, pc}
 1026              	.L81:
 1027              		.align	2
 1028              	.L80:
 1029 003c 00000000 		.word	UART_1_initVar
 1030              		.cfi_endproc
 1031              	.LFE21:
 1032              		.size	UART_1_PutArray, .-UART_1_PutArray
 1033              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 1034              		.align	2
 1035              		.global	UART_1_PutCRLF
 1036              		.thumb
 1037              		.thumb_func
 1038              		.type	UART_1_PutCRLF, %function
 1039              	UART_1_PutCRLF:
 1040              	.LFB22:
1206:.\Generated_Source\PSoC5/UART_1.c **** 
1207:.\Generated_Source\PSoC5/UART_1.c **** 
1208:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART_1.c ****     *
1212:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART_1.c ****     *
1216:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART_1.c ****     *
1219:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART_1.c ****     *
1222:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART_1.c ****     *
1226:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART_1.c ****     *
1229:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART_1.c ****     {
 1041              		.loc 1 1231 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 8
 1044              		@ frame_needed = 1, uses_anonymous_args = 0
 1045 0000 80B5     		push	{r7, lr}
 1046              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 41


 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 82B0     		sub	sp, sp, #8
 1050              		.cfi_def_cfa_offset 16
 1051 0004 00AF     		add	r7, sp, #0
 1052              		.cfi_def_cfa_register 7
 1053 0006 0346     		mov	r3, r0
 1054 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1055              		.loc 1 1233 0
 1056 000a 084B     		ldr	r3, .L84
 1057 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 000e 002B     		cmp	r3, #0
 1059 0010 09D0     		beq	.L82
1234:.\Generated_Source\PSoC5/UART_1.c ****         {
1235:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 1060              		.loc 1 1235 0
 1061 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1062 0014 1846     		mov	r0, r3
 1063 0016 FFF7FEFF 		bl	UART_1_PutChar
1236:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 1064              		.loc 1 1236 0
 1065 001a 0D20     		movs	r0, #13
 1066 001c FFF7FEFF 		bl	UART_1_PutChar
1237:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 1067              		.loc 1 1237 0
 1068 0020 0A20     		movs	r0, #10
 1069 0022 FFF7FEFF 		bl	UART_1_PutChar
 1070              	.L82:
1238:.\Generated_Source\PSoC5/UART_1.c ****         }
1239:.\Generated_Source\PSoC5/UART_1.c ****     }
 1071              		.loc 1 1239 0
 1072 0026 0837     		adds	r7, r7, #8
 1073 0028 BD46     		mov	sp, r7
 1074              		@ sp needed
 1075 002a 80BD     		pop	{r7, pc}
 1076              	.L85:
 1077              		.align	2
 1078              	.L84:
 1079 002c 00000000 		.word	UART_1_initVar
 1080              		.cfi_endproc
 1081              	.LFE22:
 1082              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 1083              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 1084              		.align	2
 1085              		.global	UART_1_GetTxBufferSize
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	UART_1_GetTxBufferSize, %function
 1089              	UART_1_GetTxBufferSize:
 1090              	.LFB23:
1240:.\Generated_Source\PSoC5/UART_1.c **** 
1241:.\Generated_Source\PSoC5/UART_1.c **** 
1242:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 42


1245:.\Generated_Source\PSoC5/UART_1.c ****     *
1246:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not take to account.
1254:.\Generated_Source\PSoC5/UART_1.c ****     *
1255:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART_1.c ****     *
1258:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART_1.c ****     *
1262:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART_1.c ****     *
1266:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART_1.c ****     *
1269:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART_1.c ****     *
1272:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART_1.c ****                                                             
1275:.\Generated_Source\PSoC5/UART_1.c ****     {
 1091              		.loc 1 1275 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 8
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
 1096 0000 80B4     		push	{r7}
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 83B0     		sub	sp, sp, #12
 1100              		.cfi_def_cfa_offset 16
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART_1.c **** 
1278:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART_1.c **** 
1280:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART_1.c **** 
1283:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART_1.c ****         {
1285:.\Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART_1.c ****         }
1287:.\Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART_1.c ****         {
1289:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 43


1290:.\Generated_Source\PSoC5/UART_1.c ****         }
1291:.\Generated_Source\PSoC5/UART_1.c ****         else
1292:.\Generated_Source\PSoC5/UART_1.c ****         {
1293:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART_1.c ****         }
1296:.\Generated_Source\PSoC5/UART_1.c **** 
1297:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART_1.c **** 
1299:.\Generated_Source\PSoC5/UART_1.c ****     #else
1300:.\Generated_Source\PSoC5/UART_1.c **** 
1301:.\Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 1103              		.loc 1 1301 0
 1104 0006 0E4B     		ldr	r3, .L91
 1105 0008 1B78     		ldrb	r3, [r3]
 1106 000a FB71     		strb	r3, [r7, #7]
1302:.\Generated_Source\PSoC5/UART_1.c **** 
1303:.\Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 1107              		.loc 1 1304 0
 1108 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1109 000e 03F02003 		and	r3, r3, #32
 1110 0012 002B     		cmp	r3, #0
 1111 0014 02D0     		beq	.L87
1305:.\Generated_Source\PSoC5/UART_1.c ****         {
1306:.\Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
 1112              		.loc 1 1306 0
 1113 0016 0423     		movs	r3, #4
 1114 0018 FB71     		strb	r3, [r7, #7]
 1115 001a 09E0     		b	.L88
 1116              	.L87:
1307:.\Generated_Source\PSoC5/UART_1.c ****         }
1308:.\Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 1117              		.loc 1 1308 0
 1118 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1119 001e 03F00203 		and	r3, r3, #2
 1120 0022 002B     		cmp	r3, #0
 1121 0024 02D0     		beq	.L89
1309:.\Generated_Source\PSoC5/UART_1.c ****         {
1310:.\Generated_Source\PSoC5/UART_1.c ****             size = 0u;
 1122              		.loc 1 1310 0
 1123 0026 0023     		movs	r3, #0
 1124 0028 FB71     		strb	r3, [r7, #7]
 1125 002a 01E0     		b	.L88
 1126              	.L89:
1311:.\Generated_Source\PSoC5/UART_1.c ****         }
1312:.\Generated_Source\PSoC5/UART_1.c ****         else
1313:.\Generated_Source\PSoC5/UART_1.c ****         {
1314:.\Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART_1.c ****             size = 1u;
 1127              		.loc 1 1315 0
 1128 002c 0123     		movs	r3, #1
 1129 002e FB71     		strb	r3, [r7, #7]
 1130              	.L88:
1316:.\Generated_Source\PSoC5/UART_1.c ****         }
1317:.\Generated_Source\PSoC5/UART_1.c **** 
1318:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 44


1319:.\Generated_Source\PSoC5/UART_1.c **** 
1320:.\Generated_Source\PSoC5/UART_1.c ****     return(size);
 1131              		.loc 1 1320 0
 1132 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/UART_1.c ****     }
 1133              		.loc 1 1321 0
 1134 0032 1846     		mov	r0, r3
 1135 0034 0C37     		adds	r7, r7, #12
 1136 0036 BD46     		mov	sp, r7
 1137              		@ sp needed
 1138 0038 5DF8047B 		ldr	r7, [sp], #4
 1139 003c 7047     		bx	lr
 1140              	.L92:
 1141 003e 00BF     		.align	2
 1142              	.L91:
 1143 0040 62640040 		.word	1073767522
 1144              		.cfi_endproc
 1145              	.LFE23:
 1146              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 1147              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 1148              		.align	2
 1149              		.global	UART_1_ClearTxBuffer
 1150              		.thumb
 1151              		.thumb_func
 1152              		.type	UART_1_ClearTxBuffer, %function
 1153              	UART_1_ClearTxBuffer:
 1154              	.LFB24:
1322:.\Generated_Source\PSoC5/UART_1.c **** 
1323:.\Generated_Source\PSoC5/UART_1.c **** 
1324:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART_1.c ****     *
1328:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART_1.c ****     *
1331:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART_1.c ****     *
1334:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART_1.c ****     *
1337:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART_1.c ****     *
1341:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART_1.c ****     *
1344:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART_1.c ****     *
1349:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 45


1352:.\Generated_Source\PSoC5/UART_1.c ****     *
1353:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART_1.c ****     {
 1155              		.loc 1 1355 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 8
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159 0000 80B5     		push	{r7, lr}
 1160              		.cfi_def_cfa_offset 8
 1161              		.cfi_offset 7, -8
 1162              		.cfi_offset 14, -4
 1163 0002 82B0     		sub	sp, sp, #8
 1164              		.cfi_def_cfa_offset 16
 1165 0004 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART_1.c **** 
1358:.\Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1167              		.loc 1 1358 0
 1168 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1169 000a 0346     		mov	r3, r0
 1170 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 1171              		.loc 1 1360 0
 1172 000e 0B4B     		ldr	r3, .L94
 1173 0010 0A4A     		ldr	r2, .L94
 1174 0012 1278     		ldrb	r2, [r2]
 1175 0014 D2B2     		uxtb	r2, r2
 1176 0016 42F00202 		orr	r2, r2, #2
 1177 001a D2B2     		uxtb	r2, r2
 1178 001c 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 1179              		.loc 1 1361 0
 1180 001e 074B     		ldr	r3, .L94
 1181 0020 064A     		ldr	r2, .L94
 1182 0022 1278     		ldrb	r2, [r2]
 1183 0024 D2B2     		uxtb	r2, r2
 1184 0026 22F00202 		bic	r2, r2, #2
 1185 002a D2B2     		uxtb	r2, r2
 1186 002c 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 1187              		.loc 1 1362 0
 1188 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1189 0030 1846     		mov	r0, r3
 1190 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/UART_1.c **** 
1364:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART_1.c **** 
1366:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART_1.c **** 
1369:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART_1.c **** 
1372:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 46


1373:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART_1.c **** 
1375:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART_1.c ****     }
 1191              		.loc 1 1376 0
 1192 0036 0837     		adds	r7, r7, #8
 1193 0038 BD46     		mov	sp, r7
 1194              		@ sp needed
 1195 003a 80BD     		pop	{r7, pc}
 1196              	.L95:
 1197              		.align	2
 1198              	.L94:
 1199 003c 92640040 		.word	1073767570
 1200              		.cfi_endproc
 1201              	.LFE24:
 1202              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1203              		.section	.text.UART_1_SendBreak,"ax",%progbits
 1204              		.align	2
 1205              		.global	UART_1_SendBreak
 1206              		.thumb
 1207              		.thumb_func
 1208              		.type	UART_1_SendBreak, %function
 1209              	UART_1_SendBreak:
 1210              	.LFB25:
1377:.\Generated_Source\PSoC5/UART_1.c **** 
1378:.\Generated_Source\PSoC5/UART_1.c **** 
1379:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART_1.c ****     *
1383:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART_1.c ****     *
1386:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART_1.c ****     *
1398:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART_1.c ****     *
1401:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART_1.c ****     *
1406:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART_1.c ****     *
1409:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 47


1410:.\Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART_1.c ****     *
1432:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART_1.c ****     *
1439:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART_1.c ****     {
 1211              		.loc 1 1441 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 16
 1214              		@ frame_needed = 1, uses_anonymous_args = 0
 1215 0000 80B5     		push	{r7, lr}
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 84B0     		sub	sp, sp, #16
 1220              		.cfi_def_cfa_offset 24
 1221 0004 00AF     		add	r7, sp, #0
 1222              		.cfi_def_cfa_register 7
 1223 0006 0346     		mov	r3, r0
 1224 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/UART_1.c **** 
1443:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1225              		.loc 1 1444 0
 1226 000a 214B     		ldr	r3, .L104
 1227 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1228 000e 002B     		cmp	r3, #0
 1229 0010 3BD0     		beq	.L96
 1230              	.LBB2:
1445:.\Generated_Source\PSoC5/UART_1.c ****         {
1446:.\Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 48


1447:.\Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART_1.c **** 
1450:.\Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART_1.c **** 
1452:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 1231              		.loc 1 1452 0
 1232 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1233 0014 002B     		cmp	r3, #0
 1234 0016 02D0     		beq	.L98
 1235              		.loc 1 1452 0 is_stmt 0 discriminator 1
 1236 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1237 001a 032B     		cmp	r3, #3
 1238 001c 13D1     		bne	.L99
 1239              	.L98:
1453:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART_1.c ****             {
1455:.\Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
 1240              		.loc 1 1456 0 is_stmt 1
 1241 001e FFF7FEFF 		bl	UART_1_ReadControlRegister
 1242 0022 0346     		mov	r3, r0
 1243 0024 43F00203 		orr	r3, r3, #2
 1244 0028 DBB2     		uxtb	r3, r3
 1245 002a 1846     		mov	r0, r3
 1246 002c FFF7FEFF 		bl	UART_1_WriteControlRegister
1457:.\Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 1247              		.loc 1 1459 0
 1248 0030 184B     		ldr	r3, .L104+4
 1249 0032 0022     		movs	r2, #0
 1250 0034 1A70     		strb	r2, [r3]
 1251              	.L100:
1460:.\Generated_Source\PSoC5/UART_1.c **** 
1461:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART_1.c ****                 {
1463:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1252              		.loc 1 1463 0 discriminator 1
 1253 0036 184B     		ldr	r3, .L104+8
 1254 0038 1B78     		ldrb	r3, [r3]
 1255 003a FB73     		strb	r3, [r7, #15]
1464:.\Generated_Source\PSoC5/UART_1.c ****                 }
1465:.\Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1256              		.loc 1 1465 0 discriminator 1
 1257 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1258 003e 03F00203 		and	r3, r3, #2
 1259 0042 002B     		cmp	r3, #0
 1260 0044 F7D1     		bne	.L100
 1261              	.L99:
1466:.\Generated_Source\PSoC5/UART_1.c ****             }
1467:.\Generated_Source\PSoC5/UART_1.c **** 
1468:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1262              		.loc 1 1468 0
 1263 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1264 0048 012B     		cmp	r3, #1
 1265 004a 02D0     		beq	.L101
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 49


 1266              		.loc 1 1468 0 is_stmt 0 discriminator 1
 1267 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1268 004e 032B     		cmp	r3, #3
 1269 0050 09D1     		bne	.L102
 1270              	.L101:
1469:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART_1.c ****             {
1471:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART_1.c ****                 {
1473:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1271              		.loc 1 1473 0 is_stmt 1 discriminator 1
 1272 0052 114B     		ldr	r3, .L104+8
 1273 0054 1B78     		ldrb	r3, [r3]
 1274 0056 FB73     		strb	r3, [r7, #15]
1474:.\Generated_Source\PSoC5/UART_1.c ****                 }
1475:.\Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 1275              		.loc 1 1475 0 discriminator 1
 1276 0058 FB7B     		ldrb	r3, [r7, #15]
 1277 005a DB43     		mvns	r3, r3
 1278 005c DBB2     		uxtb	r3, r3
 1279 005e 03F00103 		and	r3, r3, #1
 1280 0062 002B     		cmp	r3, #0
 1281 0064 F5D1     		bne	.L101
 1282              	.L102:
1476:.\Generated_Source\PSoC5/UART_1.c ****             }
1477:.\Generated_Source\PSoC5/UART_1.c **** 
1478:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1283              		.loc 1 1478 0
 1284 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1285 0068 012B     		cmp	r3, #1
 1286 006a 05D0     		beq	.L103
 1287              		.loc 1 1478 0 is_stmt 0 discriminator 1
 1288 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1289 006e 022B     		cmp	r3, #2
 1290 0070 02D0     		beq	.L103
1479:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 1291              		.loc 1 1479 0 is_stmt 1
 1292 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1293 0074 032B     		cmp	r3, #3
 1294 0076 08D1     		bne	.L96
 1295              	.L103:
1480:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART_1.c ****             {
1482:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
 1296              		.loc 1 1482 0
 1297 0078 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1298 007c 0346     		mov	r3, r0
 1299 007e 23F00203 		bic	r3, r3, #2
 1300 0082 DBB2     		uxtb	r3, r3
 1301 0084 1846     		mov	r0, r3
 1302 0086 FFF7FEFF 		bl	UART_1_WriteControlRegister
 1303              	.L96:
 1304              	.LBE2:
1483:.\Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART_1.c ****             }
1485:.\Generated_Source\PSoC5/UART_1.c **** 
1486:.\Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 50


1487:.\Generated_Source\PSoC5/UART_1.c **** 
1488:.\Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART_1.c **** 
1490:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1491:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART_1.c ****             {
1493:.\Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART_1.c **** 
1500:.\Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
1502:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
1503:.\Generated_Source\PSoC5/UART_1.c ****                 #else
1504:.\Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART_1.c **** 
1508:.\Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1510:.\Generated_Source\PSoC5/UART_1.c **** 
1511:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART_1.c ****                 {
1513:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1514:.\Generated_Source\PSoC5/UART_1.c ****                 }
1515:.\Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1516:.\Generated_Source\PSoC5/UART_1.c ****             }
1517:.\Generated_Source\PSoC5/UART_1.c **** 
1518:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1519:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART_1.c ****             {
1521:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART_1.c ****                 {
1523:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1524:.\Generated_Source\PSoC5/UART_1.c ****                 }
1525:.\Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1526:.\Generated_Source\PSoC5/UART_1.c ****             }
1527:.\Generated_Source\PSoC5/UART_1.c **** 
1528:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1530:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART_1.c ****             {
1532:.\Generated_Source\PSoC5/UART_1.c **** 
1533:.\Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
1535:.\Generated_Source\PSoC5/UART_1.c ****             #else
1536:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART_1.c **** 
1539:.\Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 51


1544:.\Generated_Source\PSoC5/UART_1.c ****             }
1545:.\Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART_1.c ****         }
1547:.\Generated_Source\PSoC5/UART_1.c ****     }
 1305              		.loc 1 1547 0
 1306 008a 1037     		adds	r7, r7, #16
 1307 008c BD46     		mov	sp, r7
 1308              		@ sp needed
 1309 008e 80BD     		pop	{r7, pc}
 1310              	.L105:
 1311              		.align	2
 1312              	.L104:
 1313 0090 00000000 		.word	UART_1_initVar
 1314 0094 52640040 		.word	1073767506
 1315 0098 62640040 		.word	1073767522
 1316              		.cfi_endproc
 1317              	.LFE25:
 1318              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1319              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1320              		.align	2
 1321              		.global	UART_1_SetTxAddressMode
 1322              		.thumb
 1323              		.thumb_func
 1324              		.type	UART_1_SetTxAddressMode, %function
 1325              	UART_1_SetTxAddressMode:
 1326              	.LFB26:
1548:.\Generated_Source\PSoC5/UART_1.c **** 
1549:.\Generated_Source\PSoC5/UART_1.c **** 
1550:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART_1.c ****     *
1554:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART_1.c ****     *
1557:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART_1.c ****     *
1564:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART_1.c ****     *
1567:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART_1.c ****     *
1571:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART_1.c ****     {
 1327              		.loc 1 1573 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 8
 1330              		@ frame_needed = 1, uses_anonymous_args = 0
 1331 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 52


 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 7, -8
 1334              		.cfi_offset 14, -4
 1335 0002 82B0     		sub	sp, sp, #8
 1336              		.cfi_def_cfa_offset 16
 1337 0004 00AF     		add	r7, sp, #0
 1338              		.cfi_def_cfa_register 7
 1339 0006 0346     		mov	r3, r0
 1340 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/UART_1.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/UART_1.c ****         if(addressMode != 0u)
 1341              		.loc 1 1575 0
 1342 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1343 000c 002B     		cmp	r3, #0
 1344 000e 09D0     		beq	.L107
1576:.\Generated_Source\PSoC5/UART_1.c ****         {
1577:.\Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
 1345              		.loc 1 1578 0
 1346 0010 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1347 0014 0346     		mov	r3, r0
 1348 0016 43F00403 		orr	r3, r3, #4
 1349 001a DBB2     		uxtb	r3, r3
 1350 001c 1846     		mov	r0, r3
 1351 001e FFF7FEFF 		bl	UART_1_WriteControlRegister
 1352 0022 08E0     		b	.L106
 1353              	.L107:
1579:.\Generated_Source\PSoC5/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/UART_1.c ****         }
1582:.\Generated_Source\PSoC5/UART_1.c ****         else
1583:.\Generated_Source\PSoC5/UART_1.c ****         {
1584:.\Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
 1354              		.loc 1 1585 0
 1355 0024 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1356 0028 0346     		mov	r3, r0
 1357 002a 23F00403 		bic	r3, r3, #4
 1358 002e DBB2     		uxtb	r3, r3
 1359 0030 1846     		mov	r0, r3
 1360 0032 FFF7FEFF 		bl	UART_1_WriteControlRegister
 1361              	.L106:
1586:.\Generated_Source\PSoC5/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/UART_1.c ****         }
1589:.\Generated_Source\PSoC5/UART_1.c ****     }
 1362              		.loc 1 1589 0
 1363 0036 0837     		adds	r7, r7, #8
 1364 0038 BD46     		mov	sp, r7
 1365              		@ sp needed
 1366 003a 80BD     		pop	{r7, pc}
 1367              		.cfi_endproc
 1368              	.LFE26:
 1369              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1370              		.section	.text.UART_1_LoadRxConfig,"ax",%progbits
 1371              		.align	2
 1372              		.global	UART_1_LoadRxConfig
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 53


 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	UART_1_LoadRxConfig, %function
 1376              	UART_1_LoadRxConfig:
 1377              	.LFB27:
1590:.\Generated_Source\PSoC5/UART_1.c **** 
1591:.\Generated_Source\PSoC5/UART_1.c **** #endif  /* EndUART_1_TX_ENABLED */
1592:.\Generated_Source\PSoC5/UART_1.c **** 
1593:.\Generated_Source\PSoC5/UART_1.c **** #if(UART_1_HD_ENABLED)
1594:.\Generated_Source\PSoC5/UART_1.c **** 
1595:.\Generated_Source\PSoC5/UART_1.c **** 
1596:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1597:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_LoadRxConfig
1598:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1599:.\Generated_Source\PSoC5/UART_1.c ****     *
1600:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1601:.\Generated_Source\PSoC5/UART_1.c ****     *  Loads the receiver configuration in half duplex mode. After calling this
1602:.\Generated_Source\PSoC5/UART_1.c ****     *  function, the UART is ready to receive data.
1603:.\Generated_Source\PSoC5/UART_1.c ****     *
1604:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1605:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1606:.\Generated_Source\PSoC5/UART_1.c ****     *
1607:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1608:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1609:.\Generated_Source\PSoC5/UART_1.c ****     *
1610:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1611:.\Generated_Source\PSoC5/UART_1.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1612:.\Generated_Source\PSoC5/UART_1.c ****     *  transaction is complete and it is safe to unload the transmitter
1613:.\Generated_Source\PSoC5/UART_1.c ****     *  configuration.
1614:.\Generated_Source\PSoC5/UART_1.c ****     *
1615:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1616:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_LoadRxConfig(void) 
1617:.\Generated_Source\PSoC5/UART_1.c ****     {
 1378              		.loc 1 1617 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382 0000 80B5     		push	{r7, lr}
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 7, -8
 1385              		.cfi_offset 14, -4
 1386 0002 00AF     		add	r7, sp, #0
 1387              		.cfi_def_cfa_register 7
1618:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
 1388              		.loc 1 1618 0
 1389 0004 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1390 0008 0346     		mov	r3, r0
 1391 000a 23F00103 		bic	r3, r3, #1
 1392 000e DBB2     		uxtb	r3, r3
 1393 0010 1846     		mov	r0, r3
 1394 0012 FFF7FEFF 		bl	UART_1_WriteControlRegister
1619:.\Generated_Source\PSoC5/UART_1.c ****                                                 (uint8)~UART_1_CTRL_HD_SEND);
1620:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_HD_RXBITCTR_INIT;
 1395              		.loc 1 1620 0
 1396 0016 024B     		ldr	r3, .L110
 1397 0018 7222     		movs	r2, #114
 1398 001a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 54


1621:.\Generated_Source\PSoC5/UART_1.c **** 
1622:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
1623:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable RX interrupt after set RX configuration */
1624:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_SetRxInterruptMode(UART_1_INIT_RX_INTERRUPTS_MASK);
1625:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
1626:.\Generated_Source\PSoC5/UART_1.c ****     }
 1399              		.loc 1 1626 0
 1400 001c 80BD     		pop	{r7, pc}
 1401              	.L111:
 1402 001e 00BF     		.align	2
 1403              	.L110:
 1404 0020 85640040 		.word	1073767557
 1405              		.cfi_endproc
 1406              	.LFE27:
 1407              		.size	UART_1_LoadRxConfig, .-UART_1_LoadRxConfig
 1408              		.section	.text.UART_1_LoadTxConfig,"ax",%progbits
 1409              		.align	2
 1410              		.global	UART_1_LoadTxConfig
 1411              		.thumb
 1412              		.thumb_func
 1413              		.type	UART_1_LoadTxConfig, %function
 1414              	UART_1_LoadTxConfig:
 1415              	.LFB28:
1627:.\Generated_Source\PSoC5/UART_1.c **** 
1628:.\Generated_Source\PSoC5/UART_1.c **** 
1629:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1630:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_LoadTxConfig
1631:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1632:.\Generated_Source\PSoC5/UART_1.c ****     *
1633:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1634:.\Generated_Source\PSoC5/UART_1.c ****     *  Loads the transmitter configuration in half duplex mode. After calling this
1635:.\Generated_Source\PSoC5/UART_1.c ****     *  function, the UART is ready to transmit data.
1636:.\Generated_Source\PSoC5/UART_1.c ****     *
1637:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1638:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1639:.\Generated_Source\PSoC5/UART_1.c ****     *
1640:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1641:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1642:.\Generated_Source\PSoC5/UART_1.c ****     *
1643:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1644:.\Generated_Source\PSoC5/UART_1.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1645:.\Generated_Source\PSoC5/UART_1.c ****     *  transaction is complete and it is safe to unload the receiver configuration.
1646:.\Generated_Source\PSoC5/UART_1.c ****     *
1647:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1648:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_LoadTxConfig(void) 
1649:.\Generated_Source\PSoC5/UART_1.c ****     {
 1416              		.loc 1 1649 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420 0000 80B5     		push	{r7, lr}
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 00AF     		add	r7, sp, #0
 1425              		.cfi_def_cfa_register 7
1650:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 55


1651:.\Generated_Source\PSoC5/UART_1.c ****         /* Disable RX interrupts before set TX configuration */
1652:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_SetRxInterruptMode(0u);
1653:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
1654:.\Generated_Source\PSoC5/UART_1.c **** 
1655:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister(UART_1_ReadControlRegister() | UART_1_CTRL_HD_SEND);
 1426              		.loc 1 1655 0
 1427 0004 FFF7FEFF 		bl	UART_1_ReadControlRegister
 1428 0008 0346     		mov	r3, r0
 1429 000a 43F00103 		orr	r3, r3, #1
 1430 000e DBB2     		uxtb	r3, r3
 1431 0010 1846     		mov	r0, r3
 1432 0012 FFF7FEFF 		bl	UART_1_WriteControlRegister
1656:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_HD_TXBITCTR_INIT;
 1433              		.loc 1 1656 0
 1434 0016 024B     		ldr	r3, .L113
 1435 0018 6F22     		movs	r2, #111
 1436 001a 1A70     		strb	r2, [r3]
1657:.\Generated_Source\PSoC5/UART_1.c ****     }
 1437              		.loc 1 1657 0
 1438 001c 80BD     		pop	{r7, pc}
 1439              	.L114:
 1440 001e 00BF     		.align	2
 1441              	.L113:
 1442 0020 85640040 		.word	1073767557
 1443              		.cfi_endproc
 1444              	.LFE28:
 1445              		.size	UART_1_LoadTxConfig, .-UART_1_LoadTxConfig
 1446              		.text
 1447              	.Letext0:
 1448              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1449              		.section	.debug_info,"",%progbits
 1450              	.Ldebug_info0:
 1451 0000 0E050000 		.4byte	0x50e
 1452 0004 0400     		.2byte	0x4
 1453 0006 00000000 		.4byte	.Ldebug_abbrev0
 1454 000a 04       		.byte	0x4
 1455 000b 01       		.uleb128 0x1
 1456 000c 53020000 		.4byte	.LASF61
 1457 0010 01       		.byte	0x1
 1458 0011 E6000000 		.4byte	.LASF62
 1459 0015 0C040000 		.4byte	.LASF63
 1460 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1461 001d 00000000 		.4byte	0
 1462 0021 00000000 		.4byte	.Ldebug_line0
 1463 0025 02       		.uleb128 0x2
 1464 0026 01       		.byte	0x1
 1465 0027 06       		.byte	0x6
 1466 0028 9C000000 		.4byte	.LASF0
 1467 002c 02       		.uleb128 0x2
 1468 002d 01       		.byte	0x1
 1469 002e 08       		.byte	0x8
 1470 002f 3B030000 		.4byte	.LASF1
 1471 0033 02       		.uleb128 0x2
 1472 0034 02       		.byte	0x2
 1473 0035 05       		.byte	0x5
 1474 0036 49030000 		.4byte	.LASF2
 1475 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 56


 1476 003b 02       		.byte	0x2
 1477 003c 07       		.byte	0x7
 1478 003d 7E010000 		.4byte	.LASF3
 1479 0041 02       		.uleb128 0x2
 1480 0042 04       		.byte	0x4
 1481 0043 05       		.byte	0x5
 1482 0044 B7000000 		.4byte	.LASF4
 1483 0048 02       		.uleb128 0x2
 1484 0049 04       		.byte	0x4
 1485 004a 07       		.byte	0x7
 1486 004b 67010000 		.4byte	.LASF5
 1487 004f 02       		.uleb128 0x2
 1488 0050 08       		.byte	0x8
 1489 0051 05       		.byte	0x5
 1490 0052 8E000000 		.4byte	.LASF6
 1491 0056 02       		.uleb128 0x2
 1492 0057 08       		.byte	0x8
 1493 0058 07       		.byte	0x7
 1494 0059 60000000 		.4byte	.LASF7
 1495 005d 03       		.uleb128 0x3
 1496 005e 04       		.byte	0x4
 1497 005f 05       		.byte	0x5
 1498 0060 696E7400 		.ascii	"int\000"
 1499 0064 02       		.uleb128 0x2
 1500 0065 04       		.byte	0x4
 1501 0066 07       		.byte	0x7
 1502 0067 46010000 		.4byte	.LASF8
 1503 006b 04       		.uleb128 0x4
 1504 006c CD000000 		.4byte	.LASF9
 1505 0070 02       		.byte	0x2
 1506 0071 A1       		.byte	0xa1
 1507 0072 2C000000 		.4byte	0x2c
 1508 0076 04       		.uleb128 0x4
 1509 0077 00000000 		.4byte	.LASF10
 1510 007b 02       		.byte	0x2
 1511 007c A2       		.byte	0xa2
 1512 007d 3A000000 		.4byte	0x3a
 1513 0081 02       		.uleb128 0x2
 1514 0082 04       		.byte	0x4
 1515 0083 04       		.byte	0x4
 1516 0084 F2020000 		.4byte	.LASF11
 1517 0088 02       		.uleb128 0x2
 1518 0089 08       		.byte	0x8
 1519 008a 04       		.byte	0x4
 1520 008b D3000000 		.4byte	.LASF12
 1521 008f 04       		.uleb128 0x4
 1522 0090 BF030000 		.4byte	.LASF13
 1523 0094 02       		.byte	0x2
 1524 0095 B2       		.byte	0xb2
 1525 0096 9A000000 		.4byte	0x9a
 1526 009a 02       		.uleb128 0x2
 1527 009b 01       		.byte	0x1
 1528 009c 08       		.byte	0x8
 1529 009d BA030000 		.4byte	.LASF14
 1530 00a1 05       		.uleb128 0x5
 1531 00a2 36030000 		.4byte	.LASF15
 1532 00a6 02       		.byte	0x2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 57


 1533 00a7 4B01     		.2byte	0x14b
 1534 00a9 AD000000 		.4byte	0xad
 1535 00ad 06       		.uleb128 0x6
 1536 00ae 6B000000 		.4byte	0x6b
 1537 00b2 02       		.uleb128 0x2
 1538 00b3 04       		.byte	0x4
 1539 00b4 07       		.byte	0x7
 1540 00b5 18020000 		.4byte	.LASF16
 1541 00b9 07       		.uleb128 0x7
 1542 00ba C0000000 		.4byte	.LASF17
 1543 00be 01       		.byte	0x1
 1544 00bf 4C       		.byte	0x4c
 1545 00c0 00000000 		.4byte	.LFB0
 1546 00c4 20000000 		.4byte	.LFE0-.LFB0
 1547 00c8 01       		.uleb128 0x1
 1548 00c9 9C       		.byte	0x9c
 1549 00ca 08       		.uleb128 0x8
 1550 00cb C5030000 		.4byte	.LASF18
 1551 00cf 01       		.byte	0x1
 1552 00d0 6A       		.byte	0x6a
 1553 00d1 00000000 		.4byte	.LFB1
 1554 00d5 20000000 		.4byte	.LFE1-.LFB1
 1555 00d9 01       		.uleb128 0x1
 1556 00da 9C       		.byte	0x9c
 1557 00db 09       		.uleb128 0x9
 1558 00dc 91010000 		.4byte	.LASF19
 1559 00e0 01       		.byte	0x1
 1560 00e1 B7       		.byte	0xb7
 1561 00e2 00000000 		.4byte	.LFB2
 1562 00e6 48000000 		.4byte	.LFE2-.LFB2
 1563 00ea 01       		.uleb128 0x1
 1564 00eb 9C       		.byte	0x9c
 1565 00ec FF000000 		.4byte	0xff
 1566 00f0 0A       		.uleb128 0xa
 1567 00f1 D1030000 		.4byte	.LASF21
 1568 00f5 01       		.byte	0x1
 1569 00f6 B9       		.byte	0xb9
 1570 00f7 6B000000 		.4byte	0x6b
 1571 00fb 02       		.uleb128 0x2
 1572 00fc 91       		.byte	0x91
 1573 00fd 77       		.sleb128 -9
 1574 00fe 00       		.byte	0
 1575 00ff 09       		.uleb128 0x9
 1576 0100 E2010000 		.4byte	.LASF20
 1577 0104 01       		.byte	0x1
 1578 0105 F0       		.byte	0xf0
 1579 0106 00000000 		.4byte	.LFB3
 1580 010a 48000000 		.4byte	.LFE3-.LFB3
 1581 010e 01       		.uleb128 0x1
 1582 010f 9C       		.byte	0x9c
 1583 0110 23010000 		.4byte	0x123
 1584 0114 0A       		.uleb128 0xa
 1585 0115 D1030000 		.4byte	.LASF21
 1586 0119 01       		.byte	0x1
 1587 011a F2       		.byte	0xf2
 1588 011b 6B000000 		.4byte	0x6b
 1589 011f 02       		.uleb128 0x2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 58


 1590 0120 91       		.byte	0x91
 1591 0121 77       		.sleb128 -9
 1592 0122 00       		.byte	0
 1593 0123 0B       		.uleb128 0xb
 1594 0124 C7010000 		.4byte	.LASF32
 1595 0128 01       		.byte	0x1
 1596 0129 2701     		.2byte	0x127
 1597 012b 6B000000 		.4byte	0x6b
 1598 012f 00000000 		.4byte	.LFB4
 1599 0133 18000000 		.4byte	.LFE4-.LFB4
 1600 0137 01       		.uleb128 0x1
 1601 0138 9C       		.byte	0x9c
 1602 0139 0C       		.uleb128 0xc
 1603 013a 53030000 		.4byte	.LASF22
 1604 013e 01       		.byte	0x1
 1605 013f 3F01     		.2byte	0x13f
 1606 0141 00000000 		.4byte	.LFB5
 1607 0145 20000000 		.4byte	.LFE5-.LFB5
 1608 0149 01       		.uleb128 0x1
 1609 014a 9C       		.byte	0x9c
 1610 014b 5F010000 		.4byte	0x15f
 1611 014f 0D       		.uleb128 0xd
 1612 0150 08010000 		.4byte	.LASF24
 1613 0154 01       		.byte	0x1
 1614 0155 3F01     		.2byte	0x13f
 1615 0157 6B000000 		.4byte	0x6b
 1616 015b 02       		.uleb128 0x2
 1617 015c 91       		.byte	0x91
 1618 015d 77       		.sleb128 -9
 1619 015e 00       		.byte	0
 1620 015f 0C       		.uleb128 0xc
 1621 0160 10010000 		.4byte	.LASF23
 1622 0164 01       		.byte	0x1
 1623 0165 6701     		.2byte	0x167
 1624 0167 00000000 		.4byte	.LFB6
 1625 016b 20000000 		.4byte	.LFE6-.LFB6
 1626 016f 01       		.uleb128 0x1
 1627 0170 9C       		.byte	0x9c
 1628 0171 85010000 		.4byte	0x185
 1629 0175 0D       		.uleb128 0xd
 1630 0176 C0010000 		.4byte	.LASF25
 1631 017a 01       		.byte	0x1
 1632 017b 6701     		.2byte	0x167
 1633 017d 6B000000 		.4byte	0x6b
 1634 0181 02       		.uleb128 0x2
 1635 0182 91       		.byte	0x91
 1636 0183 77       		.sleb128 -9
 1637 0184 00       		.byte	0
 1638 0185 0E       		.uleb128 0xe
 1639 0186 4E000000 		.4byte	.LASF27
 1640 018a 01       		.byte	0x1
 1641 018b 8801     		.2byte	0x188
 1642 018d 6B000000 		.4byte	0x6b
 1643 0191 00000000 		.4byte	.LFB7
 1644 0195 20000000 		.4byte	.LFE7-.LFB7
 1645 0199 01       		.uleb128 0x1
 1646 019a 9C       		.byte	0x9c
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 59


 1647 019b AF010000 		.4byte	0x1af
 1648 019f 0F       		.uleb128 0xf
 1649 01a0 B3030000 		.4byte	.LASF26
 1650 01a4 01       		.byte	0x1
 1651 01a5 8A01     		.2byte	0x18a
 1652 01a7 6B000000 		.4byte	0x6b
 1653 01ab 02       		.uleb128 0x2
 1654 01ac 91       		.byte	0x91
 1655 01ad 77       		.sleb128 -9
 1656 01ae 00       		.byte	0
 1657 01af 0E       		.uleb128 0xe
 1658 01b0 E9030000 		.4byte	.LASF28
 1659 01b4 01       		.byte	0x1
 1660 01b5 E501     		.2byte	0x1e5
 1661 01b7 6B000000 		.4byte	0x6b
 1662 01bb 00000000 		.4byte	.LFB8
 1663 01bf 24000000 		.4byte	.LFE8-.LFB8
 1664 01c3 01       		.uleb128 0x1
 1665 01c4 9C       		.byte	0x9c
 1666 01c5 D9010000 		.4byte	0x1d9
 1667 01c9 0F       		.uleb128 0xf
 1668 01ca E2030000 		.4byte	.LASF29
 1669 01ce 01       		.byte	0x1
 1670 01cf E701     		.2byte	0x1e7
 1671 01d1 6B000000 		.4byte	0x6b
 1672 01d5 02       		.uleb128 0x2
 1673 01d6 91       		.byte	0x91
 1674 01d7 77       		.sleb128 -9
 1675 01d8 00       		.byte	0
 1676 01d9 0E       		.uleb128 0xe
 1677 01da FD030000 		.4byte	.LASF30
 1678 01de 01       		.byte	0x1
 1679 01df 1402     		.2byte	0x214
 1680 01e1 6B000000 		.4byte	0x6b
 1681 01e5 00000000 		.4byte	.LFB9
 1682 01e9 44000000 		.4byte	.LFE9-.LFB9
 1683 01ed 01       		.uleb128 0x1
 1684 01ee 9C       		.byte	0x9c
 1685 01ef 12020000 		.4byte	0x212
 1686 01f3 0F       		.uleb128 0xf
 1687 01f4 B3030000 		.4byte	.LASF26
 1688 01f8 01       		.byte	0x1
 1689 01f9 1602     		.2byte	0x216
 1690 01fb 6B000000 		.4byte	0x6b
 1691 01ff 02       		.uleb128 0x2
 1692 0200 91       		.byte	0x91
 1693 0201 77       		.sleb128 -9
 1694 0202 0F       		.uleb128 0xf
 1695 0203 CF020000 		.4byte	.LASF31
 1696 0207 01       		.byte	0x1
 1697 0208 1702     		.2byte	0x217
 1698 020a 6B000000 		.4byte	0x6b
 1699 020e 02       		.uleb128 0x2
 1700 020f 91       		.byte	0x91
 1701 0210 76       		.sleb128 -10
 1702 0211 00       		.byte	0
 1703 0212 10       		.uleb128 0x10
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 60


 1704 0213 EE010000 		.4byte	.LASF33
 1705 0217 01       		.byte	0x1
 1706 0218 7A02     		.2byte	0x27a
 1707 021a 76000000 		.4byte	0x76
 1708 021e 00000000 		.4byte	.LFB10
 1709 0222 20000000 		.4byte	.LFE10-.LFB10
 1710 0226 01       		.uleb128 0x1
 1711 0227 9C       		.byte	0x9c
 1712 0228 0E       		.uleb128 0xe
 1713 0229 88030000 		.4byte	.LASF34
 1714 022d 01       		.byte	0x1
 1715 022e AB02     		.2byte	0x2ab
 1716 0230 6B000000 		.4byte	0x6b
 1717 0234 00000000 		.4byte	.LFB11
 1718 0238 30000000 		.4byte	.LFE11-.LFB11
 1719 023c 01       		.uleb128 0x1
 1720 023d 9C       		.byte	0x9c
 1721 023e 52020000 		.4byte	0x252
 1722 0242 0F       		.uleb128 0xf
 1723 0243 79010000 		.4byte	.LASF35
 1724 0247 01       		.byte	0x1
 1725 0248 AE02     		.2byte	0x2ae
 1726 024a 6B000000 		.4byte	0x6b
 1727 024e 02       		.uleb128 0x2
 1728 024f 91       		.byte	0x91
 1729 0250 77       		.sleb128 -9
 1730 0251 00       		.byte	0
 1731 0252 11       		.uleb128 0x11
 1732 0253 09030000 		.4byte	.LASF36
 1733 0257 01       		.byte	0x1
 1734 0258 F502     		.2byte	0x2f5
 1735 025a 00000000 		.4byte	.LFB12
 1736 025e 40000000 		.4byte	.LFE12-.LFB12
 1737 0262 01       		.uleb128 0x1
 1738 0263 9C       		.byte	0x9c
 1739 0264 78020000 		.4byte	0x278
 1740 0268 0F       		.uleb128 0xf
 1741 0269 D1030000 		.4byte	.LASF21
 1742 026d 01       		.byte	0x1
 1743 026e F702     		.2byte	0x2f7
 1744 0270 6B000000 		.4byte	0x6b
 1745 0274 02       		.uleb128 0x2
 1746 0275 91       		.byte	0x91
 1747 0276 77       		.sleb128 -9
 1748 0277 00       		.byte	0
 1749 0278 0C       		.uleb128 0xc
 1750 0279 1E030000 		.4byte	.LASF37
 1751 027d 01       		.byte	0x1
 1752 027e 2D03     		.2byte	0x32d
 1753 0280 00000000 		.4byte	.LFB13
 1754 0284 14000000 		.4byte	.LFE13-.LFB13
 1755 0288 01       		.uleb128 0x1
 1756 0289 9C       		.byte	0x9c
 1757 028a 9E020000 		.4byte	0x29e
 1758 028e 0D       		.uleb128 0xd
 1759 028f DA000000 		.4byte	.LASF38
 1760 0293 01       		.byte	0x1
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 61


 1761 0294 2D03     		.2byte	0x32d
 1762 0296 6B000000 		.4byte	0x6b
 1763 029a 02       		.uleb128 0x2
 1764 029b 91       		.byte	0x91
 1765 029c 77       		.sleb128 -9
 1766 029d 00       		.byte	0
 1767 029e 0C       		.uleb128 0xc
 1768 029f 21020000 		.4byte	.LASF39
 1769 02a3 01       		.byte	0x1
 1770 02a4 5903     		.2byte	0x359
 1771 02a6 00000000 		.4byte	.LFB14
 1772 02aa 20000000 		.4byte	.LFE14-.LFB14
 1773 02ae 01       		.uleb128 0x1
 1774 02af 9C       		.byte	0x9c
 1775 02b0 C4020000 		.4byte	0x2c4
 1776 02b4 0D       		.uleb128 0xd
 1777 02b5 4B020000 		.4byte	.LASF40
 1778 02b9 01       		.byte	0x1
 1779 02ba 5903     		.2byte	0x359
 1780 02bc 6B000000 		.4byte	0x6b
 1781 02c0 02       		.uleb128 0x2
 1782 02c1 91       		.byte	0x91
 1783 02c2 77       		.sleb128 -9
 1784 02c3 00       		.byte	0
 1785 02c4 0C       		.uleb128 0xc
 1786 02c5 36020000 		.4byte	.LASF41
 1787 02c9 01       		.byte	0x1
 1788 02ca 6D03     		.2byte	0x36d
 1789 02cc 00000000 		.4byte	.LFB15
 1790 02d0 20000000 		.4byte	.LFE15-.LFB15
 1791 02d4 01       		.uleb128 0x1
 1792 02d5 9C       		.byte	0x9c
 1793 02d6 EA020000 		.4byte	0x2ea
 1794 02da 0D       		.uleb128 0xd
 1795 02db 4B020000 		.4byte	.LASF40
 1796 02df 01       		.byte	0x1
 1797 02e0 6D03     		.2byte	0x36d
 1798 02e2 6B000000 		.4byte	0x6b
 1799 02e6 02       		.uleb128 0x2
 1800 02e7 91       		.byte	0x91
 1801 02e8 77       		.sleb128 -9
 1802 02e9 00       		.byte	0
 1803 02ea 0C       		.uleb128 0xc
 1804 02eb D8020000 		.4byte	.LASF42
 1805 02ef 01       		.byte	0x1
 1806 02f0 8C03     		.2byte	0x38c
 1807 02f2 00000000 		.4byte	.LFB16
 1808 02f6 20000000 		.4byte	.LFE16-.LFB16
 1809 02fa 01       		.uleb128 0x1
 1810 02fb 9C       		.byte	0x9c
 1811 02fc 10030000 		.4byte	0x310
 1812 0300 0D       		.uleb128 0xd
 1813 0301 C0010000 		.4byte	.LASF25
 1814 0305 01       		.byte	0x1
 1815 0306 8C03     		.2byte	0x38c
 1816 0308 6B000000 		.4byte	0x6b
 1817 030c 02       		.uleb128 0x2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 62


 1818 030d 91       		.byte	0x91
 1819 030e 77       		.sleb128 -9
 1820 030f 00       		.byte	0
 1821 0310 0C       		.uleb128 0xc
 1822 0311 FD010000 		.4byte	.LASF43
 1823 0315 01       		.byte	0x1
 1824 0316 AE03     		.2byte	0x3ae
 1825 0318 00000000 		.4byte	.LFB17
 1826 031c 2C000000 		.4byte	.LFE17-.LFB17
 1827 0320 01       		.uleb128 0x1
 1828 0321 9C       		.byte	0x9c
 1829 0322 36030000 		.4byte	0x336
 1830 0326 0D       		.uleb128 0xd
 1831 0327 1C000000 		.4byte	.LASF44
 1832 032b 01       		.byte	0x1
 1833 032c AE03     		.2byte	0x3ae
 1834 032e 6B000000 		.4byte	0x6b
 1835 0332 02       		.uleb128 0x2
 1836 0333 91       		.byte	0x91
 1837 0334 77       		.sleb128 -9
 1838 0335 00       		.byte	0
 1839 0336 0B       		.uleb128 0xb
 1840 0337 53010000 		.4byte	.LASF45
 1841 033b 01       		.byte	0x1
 1842 033c EB03     		.2byte	0x3eb
 1843 033e 6B000000 		.4byte	0x6b
 1844 0342 00000000 		.4byte	.LFB18
 1845 0346 18000000 		.4byte	.LFE18-.LFB18
 1846 034a 01       		.uleb128 0x1
 1847 034b 9C       		.byte	0x9c
 1848 034c 0C       		.uleb128 0xc
 1849 034d 27000000 		.4byte	.LASF46
 1850 0351 01       		.byte	0x1
 1851 0352 1104     		.2byte	0x411
 1852 0354 00000000 		.4byte	.LFB19
 1853 0358 34000000 		.4byte	.LFE19-.LFB19
 1854 035c 01       		.uleb128 0x1
 1855 035d 9C       		.byte	0x9c
 1856 035e 72030000 		.4byte	0x372
 1857 0362 0D       		.uleb128 0xd
 1858 0363 1C000000 		.4byte	.LASF44
 1859 0367 01       		.byte	0x1
 1860 0368 1104     		.2byte	0x411
 1861 036a 6B000000 		.4byte	0x6b
 1862 036e 02       		.uleb128 0x2
 1863 036f 91       		.byte	0x91
 1864 0370 77       		.sleb128 -9
 1865 0371 00       		.byte	0
 1866 0372 11       		.uleb128 0x11
 1867 0373 F8020000 		.4byte	.LASF47
 1868 0377 01       		.byte	0x1
 1869 0378 7904     		.2byte	0x479
 1870 037a 00000000 		.4byte	.LFB20
 1871 037e 40000000 		.4byte	.LFE20-.LFB20
 1872 0382 01       		.uleb128 0x1
 1873 0383 9C       		.byte	0x9c
 1874 0384 A7030000 		.4byte	0x3a7
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 63


 1875 0388 0D       		.uleb128 0xd
 1876 0389 36000000 		.4byte	.LASF48
 1877 038d 01       		.byte	0x1
 1878 038e 7904     		.2byte	0x479
 1879 0390 A7030000 		.4byte	0x3a7
 1880 0394 02       		.uleb128 0x2
 1881 0395 91       		.byte	0x91
 1882 0396 6C       		.sleb128 -20
 1883 0397 0F       		.uleb128 0xf
 1884 0398 9F010000 		.4byte	.LASF49
 1885 039c 01       		.byte	0x1
 1886 039d 7B04     		.2byte	0x47b
 1887 039f 76000000 		.4byte	0x76
 1888 03a3 02       		.uleb128 0x2
 1889 03a4 91       		.byte	0x91
 1890 03a5 76       		.sleb128 -10
 1891 03a6 00       		.byte	0
 1892 03a7 12       		.uleb128 0x12
 1893 03a8 04       		.byte	0x4
 1894 03a9 AD030000 		.4byte	0x3ad
 1895 03ad 13       		.uleb128 0x13
 1896 03ae 8F000000 		.4byte	0x8f
 1897 03b2 11       		.uleb128 0x11
 1898 03b3 58040000 		.4byte	.LASF50
 1899 03b7 01       		.byte	0x1
 1900 03b8 A704     		.2byte	0x4a7
 1901 03ba 00000000 		.4byte	.LFB21
 1902 03be 40000000 		.4byte	.LFE21-.LFB21
 1903 03c2 01       		.uleb128 0x1
 1904 03c3 9C       		.byte	0x9c
 1905 03c4 F6030000 		.4byte	0x3f6
 1906 03c8 0D       		.uleb128 0xd
 1907 03c9 36000000 		.4byte	.LASF48
 1908 03cd 01       		.byte	0x1
 1909 03ce A704     		.2byte	0x4a7
 1910 03d0 F6030000 		.4byte	0x3f6
 1911 03d4 02       		.uleb128 0x2
 1912 03d5 91       		.byte	0x91
 1913 03d6 6C       		.sleb128 -20
 1914 03d7 0D       		.uleb128 0xd
 1915 03d8 7E030000 		.4byte	.LASF51
 1916 03dc 01       		.byte	0x1
 1917 03dd A704     		.2byte	0x4a7
 1918 03df 6B000000 		.4byte	0x6b
 1919 03e3 02       		.uleb128 0x2
 1920 03e4 91       		.byte	0x91
 1921 03e5 6B       		.sleb128 -21
 1922 03e6 0F       		.uleb128 0xf
 1923 03e7 9F010000 		.4byte	.LASF49
 1924 03eb 01       		.byte	0x1
 1925 03ec AA04     		.2byte	0x4aa
 1926 03ee 6B000000 		.4byte	0x6b
 1927 03f2 02       		.uleb128 0x2
 1928 03f3 91       		.byte	0x91
 1929 03f4 77       		.sleb128 -9
 1930 03f5 00       		.byte	0
 1931 03f6 12       		.uleb128 0x12
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 64


 1932 03f7 04       		.byte	0x4
 1933 03f8 FC030000 		.4byte	0x3fc
 1934 03fc 13       		.uleb128 0x13
 1935 03fd 6B000000 		.4byte	0x6b
 1936 0401 11       		.uleb128 0x11
 1937 0402 A8000000 		.4byte	.LASF52
 1938 0406 01       		.byte	0x1
 1939 0407 CE04     		.2byte	0x4ce
 1940 0409 00000000 		.4byte	.LFB22
 1941 040d 30000000 		.4byte	.LFE22-.LFB22
 1942 0411 01       		.uleb128 0x1
 1943 0412 9C       		.byte	0x9c
 1944 0413 27040000 		.4byte	0x427
 1945 0417 0D       		.uleb128 0xd
 1946 0418 1C000000 		.4byte	.LASF44
 1947 041c 01       		.byte	0x1
 1948 041d CE04     		.2byte	0x4ce
 1949 041f 6B000000 		.4byte	0x6b
 1950 0423 02       		.uleb128 0x2
 1951 0424 91       		.byte	0x91
 1952 0425 77       		.sleb128 -9
 1953 0426 00       		.byte	0
 1954 0427 0E       		.uleb128 0xe
 1955 0428 77000000 		.4byte	.LASF53
 1956 042c 01       		.byte	0x1
 1957 042d F904     		.2byte	0x4f9
 1958 042f 6B000000 		.4byte	0x6b
 1959 0433 00000000 		.4byte	.LFB23
 1960 0437 44000000 		.4byte	.LFE23-.LFB23
 1961 043b 01       		.uleb128 0x1
 1962 043c 9C       		.byte	0x9c
 1963 043d 51040000 		.4byte	0x451
 1964 0441 0F       		.uleb128 0xf
 1965 0442 79010000 		.4byte	.LASF35
 1966 0446 01       		.byte	0x1
 1967 0447 FC04     		.2byte	0x4fc
 1968 0449 6B000000 		.4byte	0x6b
 1969 044d 02       		.uleb128 0x2
 1970 044e 91       		.byte	0x91
 1971 044f 77       		.sleb128 -9
 1972 0450 00       		.byte	0
 1973 0451 11       		.uleb128 0x11
 1974 0452 07000000 		.4byte	.LASF54
 1975 0456 01       		.byte	0x1
 1976 0457 4A05     		.2byte	0x54a
 1977 0459 00000000 		.4byte	.LFB24
 1978 045d 40000000 		.4byte	.LFE24-.LFB24
 1979 0461 01       		.uleb128 0x1
 1980 0462 9C       		.byte	0x9c
 1981 0463 77040000 		.4byte	0x477
 1982 0467 0F       		.uleb128 0xf
 1983 0468 D1030000 		.4byte	.LASF21
 1984 046c 01       		.byte	0x1
 1985 046d 4C05     		.2byte	0x54c
 1986 046f 6B000000 		.4byte	0x6b
 1987 0473 02       		.uleb128 0x2
 1988 0474 91       		.byte	0x91
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 65


 1989 0475 77       		.sleb128 -9
 1990 0476 00       		.byte	0
 1991 0477 11       		.uleb128 0x11
 1992 0478 3D000000 		.4byte	.LASF55
 1993 047c 01       		.byte	0x1
 1994 047d A005     		.2byte	0x5a0
 1995 047f 00000000 		.4byte	.LFB25
 1996 0483 9C000000 		.4byte	.LFE25-.LFB25
 1997 0487 01       		.uleb128 0x1
 1998 0488 9C       		.byte	0x9c
 1999 0489 B6040000 		.4byte	0x4b6
 2000 048d 0D       		.uleb128 0xd
 2001 048e 2A010000 		.4byte	.LASF56
 2002 0492 01       		.byte	0x1
 2003 0493 A005     		.2byte	0x5a0
 2004 0495 6B000000 		.4byte	0x6b
 2005 0499 02       		.uleb128 0x2
 2006 049a 91       		.byte	0x91
 2007 049b 6F       		.sleb128 -17
 2008 049c 14       		.uleb128 0x14
 2009 049d 12000000 		.4byte	.LBB2
 2010 04a1 78000000 		.4byte	.LBE2-.LBB2
 2011 04a5 0F       		.uleb128 0xf
 2012 04a6 10020000 		.4byte	.LASF57
 2013 04aa 01       		.byte	0x1
 2014 04ab A805     		.2byte	0x5a8
 2015 04ad 6B000000 		.4byte	0x6b
 2016 04b1 02       		.uleb128 0x2
 2017 04b2 91       		.byte	0x91
 2018 04b3 77       		.sleb128 -9
 2019 04b4 00       		.byte	0
 2020 04b5 00       		.byte	0
 2021 04b6 11       		.uleb128 0x11
 2022 04b7 A8010000 		.4byte	.LASF58
 2023 04bb 01       		.byte	0x1
 2024 04bc 2406     		.2byte	0x624
 2025 04be 00000000 		.4byte	.LFB26
 2026 04c2 3C000000 		.4byte	.LFE26-.LFB26
 2027 04c6 01       		.uleb128 0x1
 2028 04c7 9C       		.byte	0x9c
 2029 04c8 DC040000 		.4byte	0x4dc
 2030 04cc 0D       		.uleb128 0xd
 2031 04cd DA000000 		.4byte	.LASF38
 2032 04d1 01       		.byte	0x1
 2033 04d2 2406     		.2byte	0x624
 2034 04d4 6B000000 		.4byte	0x6b
 2035 04d8 02       		.uleb128 0x2
 2036 04d9 91       		.byte	0x91
 2037 04da 77       		.sleb128 -9
 2038 04db 00       		.byte	0
 2039 04dc 15       		.uleb128 0x15
 2040 04dd 32010000 		.4byte	.LASF59
 2041 04e1 01       		.byte	0x1
 2042 04e2 5006     		.2byte	0x650
 2043 04e4 00000000 		.4byte	.LFB27
 2044 04e8 24000000 		.4byte	.LFE27-.LFB27
 2045 04ec 01       		.uleb128 0x1
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 66


 2046 04ed 9C       		.byte	0x9c
 2047 04ee 15       		.uleb128 0x15
 2048 04ef 9F030000 		.4byte	.LASF60
 2049 04f3 01       		.byte	0x1
 2050 04f4 7006     		.2byte	0x670
 2051 04f6 00000000 		.4byte	.LFB28
 2052 04fa 24000000 		.4byte	.LFE28-.LFB28
 2053 04fe 01       		.uleb128 0x1
 2054 04ff 9C       		.byte	0x9c
 2055 0500 16       		.uleb128 0x16
 2056 0501 6F030000 		.4byte	.LASF64
 2057 0505 01       		.byte	0x1
 2058 0506 1B       		.byte	0x1b
 2059 0507 6B000000 		.4byte	0x6b
 2060 050b 05       		.uleb128 0x5
 2061 050c 03       		.byte	0x3
 2062 050d 00000000 		.4byte	UART_1_initVar
 2063 0511 00       		.byte	0
 2064              		.section	.debug_abbrev,"",%progbits
 2065              	.Ldebug_abbrev0:
 2066 0000 01       		.uleb128 0x1
 2067 0001 11       		.uleb128 0x11
 2068 0002 01       		.byte	0x1
 2069 0003 25       		.uleb128 0x25
 2070 0004 0E       		.uleb128 0xe
 2071 0005 13       		.uleb128 0x13
 2072 0006 0B       		.uleb128 0xb
 2073 0007 03       		.uleb128 0x3
 2074 0008 0E       		.uleb128 0xe
 2075 0009 1B       		.uleb128 0x1b
 2076 000a 0E       		.uleb128 0xe
 2077 000b 55       		.uleb128 0x55
 2078 000c 17       		.uleb128 0x17
 2079 000d 11       		.uleb128 0x11
 2080 000e 01       		.uleb128 0x1
 2081 000f 10       		.uleb128 0x10
 2082 0010 17       		.uleb128 0x17
 2083 0011 00       		.byte	0
 2084 0012 00       		.byte	0
 2085 0013 02       		.uleb128 0x2
 2086 0014 24       		.uleb128 0x24
 2087 0015 00       		.byte	0
 2088 0016 0B       		.uleb128 0xb
 2089 0017 0B       		.uleb128 0xb
 2090 0018 3E       		.uleb128 0x3e
 2091 0019 0B       		.uleb128 0xb
 2092 001a 03       		.uleb128 0x3
 2093 001b 0E       		.uleb128 0xe
 2094 001c 00       		.byte	0
 2095 001d 00       		.byte	0
 2096 001e 03       		.uleb128 0x3
 2097 001f 24       		.uleb128 0x24
 2098 0020 00       		.byte	0
 2099 0021 0B       		.uleb128 0xb
 2100 0022 0B       		.uleb128 0xb
 2101 0023 3E       		.uleb128 0x3e
 2102 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 67


 2103 0025 03       		.uleb128 0x3
 2104 0026 08       		.uleb128 0x8
 2105 0027 00       		.byte	0
 2106 0028 00       		.byte	0
 2107 0029 04       		.uleb128 0x4
 2108 002a 16       		.uleb128 0x16
 2109 002b 00       		.byte	0
 2110 002c 03       		.uleb128 0x3
 2111 002d 0E       		.uleb128 0xe
 2112 002e 3A       		.uleb128 0x3a
 2113 002f 0B       		.uleb128 0xb
 2114 0030 3B       		.uleb128 0x3b
 2115 0031 0B       		.uleb128 0xb
 2116 0032 49       		.uleb128 0x49
 2117 0033 13       		.uleb128 0x13
 2118 0034 00       		.byte	0
 2119 0035 00       		.byte	0
 2120 0036 05       		.uleb128 0x5
 2121 0037 16       		.uleb128 0x16
 2122 0038 00       		.byte	0
 2123 0039 03       		.uleb128 0x3
 2124 003a 0E       		.uleb128 0xe
 2125 003b 3A       		.uleb128 0x3a
 2126 003c 0B       		.uleb128 0xb
 2127 003d 3B       		.uleb128 0x3b
 2128 003e 05       		.uleb128 0x5
 2129 003f 49       		.uleb128 0x49
 2130 0040 13       		.uleb128 0x13
 2131 0041 00       		.byte	0
 2132 0042 00       		.byte	0
 2133 0043 06       		.uleb128 0x6
 2134 0044 35       		.uleb128 0x35
 2135 0045 00       		.byte	0
 2136 0046 49       		.uleb128 0x49
 2137 0047 13       		.uleb128 0x13
 2138 0048 00       		.byte	0
 2139 0049 00       		.byte	0
 2140 004a 07       		.uleb128 0x7
 2141 004b 2E       		.uleb128 0x2e
 2142 004c 00       		.byte	0
 2143 004d 3F       		.uleb128 0x3f
 2144 004e 19       		.uleb128 0x19
 2145 004f 03       		.uleb128 0x3
 2146 0050 0E       		.uleb128 0xe
 2147 0051 3A       		.uleb128 0x3a
 2148 0052 0B       		.uleb128 0xb
 2149 0053 3B       		.uleb128 0x3b
 2150 0054 0B       		.uleb128 0xb
 2151 0055 27       		.uleb128 0x27
 2152 0056 19       		.uleb128 0x19
 2153 0057 11       		.uleb128 0x11
 2154 0058 01       		.uleb128 0x1
 2155 0059 12       		.uleb128 0x12
 2156 005a 06       		.uleb128 0x6
 2157 005b 40       		.uleb128 0x40
 2158 005c 18       		.uleb128 0x18
 2159 005d 9642     		.uleb128 0x2116
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 68


 2160 005f 19       		.uleb128 0x19
 2161 0060 00       		.byte	0
 2162 0061 00       		.byte	0
 2163 0062 08       		.uleb128 0x8
 2164 0063 2E       		.uleb128 0x2e
 2165 0064 00       		.byte	0
 2166 0065 3F       		.uleb128 0x3f
 2167 0066 19       		.uleb128 0x19
 2168 0067 03       		.uleb128 0x3
 2169 0068 0E       		.uleb128 0xe
 2170 0069 3A       		.uleb128 0x3a
 2171 006a 0B       		.uleb128 0xb
 2172 006b 3B       		.uleb128 0x3b
 2173 006c 0B       		.uleb128 0xb
 2174 006d 27       		.uleb128 0x27
 2175 006e 19       		.uleb128 0x19
 2176 006f 11       		.uleb128 0x11
 2177 0070 01       		.uleb128 0x1
 2178 0071 12       		.uleb128 0x12
 2179 0072 06       		.uleb128 0x6
 2180 0073 40       		.uleb128 0x40
 2181 0074 18       		.uleb128 0x18
 2182 0075 9742     		.uleb128 0x2117
 2183 0077 19       		.uleb128 0x19
 2184 0078 00       		.byte	0
 2185 0079 00       		.byte	0
 2186 007a 09       		.uleb128 0x9
 2187 007b 2E       		.uleb128 0x2e
 2188 007c 01       		.byte	0x1
 2189 007d 3F       		.uleb128 0x3f
 2190 007e 19       		.uleb128 0x19
 2191 007f 03       		.uleb128 0x3
 2192 0080 0E       		.uleb128 0xe
 2193 0081 3A       		.uleb128 0x3a
 2194 0082 0B       		.uleb128 0xb
 2195 0083 3B       		.uleb128 0x3b
 2196 0084 0B       		.uleb128 0xb
 2197 0085 27       		.uleb128 0x27
 2198 0086 19       		.uleb128 0x19
 2199 0087 11       		.uleb128 0x11
 2200 0088 01       		.uleb128 0x1
 2201 0089 12       		.uleb128 0x12
 2202 008a 06       		.uleb128 0x6
 2203 008b 40       		.uleb128 0x40
 2204 008c 18       		.uleb128 0x18
 2205 008d 9642     		.uleb128 0x2116
 2206 008f 19       		.uleb128 0x19
 2207 0090 01       		.uleb128 0x1
 2208 0091 13       		.uleb128 0x13
 2209 0092 00       		.byte	0
 2210 0093 00       		.byte	0
 2211 0094 0A       		.uleb128 0xa
 2212 0095 34       		.uleb128 0x34
 2213 0096 00       		.byte	0
 2214 0097 03       		.uleb128 0x3
 2215 0098 0E       		.uleb128 0xe
 2216 0099 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 69


 2217 009a 0B       		.uleb128 0xb
 2218 009b 3B       		.uleb128 0x3b
 2219 009c 0B       		.uleb128 0xb
 2220 009d 49       		.uleb128 0x49
 2221 009e 13       		.uleb128 0x13
 2222 009f 02       		.uleb128 0x2
 2223 00a0 18       		.uleb128 0x18
 2224 00a1 00       		.byte	0
 2225 00a2 00       		.byte	0
 2226 00a3 0B       		.uleb128 0xb
 2227 00a4 2E       		.uleb128 0x2e
 2228 00a5 00       		.byte	0
 2229 00a6 3F       		.uleb128 0x3f
 2230 00a7 19       		.uleb128 0x19
 2231 00a8 03       		.uleb128 0x3
 2232 00a9 0E       		.uleb128 0xe
 2233 00aa 3A       		.uleb128 0x3a
 2234 00ab 0B       		.uleb128 0xb
 2235 00ac 3B       		.uleb128 0x3b
 2236 00ad 05       		.uleb128 0x5
 2237 00ae 27       		.uleb128 0x27
 2238 00af 19       		.uleb128 0x19
 2239 00b0 49       		.uleb128 0x49
 2240 00b1 13       		.uleb128 0x13
 2241 00b2 11       		.uleb128 0x11
 2242 00b3 01       		.uleb128 0x1
 2243 00b4 12       		.uleb128 0x12
 2244 00b5 06       		.uleb128 0x6
 2245 00b6 40       		.uleb128 0x40
 2246 00b7 18       		.uleb128 0x18
 2247 00b8 9742     		.uleb128 0x2117
 2248 00ba 19       		.uleb128 0x19
 2249 00bb 00       		.byte	0
 2250 00bc 00       		.byte	0
 2251 00bd 0C       		.uleb128 0xc
 2252 00be 2E       		.uleb128 0x2e
 2253 00bf 01       		.byte	0x1
 2254 00c0 3F       		.uleb128 0x3f
 2255 00c1 19       		.uleb128 0x19
 2256 00c2 03       		.uleb128 0x3
 2257 00c3 0E       		.uleb128 0xe
 2258 00c4 3A       		.uleb128 0x3a
 2259 00c5 0B       		.uleb128 0xb
 2260 00c6 3B       		.uleb128 0x3b
 2261 00c7 05       		.uleb128 0x5
 2262 00c8 27       		.uleb128 0x27
 2263 00c9 19       		.uleb128 0x19
 2264 00ca 11       		.uleb128 0x11
 2265 00cb 01       		.uleb128 0x1
 2266 00cc 12       		.uleb128 0x12
 2267 00cd 06       		.uleb128 0x6
 2268 00ce 40       		.uleb128 0x40
 2269 00cf 18       		.uleb128 0x18
 2270 00d0 9742     		.uleb128 0x2117
 2271 00d2 19       		.uleb128 0x19
 2272 00d3 01       		.uleb128 0x1
 2273 00d4 13       		.uleb128 0x13
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 70


 2274 00d5 00       		.byte	0
 2275 00d6 00       		.byte	0
 2276 00d7 0D       		.uleb128 0xd
 2277 00d8 05       		.uleb128 0x5
 2278 00d9 00       		.byte	0
 2279 00da 03       		.uleb128 0x3
 2280 00db 0E       		.uleb128 0xe
 2281 00dc 3A       		.uleb128 0x3a
 2282 00dd 0B       		.uleb128 0xb
 2283 00de 3B       		.uleb128 0x3b
 2284 00df 05       		.uleb128 0x5
 2285 00e0 49       		.uleb128 0x49
 2286 00e1 13       		.uleb128 0x13
 2287 00e2 02       		.uleb128 0x2
 2288 00e3 18       		.uleb128 0x18
 2289 00e4 00       		.byte	0
 2290 00e5 00       		.byte	0
 2291 00e6 0E       		.uleb128 0xe
 2292 00e7 2E       		.uleb128 0x2e
 2293 00e8 01       		.byte	0x1
 2294 00e9 3F       		.uleb128 0x3f
 2295 00ea 19       		.uleb128 0x19
 2296 00eb 03       		.uleb128 0x3
 2297 00ec 0E       		.uleb128 0xe
 2298 00ed 3A       		.uleb128 0x3a
 2299 00ee 0B       		.uleb128 0xb
 2300 00ef 3B       		.uleb128 0x3b
 2301 00f0 05       		.uleb128 0x5
 2302 00f1 27       		.uleb128 0x27
 2303 00f2 19       		.uleb128 0x19
 2304 00f3 49       		.uleb128 0x49
 2305 00f4 13       		.uleb128 0x13
 2306 00f5 11       		.uleb128 0x11
 2307 00f6 01       		.uleb128 0x1
 2308 00f7 12       		.uleb128 0x12
 2309 00f8 06       		.uleb128 0x6
 2310 00f9 40       		.uleb128 0x40
 2311 00fa 18       		.uleb128 0x18
 2312 00fb 9742     		.uleb128 0x2117
 2313 00fd 19       		.uleb128 0x19
 2314 00fe 01       		.uleb128 0x1
 2315 00ff 13       		.uleb128 0x13
 2316 0100 00       		.byte	0
 2317 0101 00       		.byte	0
 2318 0102 0F       		.uleb128 0xf
 2319 0103 34       		.uleb128 0x34
 2320 0104 00       		.byte	0
 2321 0105 03       		.uleb128 0x3
 2322 0106 0E       		.uleb128 0xe
 2323 0107 3A       		.uleb128 0x3a
 2324 0108 0B       		.uleb128 0xb
 2325 0109 3B       		.uleb128 0x3b
 2326 010a 05       		.uleb128 0x5
 2327 010b 49       		.uleb128 0x49
 2328 010c 13       		.uleb128 0x13
 2329 010d 02       		.uleb128 0x2
 2330 010e 18       		.uleb128 0x18
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 71


 2331 010f 00       		.byte	0
 2332 0110 00       		.byte	0
 2333 0111 10       		.uleb128 0x10
 2334 0112 2E       		.uleb128 0x2e
 2335 0113 00       		.byte	0
 2336 0114 3F       		.uleb128 0x3f
 2337 0115 19       		.uleb128 0x19
 2338 0116 03       		.uleb128 0x3
 2339 0117 0E       		.uleb128 0xe
 2340 0118 3A       		.uleb128 0x3a
 2341 0119 0B       		.uleb128 0xb
 2342 011a 3B       		.uleb128 0x3b
 2343 011b 05       		.uleb128 0x5
 2344 011c 27       		.uleb128 0x27
 2345 011d 19       		.uleb128 0x19
 2346 011e 49       		.uleb128 0x49
 2347 011f 13       		.uleb128 0x13
 2348 0120 11       		.uleb128 0x11
 2349 0121 01       		.uleb128 0x1
 2350 0122 12       		.uleb128 0x12
 2351 0123 06       		.uleb128 0x6
 2352 0124 40       		.uleb128 0x40
 2353 0125 18       		.uleb128 0x18
 2354 0126 9642     		.uleb128 0x2116
 2355 0128 19       		.uleb128 0x19
 2356 0129 00       		.byte	0
 2357 012a 00       		.byte	0
 2358 012b 11       		.uleb128 0x11
 2359 012c 2E       		.uleb128 0x2e
 2360 012d 01       		.byte	0x1
 2361 012e 3F       		.uleb128 0x3f
 2362 012f 19       		.uleb128 0x19
 2363 0130 03       		.uleb128 0x3
 2364 0131 0E       		.uleb128 0xe
 2365 0132 3A       		.uleb128 0x3a
 2366 0133 0B       		.uleb128 0xb
 2367 0134 3B       		.uleb128 0x3b
 2368 0135 05       		.uleb128 0x5
 2369 0136 27       		.uleb128 0x27
 2370 0137 19       		.uleb128 0x19
 2371 0138 11       		.uleb128 0x11
 2372 0139 01       		.uleb128 0x1
 2373 013a 12       		.uleb128 0x12
 2374 013b 06       		.uleb128 0x6
 2375 013c 40       		.uleb128 0x40
 2376 013d 18       		.uleb128 0x18
 2377 013e 9642     		.uleb128 0x2116
 2378 0140 19       		.uleb128 0x19
 2379 0141 01       		.uleb128 0x1
 2380 0142 13       		.uleb128 0x13
 2381 0143 00       		.byte	0
 2382 0144 00       		.byte	0
 2383 0145 12       		.uleb128 0x12
 2384 0146 0F       		.uleb128 0xf
 2385 0147 00       		.byte	0
 2386 0148 0B       		.uleb128 0xb
 2387 0149 0B       		.uleb128 0xb
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 72


 2388 014a 49       		.uleb128 0x49
 2389 014b 13       		.uleb128 0x13
 2390 014c 00       		.byte	0
 2391 014d 00       		.byte	0
 2392 014e 13       		.uleb128 0x13
 2393 014f 26       		.uleb128 0x26
 2394 0150 00       		.byte	0
 2395 0151 49       		.uleb128 0x49
 2396 0152 13       		.uleb128 0x13
 2397 0153 00       		.byte	0
 2398 0154 00       		.byte	0
 2399 0155 14       		.uleb128 0x14
 2400 0156 0B       		.uleb128 0xb
 2401 0157 01       		.byte	0x1
 2402 0158 11       		.uleb128 0x11
 2403 0159 01       		.uleb128 0x1
 2404 015a 12       		.uleb128 0x12
 2405 015b 06       		.uleb128 0x6
 2406 015c 00       		.byte	0
 2407 015d 00       		.byte	0
 2408 015e 15       		.uleb128 0x15
 2409 015f 2E       		.uleb128 0x2e
 2410 0160 00       		.byte	0
 2411 0161 3F       		.uleb128 0x3f
 2412 0162 19       		.uleb128 0x19
 2413 0163 03       		.uleb128 0x3
 2414 0164 0E       		.uleb128 0xe
 2415 0165 3A       		.uleb128 0x3a
 2416 0166 0B       		.uleb128 0xb
 2417 0167 3B       		.uleb128 0x3b
 2418 0168 05       		.uleb128 0x5
 2419 0169 27       		.uleb128 0x27
 2420 016a 19       		.uleb128 0x19
 2421 016b 11       		.uleb128 0x11
 2422 016c 01       		.uleb128 0x1
 2423 016d 12       		.uleb128 0x12
 2424 016e 06       		.uleb128 0x6
 2425 016f 40       		.uleb128 0x40
 2426 0170 18       		.uleb128 0x18
 2427 0171 9642     		.uleb128 0x2116
 2428 0173 19       		.uleb128 0x19
 2429 0174 00       		.byte	0
 2430 0175 00       		.byte	0
 2431 0176 16       		.uleb128 0x16
 2432 0177 34       		.uleb128 0x34
 2433 0178 00       		.byte	0
 2434 0179 03       		.uleb128 0x3
 2435 017a 0E       		.uleb128 0xe
 2436 017b 3A       		.uleb128 0x3a
 2437 017c 0B       		.uleb128 0xb
 2438 017d 3B       		.uleb128 0x3b
 2439 017e 0B       		.uleb128 0xb
 2440 017f 49       		.uleb128 0x49
 2441 0180 13       		.uleb128 0x13
 2442 0181 3F       		.uleb128 0x3f
 2443 0182 19       		.uleb128 0x19
 2444 0183 02       		.uleb128 0x2
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 73


 2445 0184 18       		.uleb128 0x18
 2446 0185 00       		.byte	0
 2447 0186 00       		.byte	0
 2448 0187 00       		.byte	0
 2449              		.section	.debug_aranges,"",%progbits
 2450 0000 FC000000 		.4byte	0xfc
 2451 0004 0200     		.2byte	0x2
 2452 0006 00000000 		.4byte	.Ldebug_info0
 2453 000a 04       		.byte	0x4
 2454 000b 00       		.byte	0
 2455 000c 0000     		.2byte	0
 2456 000e 0000     		.2byte	0
 2457 0010 00000000 		.4byte	.LFB0
 2458 0014 20000000 		.4byte	.LFE0-.LFB0
 2459 0018 00000000 		.4byte	.LFB1
 2460 001c 20000000 		.4byte	.LFE1-.LFB1
 2461 0020 00000000 		.4byte	.LFB2
 2462 0024 48000000 		.4byte	.LFE2-.LFB2
 2463 0028 00000000 		.4byte	.LFB3
 2464 002c 48000000 		.4byte	.LFE3-.LFB3
 2465 0030 00000000 		.4byte	.LFB4
 2466 0034 18000000 		.4byte	.LFE4-.LFB4
 2467 0038 00000000 		.4byte	.LFB5
 2468 003c 20000000 		.4byte	.LFE5-.LFB5
 2469 0040 00000000 		.4byte	.LFB6
 2470 0044 20000000 		.4byte	.LFE6-.LFB6
 2471 0048 00000000 		.4byte	.LFB7
 2472 004c 20000000 		.4byte	.LFE7-.LFB7
 2473 0050 00000000 		.4byte	.LFB8
 2474 0054 24000000 		.4byte	.LFE8-.LFB8
 2475 0058 00000000 		.4byte	.LFB9
 2476 005c 44000000 		.4byte	.LFE9-.LFB9
 2477 0060 00000000 		.4byte	.LFB10
 2478 0064 20000000 		.4byte	.LFE10-.LFB10
 2479 0068 00000000 		.4byte	.LFB11
 2480 006c 30000000 		.4byte	.LFE11-.LFB11
 2481 0070 00000000 		.4byte	.LFB12
 2482 0074 40000000 		.4byte	.LFE12-.LFB12
 2483 0078 00000000 		.4byte	.LFB13
 2484 007c 14000000 		.4byte	.LFE13-.LFB13
 2485 0080 00000000 		.4byte	.LFB14
 2486 0084 20000000 		.4byte	.LFE14-.LFB14
 2487 0088 00000000 		.4byte	.LFB15
 2488 008c 20000000 		.4byte	.LFE15-.LFB15
 2489 0090 00000000 		.4byte	.LFB16
 2490 0094 20000000 		.4byte	.LFE16-.LFB16
 2491 0098 00000000 		.4byte	.LFB17
 2492 009c 2C000000 		.4byte	.LFE17-.LFB17
 2493 00a0 00000000 		.4byte	.LFB18
 2494 00a4 18000000 		.4byte	.LFE18-.LFB18
 2495 00a8 00000000 		.4byte	.LFB19
 2496 00ac 34000000 		.4byte	.LFE19-.LFB19
 2497 00b0 00000000 		.4byte	.LFB20
 2498 00b4 40000000 		.4byte	.LFE20-.LFB20
 2499 00b8 00000000 		.4byte	.LFB21
 2500 00bc 40000000 		.4byte	.LFE21-.LFB21
 2501 00c0 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 74


 2502 00c4 30000000 		.4byte	.LFE22-.LFB22
 2503 00c8 00000000 		.4byte	.LFB23
 2504 00cc 44000000 		.4byte	.LFE23-.LFB23
 2505 00d0 00000000 		.4byte	.LFB24
 2506 00d4 40000000 		.4byte	.LFE24-.LFB24
 2507 00d8 00000000 		.4byte	.LFB25
 2508 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2509 00e0 00000000 		.4byte	.LFB26
 2510 00e4 3C000000 		.4byte	.LFE26-.LFB26
 2511 00e8 00000000 		.4byte	.LFB27
 2512 00ec 24000000 		.4byte	.LFE27-.LFB27
 2513 00f0 00000000 		.4byte	.LFB28
 2514 00f4 24000000 		.4byte	.LFE28-.LFB28
 2515 00f8 00000000 		.4byte	0
 2516 00fc 00000000 		.4byte	0
 2517              		.section	.debug_ranges,"",%progbits
 2518              	.Ldebug_ranges0:
 2519 0000 00000000 		.4byte	.LFB0
 2520 0004 20000000 		.4byte	.LFE0
 2521 0008 00000000 		.4byte	.LFB1
 2522 000c 20000000 		.4byte	.LFE1
 2523 0010 00000000 		.4byte	.LFB2
 2524 0014 48000000 		.4byte	.LFE2
 2525 0018 00000000 		.4byte	.LFB3
 2526 001c 48000000 		.4byte	.LFE3
 2527 0020 00000000 		.4byte	.LFB4
 2528 0024 18000000 		.4byte	.LFE4
 2529 0028 00000000 		.4byte	.LFB5
 2530 002c 20000000 		.4byte	.LFE5
 2531 0030 00000000 		.4byte	.LFB6
 2532 0034 20000000 		.4byte	.LFE6
 2533 0038 00000000 		.4byte	.LFB7
 2534 003c 20000000 		.4byte	.LFE7
 2535 0040 00000000 		.4byte	.LFB8
 2536 0044 24000000 		.4byte	.LFE8
 2537 0048 00000000 		.4byte	.LFB9
 2538 004c 44000000 		.4byte	.LFE9
 2539 0050 00000000 		.4byte	.LFB10
 2540 0054 20000000 		.4byte	.LFE10
 2541 0058 00000000 		.4byte	.LFB11
 2542 005c 30000000 		.4byte	.LFE11
 2543 0060 00000000 		.4byte	.LFB12
 2544 0064 40000000 		.4byte	.LFE12
 2545 0068 00000000 		.4byte	.LFB13
 2546 006c 14000000 		.4byte	.LFE13
 2547 0070 00000000 		.4byte	.LFB14
 2548 0074 20000000 		.4byte	.LFE14
 2549 0078 00000000 		.4byte	.LFB15
 2550 007c 20000000 		.4byte	.LFE15
 2551 0080 00000000 		.4byte	.LFB16
 2552 0084 20000000 		.4byte	.LFE16
 2553 0088 00000000 		.4byte	.LFB17
 2554 008c 2C000000 		.4byte	.LFE17
 2555 0090 00000000 		.4byte	.LFB18
 2556 0094 18000000 		.4byte	.LFE18
 2557 0098 00000000 		.4byte	.LFB19
 2558 009c 34000000 		.4byte	.LFE19
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 75


 2559 00a0 00000000 		.4byte	.LFB20
 2560 00a4 40000000 		.4byte	.LFE20
 2561 00a8 00000000 		.4byte	.LFB21
 2562 00ac 40000000 		.4byte	.LFE21
 2563 00b0 00000000 		.4byte	.LFB22
 2564 00b4 30000000 		.4byte	.LFE22
 2565 00b8 00000000 		.4byte	.LFB23
 2566 00bc 44000000 		.4byte	.LFE23
 2567 00c0 00000000 		.4byte	.LFB24
 2568 00c4 40000000 		.4byte	.LFE24
 2569 00c8 00000000 		.4byte	.LFB25
 2570 00cc 9C000000 		.4byte	.LFE25
 2571 00d0 00000000 		.4byte	.LFB26
 2572 00d4 3C000000 		.4byte	.LFE26
 2573 00d8 00000000 		.4byte	.LFB27
 2574 00dc 24000000 		.4byte	.LFE27
 2575 00e0 00000000 		.4byte	.LFB28
 2576 00e4 24000000 		.4byte	.LFE28
 2577 00e8 00000000 		.4byte	0
 2578 00ec 00000000 		.4byte	0
 2579              		.section	.debug_line,"",%progbits
 2580              	.Ldebug_line0:
 2581 0000 05030000 		.section	.debug_str,"MS",%progbits,1
 2581      02004500 
 2581      00000201 
 2581      FB0E0D00 
 2581      01010101 
 2582              	.LASF10:
 2583 0000 75696E74 		.ascii	"uint16\000"
 2583      313600
 2584              	.LASF54:
 2585 0007 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2585      5F315F43 
 2585      6C656172 
 2585      54784275 
 2585      66666572 
 2586              	.LASF44:
 2587 001c 74784461 		.ascii	"txDataByte\000"
 2587      74614279 
 2587      746500
 2588              	.LASF46:
 2589 0027 55415254 		.ascii	"UART_1_PutChar\000"
 2589      5F315F50 
 2589      75744368 
 2589      617200
 2590              	.LASF48:
 2591 0036 73747269 		.ascii	"string\000"
 2591      6E6700
 2592              	.LASF55:
 2593 003d 55415254 		.ascii	"UART_1_SendBreak\000"
 2593      5F315F53 
 2593      656E6442 
 2593      7265616B 
 2593      00
 2594              	.LASF27:
 2595 004e 55415254 		.ascii	"UART_1_ReadRxData\000"
 2595      5F315F52 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 76


 2595      65616452 
 2595      78446174 
 2595      6100
 2596              	.LASF7:
 2597 0060 6C6F6E67 		.ascii	"long long unsigned int\000"
 2597      206C6F6E 
 2597      6720756E 
 2597      7369676E 
 2597      65642069 
 2598              	.LASF53:
 2599 0077 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2599      5F315F47 
 2599      65745478 
 2599      42756666 
 2599      65725369 
 2600              	.LASF6:
 2601 008e 6C6F6E67 		.ascii	"long long int\000"
 2601      206C6F6E 
 2601      6720696E 
 2601      7400
 2602              	.LASF0:
 2603 009c 7369676E 		.ascii	"signed char\000"
 2603      65642063 
 2603      68617200 
 2604              	.LASF52:
 2605 00a8 55415254 		.ascii	"UART_1_PutCRLF\000"
 2605      5F315F50 
 2605      75744352 
 2605      4C4600
 2606              	.LASF4:
 2607 00b7 6C6F6E67 		.ascii	"long int\000"
 2607      20696E74 
 2607      00
 2608              	.LASF17:
 2609 00c0 55415254 		.ascii	"UART_1_Start\000"
 2609      5F315F53 
 2609      74617274 
 2609      00
 2610              	.LASF9:
 2611 00cd 75696E74 		.ascii	"uint8\000"
 2611      3800
 2612              	.LASF12:
 2613 00d3 646F7562 		.ascii	"double\000"
 2613      6C6500
 2614              	.LASF38:
 2615 00da 61646472 		.ascii	"addressMode\000"
 2615      6573734D 
 2615      6F646500 
 2616              	.LASF62:
 2617 00e6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_1.c\000"
 2617      6E657261 
 2617      7465645F 
 2617      536F7572 
 2617      63655C50 
 2618              	.LASF24:
 2619 0108 636F6E74 		.ascii	"control\000"
 2619      726F6C00 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 77


 2620              	.LASF23:
 2621 0110 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 2621      5F315F53 
 2621      65745278 
 2621      496E7465 
 2621      72727570 
 2622              	.LASF56:
 2623 012a 7265744D 		.ascii	"retMode\000"
 2623      6F646500 
 2624              	.LASF59:
 2625 0132 55415254 		.ascii	"UART_1_LoadRxConfig\000"
 2625      5F315F4C 
 2625      6F616452 
 2625      78436F6E 
 2625      66696700 
 2626              	.LASF8:
 2627 0146 756E7369 		.ascii	"unsigned int\000"
 2627      676E6564 
 2627      20696E74 
 2627      00
 2628              	.LASF45:
 2629 0153 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2629      5F315F52 
 2629      65616454 
 2629      78537461 
 2629      74757300 
 2630              	.LASF5:
 2631 0167 6C6F6E67 		.ascii	"long unsigned int\000"
 2631      20756E73 
 2631      69676E65 
 2631      6420696E 
 2631      7400
 2632              	.LASF35:
 2633 0179 73697A65 		.ascii	"size\000"
 2633      00
 2634              	.LASF3:
 2635 017e 73686F72 		.ascii	"short unsigned int\000"
 2635      7420756E 
 2635      7369676E 
 2635      65642069 
 2635      6E7400
 2636              	.LASF19:
 2637 0191 55415254 		.ascii	"UART_1_Enable\000"
 2637      5F315F45 
 2637      6E61626C 
 2637      6500
 2638              	.LASF49:
 2639 019f 62756649 		.ascii	"bufIndex\000"
 2639      6E646578 
 2639      00
 2640              	.LASF58:
 2641 01a8 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2641      5F315F53 
 2641      65745478 
 2641      41646472 
 2641      6573734D 
 2642              	.LASF25:
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 78


 2643 01c0 696E7453 		.ascii	"intSrc\000"
 2643      726300
 2644              	.LASF32:
 2645 01c7 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2645      5F315F52 
 2645      65616443 
 2645      6F6E7472 
 2645      6F6C5265 
 2646              	.LASF20:
 2647 01e2 55415254 		.ascii	"UART_1_Stop\000"
 2647      5F315F53 
 2647      746F7000 
 2648              	.LASF33:
 2649 01ee 55415254 		.ascii	"UART_1_GetByte\000"
 2649      5F315F47 
 2649      65744279 
 2649      746500
 2650              	.LASF43:
 2651 01fd 55415254 		.ascii	"UART_1_WriteTxData\000"
 2651      5F315F57 
 2651      72697465 
 2651      54784461 
 2651      746100
 2652              	.LASF57:
 2653 0210 746D7053 		.ascii	"tmpStat\000"
 2653      74617400 
 2654              	.LASF16:
 2655 0218 73697A65 		.ascii	"sizetype\000"
 2655      74797065 
 2655      00
 2656              	.LASF39:
 2657 0221 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 2657      5F315F53 
 2657      65745278 
 2657      41646472 
 2657      65737331 
 2658              	.LASF41:
 2659 0236 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 2659      5F315F53 
 2659      65745278 
 2659      41646472 
 2659      65737332 
 2660              	.LASF40:
 2661 024b 61646472 		.ascii	"address\000"
 2661      65737300 
 2662              	.LASF61:
 2663 0253 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2663      4320342E 
 2663      382E3420 
 2663      32303134 
 2663      30353236 
 2664 0286 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2664      20726576 
 2664      6973696F 
 2664      6E203231 
 2664      31333538 
 2665 02b9 30202D66 		.ascii	"0 -ffunction-sections\000"
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 79


 2665      66756E63 
 2665      74696F6E 
 2665      2D736563 
 2665      74696F6E 
 2666              	.LASF31:
 2667 02cf 72785374 		.ascii	"rxStatus\000"
 2667      61747573 
 2667      00
 2668              	.LASF42:
 2669 02d8 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2669      5F315F53 
 2669      65745478 
 2669      496E7465 
 2669      72727570 
 2670              	.LASF11:
 2671 02f2 666C6F61 		.ascii	"float\000"
 2671      7400
 2672              	.LASF47:
 2673 02f8 55415254 		.ascii	"UART_1_PutString\000"
 2673      5F315F50 
 2673      75745374 
 2673      72696E67 
 2673      00
 2674              	.LASF36:
 2675 0309 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 2675      5F315F43 
 2675      6C656172 
 2675      52784275 
 2675      66666572 
 2676              	.LASF37:
 2677 031e 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 2677      5F315F53 
 2677      65745278 
 2677      41646472 
 2677      6573734D 
 2678              	.LASF15:
 2679 0336 72656738 		.ascii	"reg8\000"
 2679      00
 2680              	.LASF1:
 2681 033b 756E7369 		.ascii	"unsigned char\000"
 2681      676E6564 
 2681      20636861 
 2681      7200
 2682              	.LASF2:
 2683 0349 73686F72 		.ascii	"short int\000"
 2683      7420696E 
 2683      7400
 2684              	.LASF22:
 2685 0353 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2685      5F315F57 
 2685      72697465 
 2685      436F6E74 
 2685      726F6C52 
 2686              	.LASF64:
 2687 036f 55415254 		.ascii	"UART_1_initVar\000"
 2687      5F315F69 
 2687      6E697456 
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 80


 2687      617200
 2688              	.LASF51:
 2689 037e 62797465 		.ascii	"byteCount\000"
 2689      436F756E 
 2689      7400
 2690              	.LASF34:
 2691 0388 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 2691      5F315F47 
 2691      65745278 
 2691      42756666 
 2691      65725369 
 2692              	.LASF60:
 2693 039f 55415254 		.ascii	"UART_1_LoadTxConfig\000"
 2693      5F315F4C 
 2693      6F616454 
 2693      78436F6E 
 2693      66696700 
 2694              	.LASF26:
 2695 03b3 72784461 		.ascii	"rxData\000"
 2695      746100
 2696              	.LASF14:
 2697 03ba 63686172 		.ascii	"char\000"
 2697      00
 2698              	.LASF13:
 2699 03bf 63686172 		.ascii	"char8\000"
 2699      3800
 2700              	.LASF18:
 2701 03c5 55415254 		.ascii	"UART_1_Init\000"
 2701      5F315F49 
 2701      6E697400 
 2702              	.LASF21:
 2703 03d1 656E6162 		.ascii	"enableInterrupts\000"
 2703      6C65496E 
 2703      74657272 
 2703      75707473 
 2703      00
 2704              	.LASF29:
 2705 03e2 73746174 		.ascii	"status\000"
 2705      757300
 2706              	.LASF28:
 2707 03e9 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 2707      5F315F52 
 2707      65616452 
 2707      78537461 
 2707      74757300 
 2708              	.LASF30:
 2709 03fd 55415254 		.ascii	"UART_1_GetChar\000"
 2709      5F315F47 
 2709      65744368 
 2709      617200
 2710              	.LASF63:
 2711 040c 433A5C55 		.ascii	"C:\\Users\\Matthew Arbesfeld\\Documents\\PSoC Creat"
 2711      73657273 
 2711      5C4D6174 
 2711      74686577 
 2711      20417262 
 2712 043b 6F725C42 		.ascii	"or\\BoxesUART\\BoxesUART.cydsn\000"
ARM GAS  C:\Users\MATTHE~1\AppData\Local\Temp\ccONFBDn.s 			page 81


 2712      6F786573 
 2712      55415254 
 2712      5C426F78 
 2712      65735541 
 2713              	.LASF50:
 2714 0458 55415254 		.ascii	"UART_1_PutArray\000"
 2714      5F315F50 
 2714      75744172 
 2714      72617900 
 2715              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
